{"version":3,"sources":["jquery.terminal.js"],"names":["ctx","sprintf","cache","hasOwnProperty","arguments","parse","format","call","parse_tree","argv","cursor","tree_length","length","node_type","arg","output","i","k","match","pad","pad_character","pad_length","get_type","push","test","toString","String","fromCharCode","parseInt","toExponential","parseFloat","toFixed","slice","toUpperCase","charAt","str_repeat","join","fmt","_fmt","arg_names","exec","field_list","replacement_field","field_match","vsprintf","_argv","splice","apply","variable","Object","prototype","toLowerCase","input","multiplier","global","window","factory","undefined","root","define","amd","jquery","wcwidth","module","exports","jQuery","require","$","debug","str","console","log","DelayQueue","callbacks","Callbacks","resolved","this","resolve","fire","add","fn","omap","o","result","each","v","text_length","map","text","get","reduce","a","b","Clone","clone_object","object","tmp","isArray","clone_array","key","array","is_function","Array","Error","item","bind","clone","Map","clear","forEach","value","delete","localStorage","hasLS","testKey","storage","setItem","removeItem","error","hasCookies","document","cookie","split","e","isLS","wls","n","c","wc","dt","Date","setTime","getTime","toGMTString","rls","rc","nn","ca","indexOf","dls","dc","extend","Storage","set","remove","debounce","FUNC_ERROR_TEXT","isObject","type","now","func","wait","options","nativeMax","Math","max","nativeMin","min","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","leadingEdge","setTimeout","timerExpired","remainingWait","timeSinceLastCall","timeSinceLastInvoke","timeWaiting","shouldInvoke","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","everyTime","interval","label","times","belay","timer","oneTime","stopTime","guid","regex","powers","ms","cs","ds","s","das","hs","ks","timeParse","trim","num","mult","element","counter","isFunction","isNaN","constructor","Number","$timers","$timerID","handler","inProgress","setInterval","timers","ret","lab","clearInterval","_fn","navigator","userAgent","one","els","undef","nativeSplit","compliantExecNpcg","self","separator","limit","flags","ignoreCase","multiline","extended","sticky","lastLastIndex","separator2","lastIndex","lastLength","RegExp","source","index","replace","caret","pos","target","isContentEditable","contentEditable","getSelection","is","focus","range1","getRangeAt","range2","cloneRange","selectNodeContents","setEnd","endContainer","endOffset","selectionStart","selection","createRange","body","createTextRange","moveToElementText","setEndPoint","range","duplicate","bookmark","getBookmark","moveToBookmark","moveStart","collapse","focusNode","setSelectionRange","select","make_callback_plugin","factory_settings","init","noop","destroy","name","callback","trigger","unbind","data_name","$this","fireWith","data","has","removeData","resizer","settings","prefix","first","on","ResizeObserver","observe","iframe","addClass","appendTo","contentWindow","observer","unobserve","find","off","touch_scroll","origin","previous","originalEvent","tagName","touches","current","preventDefault","jquery_resolve","defer","Deferred","promise","unpromise","catch","done","then","is_fully_in_viewport","is_visible","node","container","box","getBoundingClientRect","viewport","top","bottom","height","IntersectionObserver","item_observer","entries","isIntersecting","ratio","entity_re","combine_chr_re","astral_symbols_re","emoji_re","mobile_re","tablet_re","format_split_re","format_parts_re","format_re","format_exist_re","format_full_re","format_begin_re","format_start_re","format_end_re","self_closing_re","color_hex_re","url_re","url_nf_re","email_re","url_full_re","email_full_re","command_re","extended_command_re","format_exec_re","float_re","re_re","string_re","unclosed_strings_re","broken_image","use_broken_image","animation_supported","animation","domPrefixes","elm","createElement","style","animationName","agent","is_IE","is_IEMobile","is_ch_unit_supported","div","width","is_css_variables_supported","CSS","supports","is_android","is_key_native","KeyboardEvent","proto","getOwnPropertyDescriptor","is_mobile","check","substr","vendor","opera","ch_unit_bug","base","ch","space","abs","css","obj","isPlainObject","keys","setProperty","getPropertyValue","a11y_hide","attr","role","aria-hidden","excepctions","alert_exception","terminal","Exception","message","exception_message","scrollbar_event","left","offset","outerWidth","clientX","fileName","Cycle","rotate","skip","defined","filter","append","front","restart","Boolean","Stack","is_array","size","pop","concat","WorkerCache","validation","action","onCache","_onCache","_action","_validation","_cache","validate","valid","History","memory","enabled","storage_key","JSON","stringify","new_data","reset","last","end","position","next","old","purge","enable","disable","toggle","cmd_index","cmd","defaults","mask","caseSensitiveSearch","historySize","prompt","history","onPositionChange","onCommandChange","inputStyle","mobileDelete","onPaste","clickTimeout","holdTimeout","holdRepeatTimeout","mobileIngoreAutoSpace","repeatTimeoutKeys","tabindex","tabs","mobile_ignore_key","maybe_data","id","wrapper","cursor_line","clip","$node","autocapitalize","autocorrect","spellcheck","insertAfter","val","html","blur","removeAllRanges","num_chars","char_width","last_rendered_prompt","prompt_last_line","prompt_len","prompt_node","reverse_search","rev_search_str","reverse_search_position","backup_prompt","command","last_command","kill_text","formatted_position","restart_animation","paste_count","line_marker","line_marker_re","empty_marker_re","get_char_pos","closest","parent","prevAll","prevUntil","key_mapping","SPACEBAR","UP","DOWN","LEFT","RIGHT","DEL","MULTIPLY","DIVIDE","SUBTRACT","ADD","ie_key_fix","get_key","combo","ctrlKey","metaKey","shiftKey","altKey","keycodes","3","6","8","9","12","13","16","17","18","19","20","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","48","49","50","51","52","53","54","55","56","57","91","93","144","145","181","182","183","186","187","188","189","190","191","192","219","220","221","222","224","225","246","247","248","249","250","251","letter","reversed_keycodes","which","keymap","default_keymap","ALT+D","delete_forward","clipboard","HOLD+ALT+D","hold","HOLD+DELETE","HOLD+SHIFT+DELETE","ENTER","historyFilter","prev_command","no_keydown","commands","draw_prompt","SHIFT+ENTER","insert","BACKSPACE","backspace_key","SHIFT+BACKSPACE","TAB","CTRL+D","DELETE","HOLD+ARROWUP","up_arrow","ARROWUP","CTRL+ARROWUP","prev_history","CTRL+P","ARROWDOWN","down_arrow","HOLD+ARROWDOWN","CTRL+N","next_history","CTRL+ARROWDOWN","ARROWLEFT","HOLD+ARROWLEFT","CTRL+B","CTRL+ARROWLEFT","len","CTRL+R","reverse_history_search","draw_reverse_prompt","redraw","CTRL+G","ARROWRIGHT","right","HOLD+ARROWRIGHT","CTRL+F","CTRL+ARROWRIGHT","re","bare_text","F12","return_true","END","CTRL+END","CTRL+E","HOME","home","CTRL+HOME","CTRL+A","SHIFT+INSERT","paste_event","CTRL+SHIFT+T","CTRL+W","delete_backward","HOLD+BACKSPACE","HOLD+SHIFT+BACKSPACE","CTRL+H","CTRL+X","CTRL+C","get_selected_html","CTRL+T","CTRL+Y","CTRL+V","META+V","CTRL+K","text_to_clipboard","CTRL+U","CTRL+TAB","META+`","META+R","META+L","delete_character_forward","delete_word_forward","substring","m","delete_character_backward","delete_word_backward","isenabled","paste","fix_textarea","first_up_history","have_newlines","string","have_wrapping","lengths","line","wrap","simple_split_command_line","formatted","lines","split_equal","escape_regex","unescape_brackets","formatting","strip","before","col","column","prev","splitted","left_over","diff","after","$line","ending","lastIndexOf","sum","mobile_focus","$clip","fix_cursor","getComputedStyle","_class","className","position_only","removeClass","new_cursor","insertBefore","animating","blink","toggleClass","clear_reverse_state","history_data","save_string","j","get_char_width","$prompt","get_num_chars","floor","process_cmd_line","skip_empty","nextUntil","escape_brackets","first_len","strlen","cmd_line_worker","_previous_value","_cols","split_command_line","skip_formatted_position","escape_formatting","format_options","unixFormattingEscapeBrackets","apply_formatters","normalize","stack","encoded","encode","allowedAttributes","partition","raw","is_multiline","start","is_emoji_formatting","is_formatting","draw_cursor_line","end_line","cursor_end_line","empty_cursor","before_str","c_before","cursor_len","lines_after","last_ins","lines_before","display","original_string","from_last","last_len","new_pos","line_index","current_len","msg","strings","redrawError","in_line","find_position","make_guess","opts","cmp","search_pos","guess","next_guess","codepoint_len","binary_search","chars","split_characters","prev_prompt_data","crlf","have_formatting","format_split","encoded_last_line","last_line","spans","hide","show","fire_change_command","option","stay","removed","silent","new_keymap","original","bare_command","doc","keypress_event","keydown_event","input_event","include_prompt","user_prompt","should_redraw","relative","refresh","display_position","command_len","new_formatted_pos","visible","resize","new_num_chars","invoke_key","shortcut","ctrl","shift","alt","meta","Event","documentElement","keyCode","new_mask","skip_keypress","dead_key","single_key","no_keypress","no_key","backspace","process","hold_pause","skip_insert","prev_key","is_backspace","is_single","is_delay_key","specials","clear_reverse_search_key","skip_keydown","fake","exception","keydown","clear_hold","is_terminal_selected","keypress","normalized","inArray","event","chr","skip_input","get_next_character","keycode","charCodeAt","was_down","count","$target","is_prompt","down","button","count_selfclosing_formatting","safe","char_len","make_re_fn","starts_with","make_next_char_fun","tests","m1","m2","match_entity","match_combo","match_emoji","astral_match","normalize_position","acc","char_width_prop","extra_css","bare","wide_characters","specs","arr","spec","make_string","compare_fn","more_args","mid","startContainer","parentNode","term","sel","rangeCount","appendChild","cloneContents","innerHTML","with_selection","ranges","addRange","process_selected_line","$self","hasClass","process_div","process_selected_html","stdout","$html","$cmd_lines","queryCommandSupported","$textarea","had_focus","writeText","execCommand","$text","get_textarea_selection","textarea","selectionEnd","clear_textarea_selection","common_string","matchCase","string_case","candidate","candidateLower","currentLower","trigger_terminal_change","terminals","onTerminalChange","setBaseAndExtent","setStart","childNodes","process_command","quotes","rest","args_quotes","version","date","color_names","valid_color","color","unclosed_strings","special","tracking_replace","rex","replacement","new_string","rep_string","new_position","last_index","c0","rep_len","iterate_formatting","is_space","is_open_formatting","is_escape_bracket","is_text","not_formatting","opening","next_iteration","char","is_next_space","prev_space","is_last","in_text","space_count","re_ent","braket","start_index","end_index","start_formatting","end_formatting","prev_index","_","semicolons","amp","keep_words","prev_format","first_index","line_length","last_bracket","can_break","stripped","text_len","after_index","new_index","closed_formatting","matched","sp","nested_formatting","get_inherit_style","ignore","__inherit__","test_lengths","formatter","__no_warn__","warn","formatters","apply_function_formatter","__meta__","found_position","partials","this_len","length_before","loop","after_len","position_partial","partial","linksNoReferrer","linksNoFollow","escape","anyLinks","filter_attr_names","names","allowed","filters","clean_data","add_attrs","attrs","rel_attr","rel","unshift","is_path","url","with_url_validation","valid_href","valid_src","background","data_text","style_str","text_decoration","extra","columns","cols","no_formatting","column_limit","whole","bracket","active","last_id","parse_argument","strict","parse_string","quote","parse_arguments","split_arguments","parse_command","split_command","parse_options","boolean","token","single","extended_command","invokeMethods","change_hash","eval","iterator","Symbol","replacer","search","new_formatter","Terminal_Exception","hidden","warnings","ids","jrpc","method","params","success","deferred","validJSONRPC","response","isNumeric","request","jsonrpc","ajax","beforeSend","jxhr","status","jqXHR","content_type","getResponseHeader","json","reject","contentType","dataType","async","terminal_ready","get_char_size","rect","visiblity","temp","char_size","get_num_rows","all","same","same_case","is_promise","version_set","copyright","version_string","reg","name_ver","signatures","exit","maskChar","checkArity","exceptionHandler","pauseEvents","softPause","mousewheel","touchscroll","cancelableAjax","processArguments","processRPCResponse","completionEscape","convertLinks","scrollObject","historyState","importHistory","echoCommand","scrollOnEcho","login","outputLimit","onAjaxError","pasteImage","scrollBottomOffset","wordAutocomplete","caseSensitiveAutocomplete","describe","onRPCError","doubleTab","doubleTabEchoCommand","ansiParser","completion","onInit","onClear","onBlur","onFocus","onExit","onPush","onPop","renderHandler","onAfterRedraw","onEchoCommand","onFlush","onBeforeCommand","onAfterCommand","onBeforeEcho","onAfterEcho","onBeforeLogin","onAfterLogout","onBeforeLogout","comletionParameters","wrongPasswordTryAgain","wrongPassword","ajaxAbortError","wrongArity","commandNotFound","oneRPCWithIgnore","oneInterpreterFunction","loginFunctionMissing","noTokenError","serverResponse","wrongGreetings","notWhileLogin","loginIsNotAFunction","canExitError","invalidCompletion","invalidSelector","invalidTerminalId","password","recursiveLoop","notAString","invalidStrings","defunctTerminal","requests","save_state","hash_commands","fire_hash_change","first_instance","init_interpreter","StorageHelper","get_processed_command","preprocess_value","is_node","unmount","prepare_render","finalize","replaceWith","render","echo","get_node","Element","display_object","print_line","url_spec","pause","file","code","resume","display_json_rpc_error","at","make_basic_json_rpc","auth","interpreter","display_exception","ajax_error","make_object_interpreter","arity","fallback","user_command","onCommandNotFound","xhr","responseText","make_json_rpc_object","jrpc_success","jrpc_request","jrpc_response","procs","field","interpreter_object","proc","args_len","help","found","make_interpreter","user_intrp","rpc_count","fn_interpreter","recur","interpreters","new_obj","make_json_rpc_login","user","passwd","output_buffer","NEW_LINE","format_cache","buffer_line","use_cache","useCache","format_buff","newline","links","escaped","should_wrap","string_cache","process_line","line_settings","stringify_value","parts","prev_exec_cmd","words","keepWords","update","scroll","command_line","detached_output","empty","detach","lines_to_show","rows","pivot","fire_event","limit_lines","$lines","for_remove","parents","show_greetings","greetings","signature","make_label_error","echo_command","get_command","have_scrollbar","fill","restore_state","command_idx","import_view","export_view","maybe_update_hash","location","hash","first_command","resume_callbacks","init_state","execHash","after_exec","saved_change_hash","invoke","force_awake","when","paused","ghost","level","logout","in_login","get_token","set_token","global_logout","clear_loging_storage","global_login_fn","initialize","prefix_name","maybe_append_name","interpreter_name","prepare_top_interpreter","login_name","context_callback_proxy","fun","init_queue","onStart","skip_local","scroll_to_view","scroll_to","it","make_cursor_visible","hashchange","decodeURIComponent","was_paused","onPause","user_key_down","get_position","set_command","CTRL+L","orignal","caseSensitive","before_cursor","complete","word","scroll_to_bottom","PAGEDOWN","PAGEUP","key_down","tab_count","r","readyState","abort","key_press","ready","queue","selector","body_terminal","terminal_id","prop","scrollTop","user_export","get_prompt","view","when_ready","set_prompt","ignore_hash","state","d","cmd_ready","delayed_commands","autologin","infinite","logins","popUserPass","login_callback","set_mask","pass","cmd_strings","double_quotes","single_quote","prev_string","sensitive","slash","matched_strings","pre","post","to_insert","set_position","reverse","common","set_interpreter","overwrite_interpreter","numChars","numRows","num_rows","history_state","run","setImmediate","clear_history_state","x","animate","freeze","frozen","clear_cache","is_bottom","get_output","new_num_rows","self_offset","--terminal-x","--terminal-y","e1","e2","remove_line","arg_defined","locals","img","Image","onerror","src","lineNumber","trace","amount","round","local","local_name","intrp","read","infiniteLogin","push_settings","object_or_name","font_resizer","blur_terminal","focus_terminal","visibility_observer","scroll_marker","is_bottom_observer","mutation_observer","disconnect","$body","removeAttr","defunct","elem","scrollHeight","is_bottom_detected","scroll_height","scroll_top","offsetHeight","command_queue","old_width","old_height","old_enabled","ignoreSystemDescribe","base_interpreter","parseObject","proxy","is_type","echo_image","image","data_uri","blob","URL","webkitURL","createObjectURL","ignoreEvents","Blob","clipboardData","items","getAsFile","getAsString","getData","onResize","elementFromPoint","clientY","$win","addEventListener","move","SENSITIVITY","HOLD_TIME","touch_event","point","y","diff_x","diff_y","click","ignore_elements","mousedown","mouseup","timeout","dblclick","is_context_event","buttons","pageX","pageY","props","href","calculate_char_size","create_resizers","bottom_detect","intersections","intersectionRatio","create_bottom_detect","marker","observe_visibility","was_enabled","visibility_checker","in_dom","MutationObsrv","MutationObserver","WebKitMutationObserver","childList","exec_spec","delta","stopPropagation","onmousewheel","wheelDelta","deltaY","detail"],"mappings":"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","sourcesContent":["/**@license\n *       __ _____                     ________                              __\n *      / // _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___  / /\n *  __ / // // // // // _  // _// // / / // _  // _//     // //  \\/ // _ \\/ /\n * /  / // // // // // ___// / / // / / // ___// / / / / // // /\\  // // / /__\n * \\___//____ \\\\___//____//_/ _\\_  / /_//____//_/ /_/ /_//_//_/ /_/ \\__\\_\\___/\n *           \\/              /____/                              version 2.17.1\n *\n * This file is part of jQuery Terminal. https://terminal.jcubic.pl\n *\n * Copyright (c) 2010-2020 Jakub T. Jankiewicz <https://jcubic.pl/m>e\n * Released under the MIT license\n *\n * Contains:\n *\n * Storage plugin Distributed under the MIT License\n * modified to work from Data URIs that block storage and cookies in Chrome\n * Copyright (c) 2010 Dave Schindler\n *\n * jQuery Timers licenced with the WTFPL\n * <http://jquery.offput.ca/timers/>\n *\n * Cross-Browser Split 1.1.1\n * Copyright 2007-2012 Steven Levithan <stevenlevithan.com>\n * Available under the MIT License\n *\n * jQuery Caret\n * Copyright (c) 2009, Gideon Sireling\n * 3 clause BSD License\n *\n * sprintf.js\n * Copyright (c) 2007-2013 Alexandru Marasteanu <hello at alexei dot ro>\n * licensed under 3 clause BSD license\n *\n * debounce function from Lodash\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * The MIT License\n *\n * emoji regex v7.0.1 by Mathias Bynens\n * MIT license\n *\n * broken image by Sophia Bai from the Noun Project (CC-BY)\n *\n * Date: Sun, 31 May 2020 16:15:43 +0000\n */\n/* global define, Map */\n/* eslint-disable */\n/* istanbul ignore next */\n(function(ctx) {\n    var sprintf = function() {\n        if (!sprintf.cache.hasOwnProperty(arguments[0])) {\n            sprintf.cache[arguments[0]] = sprintf.parse(arguments[0]);\n        }\n        return sprintf.format.call(null, sprintf.cache[arguments[0]], arguments);\n    };\n    sprintf.format = function(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, node_type = '', arg, output = [], i, k, match, pad, pad_character, pad_length;\n        for (i = 0; i < tree_length; i++) {\n            node_type = get_type(parse_tree[i]);\n            if (node_type === 'string') {\n                output.push(parse_tree[i]);\n            }\n            else if (node_type === 'array') {\n                match = parse_tree[i]; // convenience purposes only\n                if (match[2]) { // keyword argument\n                    arg = argv[cursor];\n                    for (k = 0; k < match[2].length; k++) {\n                        if (!arg.hasOwnProperty(match[2][k])) {\n                            throw(sprintf('[sprintf] property \"%s\" does not exist', match[2][k]));\n                        }\n                        arg = arg[match[2][k]];\n                    }\n                }\n                else if (match[1]) { // positional argument (explicit)\n                    arg = argv[match[1]];\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++];\n                }\n\n                if (/[^s]/.test(match[8]) && (get_type(arg) !== 'number')) {\n                    throw(sprintf('[sprintf] expecting number but found %s', get_type(arg)));\n                }\n                switch (match[8]) {\n                    case 'b': arg = arg.toString(2); break;\n                    case 'c': arg = String.fromCharCode(arg); break;\n                    case 'd': arg = parseInt(arg, 10); break;\n                    case 'e': arg = match[7] ? arg.toExponential(match[7]) : arg.toExponential(); break;\n                    case 'f': arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg); break;\n                    case 'o': arg = arg.toString(8); break;\n                    case 's': arg = ((arg = String(arg)) && match[7] ? arg.slice(0, match[7]) : arg); break;\n                    case 'u': arg = arg >>> 0; break;\n                    case 'x': arg = arg.toString(16); break;\n                    case 'X': arg = arg.toString(16).toUpperCase(); break;\n                }\n                arg = (/[def]/.test(match[8]) && match[3] && arg >= 0 ? ' +' + arg : arg);\n                pad_character = match[4] ? match[4] === '0' ? '0' : match[4].charAt(1) : ' ';\n                pad_length = match[6] - String(arg).length;\n                pad = match[6] ? str_repeat(pad_character, pad_length) : '';\n                output.push(match[5] ? arg + pad : pad + arg);\n            }\n        }\n        return output.join('');\n    };\n\n    sprintf.cache = {};\n\n    sprintf.parse = function(fmt) {\n        var _fmt = fmt, match = [], parse_tree = [], arg_names = 0;\n        while (_fmt) {\n            if ((match = /^[^\\x25]+/.exec(_fmt)) !== null) {\n                parse_tree.push(match[0]);\n            }\n            else if ((match = /^\\x25{2}/.exec(_fmt)) !== null) {\n                parse_tree.push('%');\n            }\n            else if ((match = /^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-fosuxX])/.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1;\n                    var field_list = [], replacement_field = match[2], field_match = [];\n                    if ((field_match = /^([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1]);\n                        while ((replacement_field = replacement_field.slice(field_match[0].length)) !== '') {\n                            if ((field_match = /^\\.([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1]);\n                            }\n                            else if ((field_match = /^\\[(\\d+)\\]/.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1]);\n                            }\n                            else {\n                                throw('[sprintf] huh?');\n                            }\n                        }\n                    }\n                    else {\n                        throw('[sprintf] huh?');\n                    }\n                    match[2] = field_list;\n                }\n                else {\n                    arg_names |= 2;\n                }\n                if (arg_names === 3) {\n                    throw('[sprintf] mixing positional and named placeholders is not (yet) supported');\n                }\n                parse_tree.push(match);\n            }\n            else {\n                throw('[sprintf] huh?');\n            }\n            _fmt = _fmt.slice(match[0].length);\n        }\n        return parse_tree;\n    };\n\n    var vsprintf = function(fmt, argv, _argv) {\n        _argv = argv.slice(0);\n        _argv.splice(0, 0, fmt);\n        return sprintf.apply(null, _argv);\n    };\n\n    /**\n     * helpers\n     */\n    function get_type(variable) {\n        return Object.prototype.toString.call(variable).slice(8, -1).toLowerCase();\n    }\n\n    function str_repeat(input, multiplier) {\n        for (var output = []; multiplier > 0; output[--multiplier] = input) {/* do nothing */}\n        return output.join('');\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    ctx.sprintf = sprintf;\n    ctx.vsprintf = vsprintf;\n})(typeof global !== \"undefined\" ? global : window);\n// -----------------------------------------------------------------------\n/* eslint-enable */\n// UMD taken from https://github.com/umdjs/umd\n(function(factory, undefined) {\n    var root = typeof window !== 'undefined' ? window : global;\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        // istanbul ignore next\n        define(['jquery', 'wcwidth'], function(jquery, wcwidth) {\n            factory(jquery, wcwidth, root);\n            return jquery;\n        });\n    } else if (typeof module === 'object' && module.exports) {\n        // Node/CommonJS\n        module.exports = function(root, jQuery, wcwidth) {\n            if (jQuery === undefined) {\n                // require('jQuery') returns a factory that requires window to\n                // build a jQuery instance, we normalize how we use modules\n                // that require this pattern but the window provided is a noop\n                // if it's defined (how jquery works)\n                if (window !== undefined) {\n                    jQuery = require('jquery');\n                } else {\n                    jQuery = require('jquery')(root);\n                }\n            }\n            if (wcwidth === undefined) {\n                wcwidth = require('wcwidth');\n            }\n            factory(jQuery, wcwidth, root);\n            return jQuery;\n        };\n    } else {\n        // Browser\n        // istanbul ignore next\n        factory(root.jQuery, root.wcwidth, root);\n    }\n})(function($, wcwidth, root, undefined) {\n    'use strict';\n    // -----------------------------------------------------------------------\n    // :: debug functions\n    // -----------------------------------------------------------------------\n    /* eslint-disable */\n    /* istanbul ignore next */\n    function debug(str) {\n        if (false) {\n            console.log(str);\n            //$.terminal.active().echo(str);\n        }\n    }\n    /* eslint-enable */\n    // -----------------------------------------------------------------------\n    // :: Replacemenet for jQuery 2 deferred objects\n    // -----------------------------------------------------------------------\n    function DelayQueue() {\n        var callbacks = $.Callbacks();\n        var resolved = false;\n        this.resolve = function() {\n            callbacks.fire();\n            resolved = true;\n        };\n        this.add = function(fn) {\n            if (resolved) {\n                fn();\n            } else {\n                callbacks.add(fn);\n            }\n        };\n    }\n    // -----------------------------------------------------------------------\n    // :: map object to object\n    // -----------------------------------------------------------------------\n    $.omap = function(o, fn) {\n        var result = {};\n        $.each(o, function(k, v) {\n            result[k] = fn.call(o, k, v);\n        });\n        return result;\n    };\n    $.fn.text_length = function() {\n        return this.map(function() {\n            return $(this).text().length;\n        }).get().reduce(function(a, b) {\n            return a + b;\n        }, 0);\n    };\n    // -----------------------------------------------------------------------\n    // :: Deep clone of objects and arrays\n    // -----------------------------------------------------------------------\n    var Clone = {\n        clone_object: function(object) {\n            var tmp = {};\n            if (typeof object === 'object') {\n                if ($.isArray(object)) {\n                    return this.clone_array(object);\n                } else if (object === null) {\n                    return object;\n                } else {\n                    for (var key in object) {\n                        if ($.isArray(object[key])) {\n                            tmp[key] = this.clone_array(object[key]);\n                        } else if (typeof object[key] === 'object') {\n                            tmp[key] = this.clone_object(object[key]);\n                        } else {\n                            tmp[key] = object[key];\n                        }\n                    }\n                }\n            }\n            return tmp;\n        },\n        clone_array: function(array) {\n            if (!is_function(Array.prototype.map)) {\n                throw new Error(\"Your browser don't support ES5 array map \" +\n                                'use es5-shim');\n            }\n            return array.slice(0).map(function(item) {\n                if (typeof item === 'object') {\n                    return this.clone_object(item);\n                } else {\n                    return item;\n                }\n            }.bind(this));\n        }\n    };\n    var clone = function(object) {\n        return Clone.clone_object(object);\n    };\n    // -----------------------------------------------------------------------\n    // IE11 polyfill\n    // -----------------------------------------------------------------------\n    /* eslint-disable */\n    if (!('clear' in Map.prototype)) {\n        Map.prototype.clear = function() {\n            this.forEach(function(value, key, map) {\n                map.delete(key);\n            });\n        };\n    }\n    // -----------------------------------------------------------------------\n    // :: Storage plugin\n    // -----------------------------------------------------------------------\n    var localStorage;\n    /* istanbul ignore next */\n    (function() {\n        var hasLS = function() {\n            try {\n                var testKey = 'test', storage = window.localStorage;\n                storage.setItem(testKey, '1');\n                storage.removeItem(testKey);\n                return true;\n            } catch (error) {\n                return false;\n            }\n        };\n        var hasCookies = function() {\n            try {\n                document.cookie.split(';');\n                return true;\n            } catch (e) {\n                return false;\n            }\n        };\n        // Private data\n        var isLS = hasLS();\n        // Private functions\n        function wls(n, v) {\n            var c;\n            if (typeof n === 'string' && typeof v === 'string') {\n                localStorage[n] = v;\n                return true;\n            } else if (typeof n === 'object' && typeof v === 'undefined') {\n                for (c in n) {\n                    if (n.hasOwnProperty(c)) {\n                        localStorage[c] = n[c];\n                    }\n                }\n                return true;\n            }\n            return false;\n        }\n        function wc(n, v) {\n            var dt, e, c;\n            dt = new Date();\n            dt.setTime(dt.getTime() + 31536000000);\n            e = '; expires=' + dt.toGMTString();\n            if (typeof n === 'string' && typeof v === 'string') {\n                document.cookie = n + '=' + v + e + '; path=/';\n                return true;\n            } else if (typeof n === 'object' && typeof v === 'undefined') {\n                for (c in n) {\n                    if (n.hasOwnProperty(c)) {\n                        document.cookie = c + '=' + n[c] + e + '; path=/';\n                    }\n                }\n                return true;\n            }\n            return false;\n        }\n        function rls(n) {\n            return localStorage[n];\n        }\n        function rc(n) {\n            var nn, ca, i, c;\n            nn = n + '=';\n            ca = document.cookie.split(';');\n            for (i = 0; i < ca.length; i++) {\n                c = ca[i];\n                while (c.charAt(0) === ' ') {\n                    c = c.slice(1, c.length);\n                }\n                if (c.indexOf(nn) === 0) {\n                    return c.slice(nn.length, c.length);\n                }\n            }\n            return null;\n        }\n        function dls(n) {\n            return delete localStorage[n];\n        }\n        function dc(n) {\n            return wc(n, '', -1);\n        }\n        /**\n         * Public API\n         * $.Storage.set(\"name\", \"value\")\n         * $.Storage.set({\"name1\":\"value1\", \"name2\":\"value2\", etc})\n         * $.Storage.get(\"name\")\n         * $.Storage.remove(\"name\")\n         */\n        if (!hasCookies() && !isLS) {\n            localStorage = {};\n            $.extend({\n                Storage: {\n                    set: wls,\n                    get: rls,\n                    remove: dls\n                }\n            });\n        } else {\n            if (isLS) {\n                localStorage = window.localStorage;\n            }\n            $.extend({\n                Storage: {\n                    set: isLS ? wls : wc,\n                    get: isLS ? rls : rc,\n                    remove: isLS ? dls : dc\n                }\n            });\n        }\n    })();\n    // -----------------------------------------------------------------------\n    // :: Debounce from Lodash\n    // -----------------------------------------------------------------------\n    /* istanbul ignore next */\n    var debounce = (function() {\n        var FUNC_ERROR_TEXT = 'Expected a function';\n        function isObject(value) {\n            var type = typeof value;\n            return value != null && (type == 'object' || type == 'function');\n        }\n        function now() {\n            return Date.now();\n        }\n        return function debounce(func, wait, options) {\n            var nativeMax = Math.max,\n                nativeMin = Math.min;\n\n            var lastArgs,\n                lastThis,\n                maxWait,\n                result,\n                timerId,\n                lastCallTime,\n                lastInvokeTime = 0,\n                leading = false,\n                maxing = false,\n                trailing = true;\n\n            if (typeof func != 'function') {\n                throw new TypeError(FUNC_ERROR_TEXT);\n            }\n            wait = wait || 0;\n            if (isObject(options)) {\n                leading = !!options.leading;\n                maxing = 'maxWait' in options;\n                maxWait = maxing ? nativeMax(options.maxWait || 0, wait) : maxWait;\n                trailing = 'trailing' in options ? !!options.trailing : trailing;\n            }\n\n            function invokeFunc(time) {\n                var args = lastArgs,\n                    thisArg = lastThis;\n\n                lastArgs = lastThis = undefined;\n                lastInvokeTime = time;\n                result = func.apply(thisArg, args);\n                return result;\n            }\n\n            function leadingEdge(time) {\n                // Reset any `maxWait` timer.\n                lastInvokeTime = time;\n                // Start the timer for the trailing edge.\n                timerId = setTimeout(timerExpired, wait);\n                // Invoke the leading edge.\n                return leading ? invokeFunc(time) : result;\n            }\n\n            function remainingWait(time) {\n                var timeSinceLastCall = time - lastCallTime,\n                    timeSinceLastInvoke = time - lastInvokeTime,\n                    timeWaiting = wait - timeSinceLastCall;\n\n                return maxing\n                    ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n                    : timeWaiting;\n            }\n\n            function shouldInvoke(time) {\n                var timeSinceLastCall = time - lastCallTime,\n                    timeSinceLastInvoke = time - lastInvokeTime;\n\n                // Either this is the first call, activity has stopped and we're at the\n                // trailing edge, the system time has gone backwards and we're treating\n                // it as the trailing edge, or we've hit the `maxWait` limit.\n                return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n                        (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n            }\n\n            function timerExpired() {\n                var time = now();\n                if (shouldInvoke(time)) {\n                    return trailingEdge(time);\n                }\n                // Restart the timer.\n                timerId = setTimeout(timerExpired, remainingWait(time));\n            }\n\n            function trailingEdge(time) {\n                timerId = undefined;\n\n                // Only invoke if we have `lastArgs` which means `func` has been\n                // debounced at least once.\n                if (trailing && lastArgs) {\n                    return invokeFunc(time);\n                }\n                lastArgs = lastThis = undefined;\n                return result;\n            }\n\n            function cancel() {\n                if (timerId !== undefined) {\n                    clearTimeout(timerId);\n                }\n                lastInvokeTime = 0;\n                lastArgs = lastCallTime = lastThis = timerId = undefined;\n            }\n\n            function flush() {\n                return timerId === undefined ? result : trailingEdge(now());\n            }\n\n            function debounced() {\n                var time = now(),\n                    isInvoking = shouldInvoke(time);\n\n                lastArgs = arguments;\n                lastThis = this;\n                lastCallTime = time;\n\n                if (isInvoking) {\n                    if (timerId === undefined) {\n                        return leadingEdge(lastCallTime);\n                    }\n                    if (maxing) {\n                        // Handle invocations in a tight loop.\n                        timerId = setTimeout(timerExpired, wait);\n                        return invokeFunc(lastCallTime);\n                    }\n                }\n                if (timerId === undefined) {\n                    timerId = setTimeout(timerExpired, wait);\n                }\n                return result;\n            }\n            debounced.cancel = cancel;\n            debounced.flush = flush;\n            return debounced;\n        };\n    })();\n    // -----------------------------------------------------------------------\n    // :: jQuery Timers\n    // -----------------------------------------------------------------------\n    var jQuery = $;\n    /* istanbul ignore next */\n    (function($) {\n        jQuery.fn.extend({\n            everyTime: function(interval, label, fn, times, belay) {\n                return this.each(function() {\n                    jQuery.timer.add(this, interval, label, fn, times, belay);\n                });\n            },\n            oneTime: function(interval, label, fn) {\n                return this.each(function() {\n                    jQuery.timer.add(this, interval, label, fn, 1);\n                });\n            },\n            stopTime: function(label, fn) {\n                return this.each(function() {\n                    jQuery.timer.remove(this, label, fn);\n                });\n            }\n        });\n\n        jQuery.extend({\n            timer: {\n                guid: 1,\n                global: {},\n                regex: /^([0-9]+)\\s*(.*s)?$/,\n                powers: {\n                    // Yeah this is major overkill...\n                    'ms': 1,\n                    'cs': 10,\n                    'ds': 100,\n                    's': 1000,\n                    'das': 10000,\n                    'hs': 100000,\n                    'ks': 1000000\n                },\n                timeParse: function(value) {\n                    if (value === undefined || value === null) {\n                        return null;\n                    }\n                    var result = this.regex.exec(jQuery.trim(value.toString()));\n                    if (result[2]) {\n                        var num = parseInt(result[1], 10);\n                        var mult = this.powers[result[2]] || 1;\n                        return num * mult;\n                    } else {\n                        return value;\n                    }\n                },\n                add: function(element, interval, label, fn, times, belay) {\n                    var counter = 0;\n\n                    if (jQuery.isFunction(label)) {\n                        if (!times) {\n                            times = fn;\n                        }\n                        fn = label;\n                        label = interval;\n                    }\n\n                    interval = jQuery.timer.timeParse(interval);\n\n                    if (typeof interval !== 'number' ||\n                        isNaN(interval) ||\n                        interval <= 0) {\n                        return;\n                    }\n                    if (times && times.constructor !== Number) {\n                        belay = !!times;\n                        times = 0;\n                    }\n\n                    times = times || 0;\n                    belay = belay || false;\n\n                    if (!element.$timers) {\n                        element.$timers = {};\n                    }\n                    if (!element.$timers[label]) {\n                        element.$timers[label] = {};\n                    }\n                    fn.$timerID = fn.$timerID || this.guid++;\n\n                    var handler = function() {\n                        if (belay && handler.inProgress) {\n                            return;\n                        }\n                        handler.inProgress = true;\n                        if ((++counter > times && times !== 0) ||\n                            fn.call(element, counter) === false) {\n                            jQuery.timer.remove(element, label, fn);\n                        }\n                        handler.inProgress = false;\n                    };\n\n                    handler.$timerID = fn.$timerID;\n\n                    if (!element.$timers[label][fn.$timerID]) {\n                        element.$timers[label][fn.$timerID] = window.setInterval(handler, interval);\n                    }\n\n                    if (!this.global[label]) {\n                        this.global[label] = [];\n                    }\n                    this.global[label].push(element);\n\n                },\n                remove: function(element, label, fn) {\n                    var timers = element.$timers, ret;\n\n                    if (timers) {\n\n                        if (!label) {\n                            for (var lab in timers) {\n                                if (timers.hasOwnProperty(lab)) {\n                                    this.remove(element, lab, fn);\n                                }\n                            }\n                        } else if (timers[label]) {\n                            if (fn) {\n                                if (fn.$timerID) {\n                                    window.clearInterval(timers[label][fn.$timerID]);\n                                    delete timers[label][fn.$timerID];\n                                }\n                            } else {\n                                for (var _fn in timers[label]) {\n                                    if (timers[label].hasOwnProperty(_fn)) {\n                                        window.clearInterval(timers[label][_fn]);\n                                        delete timers[label][_fn];\n                                    }\n                                }\n                            }\n\n                            for (ret in timers[label]) {\n                                if (timers[label].hasOwnProperty(ret)) {\n                                    break;\n                                }\n                            }\n                            if (!ret) {\n                                ret = null;\n                                delete timers[label];\n                            }\n                        }\n\n                        for (ret in timers) {\n                            if (timers.hasOwnProperty(ret)) {\n                                break;\n                            }\n                        }\n                        if (!ret) {\n                            element.$timers = null;\n                        }\n                    }\n                }\n            }\n        });\n        if (/(msie) ([\\w.]+)/.exec(navigator.userAgent.toLowerCase())) {\n            $(window).one('unload', function() {\n                var global = jQuery.timer.global;\n                for (var label in global) {\n                    if (global.hasOwnProperty(label)) {\n                        var els = global[label], i = els.length;\n                        while (--i) {\n                            jQuery.timer.remove(els[i], label);\n                        }\n                    }\n                }\n            });\n        }\n    })(jQuery);\n    // -----------------------------------------------------------------------\n    // :: CROSS BROWSER SPLIT\n    // -----------------------------------------------------------------------\n    /* istanbul ignore next */\n    (function(undef) {\n        // prevent double include\n\n        if (!String.prototype.split.toString().match(/\\[native/)) {\n            return;\n        }\n\n        var nativeSplit = String.prototype.split,\n        compliantExecNpcg = /()??/.exec(\"\")[1] === undef, // NPCG: nonparticipating capturing group\n        self;\n\n        self = function(str, separator, limit) {\n            // If `separator` is not a regex, use `nativeSplit`\n            if (Object.prototype.toString.call(separator) !== \"[object RegExp]\") {\n                return nativeSplit.call(str, separator, limit);\n            }\n            var output = [],\n            flags = (separator.ignoreCase ? \"i\" : \"\") +\n                (separator.multiline  ? \"m\" : \"\") +\n                (separator.extended   ? \"x\" : \"\") + // Proposed for ES6\n                (separator.sticky     ? \"y\" : \"\"), // Firefox 3+\n                lastLastIndex = 0,\n            // Make `global` and avoid `lastIndex` issues by working with a copy\n            separator2, match, lastIndex, lastLength;\n            separator = new RegExp(separator.source, flags + \"g\");\n            str += \"\"; // Type-convert\n            if (!compliantExecNpcg) {\n                // Doesn't need flags gy, but they don't hurt\n                separator2 = new RegExp(\"^\" + separator.source + \"$(?!\\\\s)\", flags);\n            }\n            /* Values for `limit`, per the spec:\n             * If undefined: 4294967295 // Math.pow(2, 32) - 1\n             * If 0, Infinity, or NaN: 0\n             * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\n             * If negative number: 4294967296 - Math.floor(Math.abs(limit))\n             * If other: Type-convert, then use the above rules\n             */\n            // ? Math.pow(2, 32) - 1 : ToUint32(limit)\n            limit = limit === undef ? -1 >>> 0 : limit >>> 0;\n            while (match = separator.exec(str)) {\n                    // `separator.lastIndex` is not reliable cross-browser\n                    lastIndex = match.index + match[0].length;\n                    if (lastIndex > lastLastIndex) {\n                        output.push(str.slice(lastLastIndex, match.index));\n                        // Fix browsers whose `exec` methods don't consistently return `undefined` for\n                        // nonparticipating capturing groups\n                        if (!compliantExecNpcg && match.length > 1) {\n                            match[0].replace(separator2, function() {\n                                for (var i = 1; i < arguments.length - 2; i++) {\n                                    if (arguments[i] === undef) {\n                                        match[i] = undef;\n                                    }\n                                }\n                            });\n                        }\n                        if (match.length > 1 && match.index < str.length) {\n                            Array.prototype.push.apply(output, match.slice(1));\n                        }\n                        lastLength = match[0].length;\n                        lastLastIndex = lastIndex;\n                        if (output.length >= limit) {\n                            break;\n                        }\n                    }\n                    if (separator.lastIndex === match.index) {\n                        separator.lastIndex++; // Avoid an infinite loop\n                    }\n                }\n            if (lastLastIndex === str.length) {\n                if (lastLength || !separator.test(\"\")) {\n                    output.push(\"\");\n                }\n            } else {\n                output.push(str.slice(lastLastIndex));\n            }\n            return output.length > limit ? output.slice(0, limit) : output;\n        };\n\n        // For convenience\n        String.prototype.split = function(separator, limit) {\n            return self(this, separator, limit);\n        };\n\n        return self;\n\n    })();\n    // -----------------------------------------------------------------------\n    // :: jQuery Caret\n    // -----------------------------------------------------------------------\n    /* istanbul ignore next */\n    $.fn.caret = function(pos) {\n        var target = this[0];\n        var isContentEditable = target.contentEditable === 'true';\n        //get\n        if (arguments.length === 0) {\n            //HTML5\n            if (window.getSelection) {\n                //contenteditable\n                if (isContentEditable) {\n                    if (!this.is(':focus')) {\n                        target.focus();\n                    }\n                    var range1 = window.getSelection().getRangeAt(0),\n                    range2 = range1.cloneRange();\n                    range2.selectNodeContents(target);\n                    range2.setEnd(range1.endContainer, range1.endOffset);\n                    return range2.toString().length;\n                }\n                //textarea\n                return target.selectionStart;\n            }\n            //IE<9\n            if (document.selection) {\n                target.focus();\n                //contenteditable\n                if (isContentEditable) {\n                    var range1 = document.selection.createRange(),\n                    range2 = document.body.createTextRange();\n                    range2.moveToElementText(target);\n                    range2.setEndPoint('EndToEnd', range1);\n                    return range2.text.length;\n                }\n                //textarea\n                var pos = 0,\n                range = target.createTextRange(),\n                range2 = document.selection.createRange().duplicate(),\n                bookmark = range2.getBookmark();\n                range.moveToBookmark(bookmark);\n                while (range.moveStart('character', -1) !== 0) pos++;\n                return pos;\n            }\n            //not supported\n            return 0;\n        }\n        //set\n        if (pos === -1)\n            pos = this[isContentEditable? 'text' : 'val']().length;\n        //HTML5\n        if (window.getSelection) {\n            //contenteditable\n            if (isContentEditable) {\n                if (!this.is(':focus')) {\n                    target.focus();\n                }\n                var selection = window.getSelection();\n                selection.collapse(selection.focusNode, pos);\n            }\n            //textarea\n            else\n                target.setSelectionRange(pos, pos);\n        }\n        //IE<9\n        else if (document.body.createTextRange) {\n            var range = document.body.createTextRange();\n            range.moveToElementText(target);\n            range.moveStart('character', pos);\n            range.collapse(true);\n            range.select();\n        }\n        if (!isContentEditable && !this.is(':focus')) {\n            target.focus();\n        }\n        return pos;\n    };\n    /* eslint-enable */\n    // -----------------------------------------------------------------------\n    // :: callback based event handler plugin generator\n    // -----------------------------------------------------------------------\n    function make_callback_plugin(options) {\n        var factory_settings = $.extend({\n            init: $.noop,\n            destroy: $.noop,\n            name: 'event'\n        }, options);\n        return function(callback, options) {\n            var trigger = arguments.length === 0;\n            var unbind = arguments[0] === \"unbind\";\n            if (!trigger && !unbind && !is_function(callback)) {\n                throw new Error('Invalid argument, it need to a function or string ' +\n                                '\"unbind\" or no arguments.');\n            }\n            if (unbind) {\n                callback = is_function(arguments[1]) ? arguments[1] : null;\n            }\n            var data_name = 'callbacks_' + factory_settings.name;\n            return this.each(function() {\n                var $this = $(this);\n                var callbacks;\n                function handler(arg) {\n                    callbacks.fireWith($this, [arg]);\n                }\n                if (trigger || unbind) {\n                    callbacks = $this.data(data_name);\n                    if (trigger) {\n                        callbacks && callbacks.fire();\n                    } else {\n                        if (callback && callbacks) {\n                            callbacks.remove(callback);\n                            if (!callbacks.has()) {\n                                callbacks = null;\n                            }\n                        } else {\n                            callbacks = null;\n                        }\n                        if (!callbacks) {\n                            $this.removeData(data_name);\n                            factory_settings.destroy.call(this, handler, options);\n                        }\n                    }\n                } else if ($this.data(data_name)) {\n                    $(this).data(data_name).add(callback);\n                } else {\n                    callbacks = $.Callbacks();\n                    callbacks.add(callback);\n                    $this.data(data_name, callbacks);\n                    factory_settings.init.call(this, handler, options);\n                }\n            });\n        };\n    }\n    // -----------------------------------------------------------------------\n    // :: Cross-browser resize element plugin using sentinel iframe or\n    // :: resizeObserver\n    // -----------------------------------------------------------------------\n    $.fn.resizer = make_callback_plugin({\n        name: 'resize',\n        init: function(handler, options) {\n            var settings = $.extend({\n                prefix: ''\n            }, options);\n            var $this = $(this);\n            var resizer;\n            var first = true;\n            if ($this.is('body')) {\n                $(window).on('resize.resizer', handler);\n            } else if (window.ResizeObserver) {\n                resizer = new ResizeObserver(function() {\n                    if (!first) {\n                        handler();\n                    }\n                    first = false;\n                });\n                resizer.observe(this);\n                $this.data('observer', resizer);\n            } else {\n                var iframe = $('<iframe/>').addClass(settings.prefix + 'resizer')\n                    .appendTo(this)[0];\n                $(iframe.contentWindow).on('resize', handler);\n            }\n        },\n        destroy: function() {\n            var $this = $(this);\n            if (window.ResizeObserver) {\n                var observer = $this.data('observer');\n                if (observer) {\n                    observer.unobserve(this);\n                    $this.removeData('observer');\n                }\n            } else {\n                var iframe = $this.find('> iframe[class$=\"resizer\"]');\n                if (iframe.length) {\n                    // just in case of memory leaks in IE\n                    $(iframe[0].contentWindow).off('resize').remove();\n                    iframe.remove();\n                } else if ($this.is('body')) {\n                    $(window).off('resize.resizer');\n                }\n            }\n        }\n    });\n    // -----------------------------------------------------------------------\n    // :: mobile friendly scroll that work without scrollbar (for less)\n    // -----------------------------------------------------------------------\n    $.fn.touch_scroll = make_callback_plugin({\n        name: 'touch',\n        init: function(handler) {\n            var origin;\n            var previous;\n            $(this).on('touchstart.scroll', function(e) {\n                e = e.originalEvent;\n                if (e.target.tagName.toLowerCase() !== 'a' && e.touches.length === 1) {\n                    previous = origin = e.touches[0];\n                }\n            }).on('touchmove.scroll', function(e) {\n                e = e.originalEvent;\n                if (origin && e.touches.length === 1) {\n                    var current = e.touches[0];\n                    var ret = handler({\n                        origin: origin,\n                        previous: previous,\n                        current: current\n                    });\n                    if (ret === false) {\n                        e.preventDefault();\n                    }\n                    previous = current;\n                }\n            }).on('touchend.scroll', function() {\n                if (origin || previous) {\n                    origin = previous = null;\n                }\n            });\n        },\n        destroy: function() {\n            $(this).off('touchstart.scroll touchmove.scroll touchend.scroll');\n        }\n    });\n    // -----------------------------------------------------------------------\n    function jquery_resolve(value) {\n        var defer = jQuery.Deferred();\n        defer.resolve(value);\n        return defer.promise();\n    }\n    // -----------------------------------------------------------------------\n    function unpromise(value, callback, error) {\n        if (value !== undefined) {\n            if (is_function(value.catch)) {\n                value.catch(error);\n            }\n            if (is_function(value.done)) {\n                return value.done(callback);\n            } else if (is_function(value.then)) {\n                return value.then(callback);\n            } else {\n                return callback(value);\n            }\n        }\n    }\n    // -----------------------------------------------------------------------\n    // :: based on https://github.com/zeusdeux/isInViewport\n    // :: work only vertically and on dom elements\n    // -----------------------------------------------------------------------\n    $.fn.is_fully_in_viewport = (function() {\n        function is_visible(node, container) {\n            var box = node.getBoundingClientRect();\n            var viewport = container[0].getBoundingClientRect();\n            var top = box.top - viewport.top;\n            var bottom = box.bottom - viewport.top;\n            var height = container.height();\n            return bottom > 0 && top <= height;\n        }\n        if (window.IntersectionObserver) {\n            return function(container) {\n                var node = this[0];\n                var defer = jQuery.Deferred();\n                var item_observer = new window.IntersectionObserver(function(entries) {\n                    defer.resolve(entries[0].isIntersecting && entries[0].ratio === 1);\n                    item_observer.unobserve(node);\n                }, {\n                    root: container[0]\n                });\n                item_observer.observe(node);\n                return defer.promise();\n            };\n        } else {\n            return function(container) {\n                return jquery_resolve(is_visible(this[0], container));\n            };\n        }\n    })();\n    // -------------------------------------------------------------------------\n    /* eslint-disable */\n    var entity_re = /(&(?:[a-z\\d]+|#\\d+|#x[a-f\\d]+);)/i;\n    // regex that match single character at begining and folowing combine character\n    // https://en.wikipedia.org/wiki/Combining_character\n    var combine_chr_re = /(.(?:[\\u0300-\\u036F]|[\\u1AB0-\\u1abE]|[\\u1DC0-\\u1DF9]|[\\u1DFB-\\u1DFF]|[\\u20D0-\\u20F0]|[\\uFE20-\\uFE2F])+)/;\n    // source: https://mathiasbynens.be/notes/javascript-unicode\n    var astral_symbols_re = /([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])/;\n    // source: https://github.com/mathiasbynens/emoji-regex\n    var emoji_re = /(\\uD83C\\uDFF4(?:\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74)\\uDB40\\uDC7F|\\u200D\\u2620\\uFE0F)|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC68(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3]))|\\uD83D\\uDC69\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\uD83D\\uDC68(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83D\\uDC69\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC68(?:\\u200D(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDD1-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDEEB\\uDEEC\\uDEF4-\\uDEF9]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD70\\uDD73-\\uDD76\\uDD7A\\uDD7C-\\uDDA2\\uDDB0-\\uDDB9\\uDDC0-\\uDDC2\\uDDD0-\\uDDFF])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEF9]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD70\\uDD73-\\uDD76\\uDD7A\\uDD7C-\\uDDA2\\uDDB0-\\uDDB9\\uDDC0-\\uDDC2\\uDDD0-\\uDDFF])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC69\\uDC6E\\uDC70-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3D\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDD1-\\uDDDD]))/;\n    // https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\n    var mobile_re = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i;\n    var tablet_re = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i;\n    var format_split_re = /(\\[\\[(?:-?[@!gbiuso])*;[^;]*;[^\\]]*\\](?:[^\\]\\\\]*(?:\\\\\\\\)*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]?)/i;\n    var format_parts_re = /\\[\\[((?:-?[@!gbiuso])*);([^;]*);([^;\\]]*);?([^;\\]]*);?([^\\]]*)\\]([^\\]\\\\]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]+)\\]?/gi;\n    var format_re = /\\[\\[((?:-?[@!gbiuso])*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]?/gi;\n    var format_exist_re = /\\[\\[((?:-?[@!gbiuso])*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]/gi;\n    var format_full_re = /^(\\[\\[(?:(?:-?[@!gbiuso])*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\])([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)(\\])$/i;\n    var format_begin_re = /(\\[\\[(?:-?[@!gbiuso])*;[^;]*;[^\\]]*\\])/i;\n    var format_start_re = /^(\\[\\[(?:-?[@!gbiuso])*;[^;]*;[^\\]]*\\])/i;\n    var format_end_re = /\\[\\[(?:-?[@!gbiuso])*;[^;]*;[^\\]]*\\]?$/i;\n    var self_closing_re = /^(?:\\[\\[)?[^;]*@[^;]*;/;\n    var color_hex_re = /^#([0-9a-f]{3}|[0-9a-f]{6})$/i;\n    var url_re = /(\\bhttps?:\\/\\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\\s\"'<>\\][)])+)/gi;\n    var url_nf_re = /\\b(?![^\"\\s[\\]]*])(https?:\\/\\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\\s\"'<>\\][)])+)/gi;\n    var email_re = /((([^<>('\")[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,})))/g;\n    var url_full_re = /^(https?:\\/\\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\\s\"'<>\\][)])+)$/gi;\n    var email_full_re = /^((([^<>('\")[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,})))$/g;\n    var command_re = /((?:\"[^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*'|\\/[^\\/\\\\]*(?:\\\\[\\S\\s][^\\/\\\\]*)*\\/[gimsuy]*(?=\\s|$)|(?:\\\\\\s|\\S))+)(?=\\s|$)/gi;\n    var extended_command_re = /^\\s*((terminal|cmd)::([a-z_]+)\\(([\\s\\S]*)\\))\\s*$/;\n    var format_exec_re = /(\\[\\[(?:[^\\][]|\\\\\\])+\\]\\])/;\n    var float_re = /^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?$/;\n    var re_re = /^\\/((?:\\\\\\/|[^/]|\\[[^\\]]*\\/[^\\]]*\\])+)\\/([gimsuy]*)$/;\n    var string_re = /(\"(?:[^\"\\\\]|\\\\(?:\\\\\\\\)*\"|\\\\\\\\)*\"|'(?:[^'\\\\]|\\\\(?:\\\\\\\\)*'|\\\\\\\\)*')/;\n    var unclosed_strings_re = /^(?=((?:[^\"']+|\"[^\"\\\\]*(?:\\\\[^][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[^][^'\\\\]*)*')*))\\1./;\n    var broken_image = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 14\"><title id=\"title2\">rounded</title><path id=\"terminal-broken-image\" d=\"m 14,10 h 2 v 1 a 3,3 0 0 1 -3,3 H 3 A 3,3 0 0 1 0,11 H 4.5 A 1.00012,1.00012 0 0 0 5.207,10.707 L 6.5,9.414 7.793,10.707 a 0.99963,0.99963 0 0 0 1.41406,0 l 2.36719,-2.36719 1.80127,1.44092 A 0.99807,0.99807 0 0 0 14,10 Z M 16,3 V 8 H 14.35059 L 12.12451,6.21924 A 0.99846,0.99846 0 0 0 10.793,6.293 L 8.5,8.586 7.207,7.293 a 0.99962,0.99962 0 0 0 -1.41406,0 L 4.08594,9 H 0 V 3 A 3,3 0 0 1 3,0 h 10 a 3,3 0 0 1 3,3 z M 6,4.5 A 1.5,1.5 0 1 0 4.5,6 1.5,1.5 0 0 0 6,4.5 Z\" /></svg>';\n    var use_broken_image = '<svg class=\"terminal-broken-image\" role=\"presentation\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 14\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><use xlink:href=\"#terminal-broken-image\"/></svg>';\n    /* eslint-enable */\n    // -------------------------------------------------------------------------\n    // :: features flags\n    // -------------------------------------------------------------------------\n    // taken from https://hacks.mozilla.org/2011/09/detecting-and-generating-\n    // css-animations-in-javascript/\n    var animation_supported = (function() {\n        var animation = false,\n            domPrefixes = 'Webkit Moz O ms Khtml'.split(' '),\n            elm = document.createElement('div');\n        if (elm.style.animationName) {\n            animation = true;\n        }\n        if (animation === false) {\n            for (var i = 0; i < domPrefixes.length; i++) {\n                var name = domPrefixes[i] + 'AnimationName';\n                if (elm.style[name] !== undefined) {\n                    animation = true;\n                    break;\n                }\n            }\n        }\n        elm = null;\n        return animation;\n    })();\n    // -------------------------------------------------------------------------\n    var agent = window.navigator.userAgent;\n    var is_IE = /MSIE|Trident/.test(agent) || /rv:11.0/i.test(agent);\n    var is_IEMobile = /IEMobile/.test(agent);\n    // -------------------------------------------------------------------------\n    var is_ch_unit_supported = (function() {\n        if (is_IE && !is_IEMobile) {\n            return false;\n        }\n        var div = document.createElement('div');\n        div.style.width = '1ch';\n        return div.style.width === '1ch';\n    })();\n    // -------------------------------------------------------------------------\n    var is_css_variables_supported = window.CSS && window.CSS.supports &&\n            window.CSS.supports('--fake-var', 0);\n    // -------------------------------------------------------------------------\n    var is_android = navigator.userAgent.toLowerCase().indexOf('android') !== -1;\n    // -------------------------------------------------------------------------\n    var is_key_native = (function is_key_native() {\n        if (!('KeyboardEvent' in window && 'key' in window.KeyboardEvent.prototype)) {\n            return false;\n        }\n        var proto = window.KeyboardEvent.prototype;\n        var get = Object.getOwnPropertyDescriptor(proto, 'key').get;\n        return !!get.toString().match(/\\[native code\\]/);\n    })();\n    // -------------------------------------------------------------------------\n    var is_mobile = (function(a) {\n        var check = false;\n        if (mobile_re.test(a) || tablet_re.test(a.substr(0, 4))) {\n            check = true;\n        }\n        return check;\n    })(navigator.userAgent || navigator.vendor || window.opera);\n\n    // -------------------------------------------------------------------------\n    // IE ch unit bug detection - better that UserAgent that can be changed\n    // -------------------------------------------------------------------------\n    var ch_unit_bug = false;\n    $(function() {\n        function width(e) {\n            return e[0].getBoundingClientRect().width;\n        }\n        var base = '<span style=\"font-family: monospace;visibility:hidden;';\n        var ch = $(base + 'width:1ch;overflow: hidden\">&nbsp;</span>').appendTo('body');\n        var space = $(base + '\">&nbsp;</span>').appendTo('body');\n        // in FireFox the size of space is fraction larger #579\n        ch_unit_bug = Math.abs(width(ch) - width(space)) > 0.0001;\n        ch.remove();\n        space.remove();\n    });\n    // -----------------------------------------------------------------------\n    // :: css helper that work with css variables\n    // :: jQuery css method from 3.4 support them by default\n    // -----------------------------------------------------------------------\n    function css(node, obj, value) {\n        if ($.isPlainObject(obj)) {\n            Object.keys(obj).forEach(function(key) {\n                node.style.setProperty(key, obj[key]);\n            });\n        } else if (typeof value === 'undefined') {\n            return node.style.getPropertyValue(obj);\n        } else {\n            node.style.setProperty(obj, value);\n        }\n    }\n    // -----------------------------------------------------------------------\n    // :: hide elements from screen readers\n    // -----------------------------------------------------------------------\n    function a11y_hide(element) {\n        element.attr({\n            role: 'presentation',\n            'aria-hidden': 'true'\n        });\n    }\n    // ---------------------------------------------------------------------\n    // :: alert only first exception of type\n    // ---------------------------------------------------------------------\n    var excepctions = [];\n    function alert_exception(label, e) {\n        if (arguments[0] instanceof $.terminal.Exception) {\n            label = arguments[0].type;\n            e = arguments[0];\n        }\n        var message = (label ? label + ': ' : '') + exception_message(e);\n        if (excepctions.indexOf(message) === -1) {\n            excepctions.push(message);\n            setTimeout(function() {\n                throw e;\n            }, 0);\n            //alert(message + (e.stack ? '\\n' + e.stack : ''));\n        }\n    }\n    // ---------------------------------------------------------------------\n    // :; detect if mouse event happen on scrollbar\n    // ---------------------------------------------------------------------\n    function scrollbar_event(e, node) {\n        var left = node.offset().left;\n        return node.outerWidth() <= e.clientX - left;\n    }\n    // ---------------------------------------------------------------------\n    // :: Return exception message as string\n    // ---------------------------------------------------------------------\n    function exception_message(e) {\n        if (typeof e === 'string') {\n            return e;\n        } else if (typeof e.fileName === 'string') {\n            return e.fileName + ': ' + e.message;\n        } else {\n            return e.message;\n        }\n    }\n    // -----------------------------------------------------------------------\n    // :: CYCLE DATA STRUCTURE\n    // -----------------------------------------------------------------------\n    function Cycle() {\n        var data = [].slice.call(arguments);\n        var pos = 0;\n        $.extend(this, {\n            get: function() {\n                return data;\n            },\n            index: function() {\n                return pos;\n            },\n            rotate: function(skip, init) {\n                if (init === undefined) {\n                    init = pos;\n                } else if (init === pos) {\n                    return;\n                }\n                if (!skip) {\n                    var defined = data.filter(function(item) {\n                        return typeof item !== 'undefined';\n                    });\n                    if (!defined.length) {\n                        return;\n                    }\n                }\n                if (!data.length) {\n                    return;\n                }\n                if (data.length === 1) {\n                    return data[0];\n                } else {\n                    if (pos === data.length - 1) {\n                        pos = 0;\n                    } else {\n                        ++pos;\n                    }\n                    if (typeof data[pos] !== 'undefined') {\n                        return data[pos];\n                    } else {\n                        return this.rotate(true, init);\n                    }\n                }\n            },\n            length: function() {\n                return data.length;\n            },\n            remove: function(index) {\n                delete data[index];\n            },\n            set: function(item) {\n                for (var i = data.length; i--;) {\n                    if (data[i] === item) {\n                        pos = i;\n                        return;\n                    }\n                }\n                this.append(item);\n                pos = data.length - 1;\n            },\n            front: function() {\n                if (data.length) {\n                    var index = pos;\n                    var restart = false;\n                    while (!data[index]) {\n                        index++;\n                        if (index > data.length) {\n                            if (restart) {\n                                break;\n                            }\n                            index = 0;\n                            restart = true;\n                        }\n                    }\n                    return data[index];\n                }\n            },\n            map: function(fn) {\n                return data.map(function(item, i) {\n                    if (typeof item !== 'undefined') {\n                        return fn(item, i);\n                    }\n                    return null;\n                }).filter(Boolean);\n            },\n            forEach: function(fn) {\n                return data.forEach(function(item, i) {\n                    if (typeof item !== 'undefined') {\n                        fn(item, i);\n                    }\n                });\n            },\n            append: function(item) {\n                data.push(item);\n            }\n        });\n    }\n    /*\n    function time() {\n        // performance.now almost equal Date.now()- performance.timing.navigationStart\n        // the difference check should be almost the same\n        return performance ? performance.now() : Date.now();\n    }\n    */\n    // -----------------------------------------------------------------------\n    // :: STACK DATA STRUCTURE\n    // -----------------------------------------------------------------------\n    function Stack(init) {\n        var data = is_array(init) ? init : init ? [init] : [];\n        $.extend(this, {\n            data: function() {\n                return data;\n            },\n            map: function(fn) {\n                return $.map(data, fn);\n            },\n            size: function() {\n                return data.length;\n            },\n            pop: function() {\n                if (data.length === 0) {\n                    return null;\n                } else {\n                    var value = data[data.length - 1];\n                    data = data.slice(0, data.length - 1);\n                    return value;\n                }\n            },\n            push: function(value) {\n                data = data.concat([value]);\n                return value;\n            },\n            top: function() {\n                return data.length > 0 ? data[data.length - 1] : null;\n            },\n            clone: function() {\n                return new Stack(data.slice(0));\n            }\n        });\n    }\n    // -------------------------------------------------------------------------\n    // :: Class for Worker that do some computation when needed\n    // :: if validation function return false it mean that condition changed\n    // :: and cache need to be cleared. If value was not prcessed it will run\n    // :: the action\n    // -------------------------------------------------------------------------\n    function WorkerCache(options) {\n        var settings = $.extend({\n            validation: $.noop,\n            action: $.noop,\n            onCache: $.noop\n        }, options);\n        this._onCache = settings.onCache.bind(this);\n        this._action = settings.action.bind(this);\n        this._validation = settings.validation.bind(this);\n        this._cache = new Map();\n    }\n    // -------------------------------------------------------------------------\n    WorkerCache.prototype.validate = function(key) {\n        var valid = this._validation(key);\n        var test = valid === undefined || valid === true;\n        if (!test) {\n            this._cache.clear();\n        }\n        return test;\n    };\n    // -------------------------------------------------------------------------\n    WorkerCache.prototype.get = function(key) {\n        var value;\n        if (this.validate(key) && this._cache.has(key)) {\n            value = this._cache.get(key);\n            this._onCache({cache: value});\n            return value;\n        }\n        value = this._action(key);\n        this._cache.set(key, value);\n        return value;\n    };\n    // -------------------------------------------------------------------------\n    // :: HISTORY CLASS\n    // -------------------------------------------------------------------------\n    function History(name, size, memory) {\n        var enabled = true;\n        var storage_key = '';\n        if (typeof name === 'string' && name !== '') {\n            storage_key = name + '_';\n        }\n        storage_key += 'commands';\n        var data;\n        if (memory) {\n            data = [];\n        } else {\n            data = $.Storage.get(storage_key);\n            data = data ? JSON.parse(data) : [];\n        }\n        var pos = data.length - 1;\n        $.extend(this, {\n            append: function(item) {\n                if (enabled) {\n                    if (data[data.length - 1] !== item) {\n                        data.push(item);\n                        if (size && data.length > size) {\n                            data = data.slice(-size);\n                        }\n                        pos = data.length - 1;\n                        if (!memory) {\n                            $.Storage.set(storage_key, JSON.stringify(data));\n                        }\n                    }\n                }\n            },\n            set: function(new_data) {\n                if (is_array(new_data)) {\n                    data = new_data;\n                    if (!memory) {\n                        $.Storage.set(storage_key, JSON.stringify(data));\n                    }\n                }\n            },\n            data: function() {\n                return data;\n            },\n            reset: function() {\n                pos = data.length - 1;\n            },\n            last: function() {\n                return data[data.length - 1];\n            },\n            end: function() {\n                return pos === data.length - 1;\n            },\n            position: function() {\n                return pos;\n            },\n            current: function() {\n                return data[pos];\n            },\n            next: function() {\n                var old = pos;\n                if (pos < data.length - 1) {\n                    ++pos;\n                }\n                if (old !== pos) {\n                    return data[pos];\n                }\n            },\n            previous: function() {\n                var old = pos;\n                if (pos > 0) {\n                    --pos;\n                }\n                if (old !== pos) {\n                    return data[pos];\n                }\n            },\n            clear: function() {\n                data = [];\n                this.purge();\n            },\n            enabled: function() {\n                return enabled;\n            },\n            enable: function() {\n                enabled = true;\n            },\n            purge: function() {\n                if (!memory) {\n                    $.Storage.remove(storage_key);\n                }\n            },\n            disable: function() {\n                enabled = false;\n            },\n            toggle: function(value) {\n                if (typeof value === 'undefined') {\n                    enabled = !enabled;\n                } else {\n                    enabled = value;\n                }\n            }\n        });\n    }\n    // -------------------------------------------------------------------------\n    // :: COMMAND LINE PLUGIN\n    // -------------------------------------------------------------------------\n    var cmd_index = 0;\n    $.cmd = {\n        defaults: {\n            mask: false,\n            caseSensitiveSearch: true,\n            historySize: 60,\n            prompt: '> ',\n            enabled: true,\n            history: true,\n            onPositionChange: $.noop,\n            onCommandChange: $.noop,\n            inputStyle: 'textarea',\n            mobileDelete: is_mobile,\n            onPaste: $.noop,\n            clickTimeout: 200,\n            holdTimeout: 400,\n            holdRepeatTimeout: 200,\n            mobileIngoreAutoSpace: [],\n            repeatTimeoutKeys: [],\n            tabindex: 1,\n            tabs: 4\n        }\n    };\n    $.fn.cmd = function(options) {\n        var settings = $.extend({}, $.cmd.defaults, options);\n        function mobile_ignore_key(key) {\n            return settings.mobileIngoreAutoSpace.length &&\n                settings.mobileIngoreAutoSpace.indexOf(key) !== -1 && is_android;\n        }\n        var self = this;\n        var maybe_data = self.data('cmd');\n        if (maybe_data) {\n            return maybe_data;\n        }\n        var id = cmd_index++;\n        self.addClass('cmd');\n        var wrapper = $('<div class=\"cmd-wrapper\"/>').appendTo(self);\n        wrapper.append('<span class=\"cmd-prompt\"></span>');\n        wrapper.append('<div class=\"cmd-cursor-line\">' +\n                       '<span></span>' +\n                       '<span class=\"cmd-cursor\"><span>' +\n                       '<span>&nbsp;</span></span></span>' +\n                       '<span></span>' +\n                       '</div>');\n        var cursor_line = wrapper.find('.cmd-cursor-line');\n        // a11y: don't read command it's in textarea that's in focus\n        a11y_hide(cursor_line);\n        // on mobile the only way to hide textarea on desktop it's needed because\n        // textarea show up after focus\n        //self.append('<span class=\"mask\"></mask>');\n        var clip;\n        if (is_mobile) {\n            clip = (function() {\n                var $node = $('<div class=\"cmd-editable\" contenteditable/>').attr({\n                    autocapitalize: 'off',\n                    autocorrect: 'off',\n                    spellcheck: 'false',\n                    tabindex: settings.tabindex\n                }).insertAfter(self);\n                $node.on('focus', function() {\n                    self.enable();\n                }).on('blur', function() {\n                    self.disable();\n                });\n                var timer;\n                var clip = {\n                    $node: $node,\n                    val: function(value) {\n                        if (typeof value === 'undefined') {\n                            return $node.text();\n                        } else {\n                            $node.html(value);\n                        }\n                    },\n                    reset: function() {\n                        clearTimeout(timer);\n                        timer = setTimeout(function() {\n                            $node.css('top', '');\n                        }, 400);\n                    },\n                    focus: function() {\n                        $node.css('top', 0);\n                        clip.reset();\n                    },\n                    blur: function() {\n                        $node.css('top', '100%').blur();\n                        // just in case of Webkit bug\n                        window.getSelection().removeAllRanges();\n                        clip.reset();\n                    }\n                };\n                return clip;\n            })();\n            self.addClass('cmd-mobile');\n        } else {\n            clip = (function() {\n                var $node = $('<textarea>').attr({\n                    autocapitalize: 'off',\n                    spellcheck: 'false',\n                    tabindex: settings.tabindex\n                }).addClass('cmd-clipboard').appendTo(self);\n                return {\n                    $node: $node,\n                    val: function(value) {\n                        // even if value is undeifned\n                        // when calling val(value) it return jQuery object\n                        if (typeof value === 'undefined') {\n                            return $node.val();\n                        } else {\n                            return $node.val(value);\n                        }\n                    }\n                };\n            })();\n            clip.val(' ');\n        }\n        if (settings.width) {\n            self.width(settings.width);\n        }\n        var num_chars; // calculated by resize\n        var char_width;\n        var last_rendered_prompt;\n        var prompt_last_line;\n        var prompt_len;\n        var prompt_node = self.find('.cmd-prompt');\n        var reverse_search = false;\n        var rev_search_str = '';\n        var reverse_search_position = null;\n        var backup_prompt;\n        var command = '';\n        var last_command;\n        // text from selection using CTRL+SHIFT+C (as in Xterm)\n        var kill_text = ''; // text from command that kill part of the command\n        var position = 0;\n        var prompt;\n        var enabled;\n        var formatted_position = 0;\n        var name, history;\n        var cursor = self.find('.cmd-cursor');\n        var animation;\n        var restart_animation;\n        var paste_count = 0;\n        // use \\uFFFF to mark newline extra character\n        // so we can hide it by css when using text selection\n        var line_marker = '\\uFFFF';\n        var line_marker_re = /\\uFFFF$/;\n        var empty_marker_re = /^\\uFFFF$/;\n        function get_char_pos(e) {\n            var node = $(e.target);\n            if (node.is('span,img,a')) {\n                node = node.closest('[data-text]');\n                return node.index() +\n                    node.parent('span').prevAll().find('[data-text]').length +\n                    node.closest('[role=\"presentation\"]')\n                        .prevUntil('.cmd-prompt').find('[data-text]').length;\n            } else if (node.is('div[role=\"presentation\"]')) {\n                var last = !node.next().length;\n                return node.find('[data-text]').length +\n                    node.prevUntil('.cmd-prompt').find('[data-text]').length -\n                    (last ? 0 : 1);\n            }\n        }\n        // IE mapping\n        var key_mapping = {\n            'SPACEBAR': ' ',\n            'UP': 'ArrowUP',\n            'DOWN': 'ArrowDown',\n            'LEFT': 'ArrowLeft',\n            'RIGHT': 'ArrowRight',\n            'DEL': 'Delete',\n            'MULTIPLY': '*',\n            'DIVIDE': '/',\n            'SUBTRACT': '-',\n            'ADD': '+'\n        };\n        function ie_key_fix(e) {\n            var key = e.key.toUpperCase();\n            if (key_mapping[key]) {\n                return key_mapping[key];\n            }\n            return key;\n        }\n        function get_key(e) {\n            if (e.key) {\n                var key = ie_key_fix(e).toUpperCase();\n                if (key === 'CONTROL') {\n                    return 'CTRL';\n                } else {\n                    var combo = [];\n                    if (e.ctrlKey) {\n                        combo.push('CTRL');\n                    }\n                    if (e.metaKey && key !== 'META') {\n                        combo.push('META');\n                    }\n                    if (e.shiftKey && key !== 'SHIFT') {\n                        combo.push('SHIFT');\n                    }\n                    if (e.altKey && key !== 'ALT') {\n                        combo.push('ALT');\n                    }\n                    if (combo.length && key === ' ') {\n                        key = 'SPACEBAR';\n                    }\n                    if (e.key) {\n                        combo.push(key);\n                    }\n                    return combo.join('+');\n                }\n            }\n        }\n        // -----------------------------------------------------------------\n        // for invoking shortcuts using terminal::keydown\n        // taken from https://github.com/cvan/keyboardevent-key-polyfill/\n        var keycodes = {\n            3: 'Cancel',\n            6: 'Help',\n            8: 'Backspace',\n            9: 'Tab',\n            12: 'Clear',\n            13: 'Enter',\n            16: 'Shift',\n            17: 'Control',\n            18: 'Alt',\n            19: 'Pause',\n            20: 'CapsLock',\n            27: 'Escape',\n            28: 'Convert',\n            29: 'NonConvert',\n            30: 'Accept',\n            31: 'ModeChange',\n            32: ' ',\n            33: 'PageUp',\n            34: 'PageDown',\n            35: 'End',\n            36: 'Home',\n            37: 'ArrowLeft',\n            38: 'ArrowUp',\n            39: 'ArrowRight',\n            40: 'ArrowDown',\n            41: 'Select',\n            42: 'Print',\n            43: 'Execute',\n            44: 'PrintScreen',\n            45: 'Insert',\n            46: 'Delete',\n            48: ['0', ')'],\n            49: ['1', '!'],\n            50: ['2', '@'],\n            51: ['3', '#'],\n            52: ['4', '$'],\n            53: ['5', '%'],\n            54: ['6', '^'],\n            55: ['7', '&'],\n            56: ['8', '*'],\n            57: ['9', '('],\n            91: 'OS',\n            93: 'ContextMenu',\n            144: 'NumLock',\n            145: 'ScrollLock',\n            181: 'VolumeMute',\n            182: 'VolumeDown',\n            183: 'VolumeUp',\n            186: [';', ':'],\n            187: ['=', '+'],\n            188: [',', '<'],\n            189: ['-', '_'],\n            190: ['.', '>'],\n            191: ['/', '?'],\n            192: ['`', '~'],\n            219: ['[', '{'],\n            220: ['\\\\', '|'],\n            221: [']', '}'],\n            222: [\"'\", '\"'],\n            224: 'Meta',\n            225: 'AltGraph',\n            246: 'Attn',\n            247: 'CrSel',\n            248: 'ExSel',\n            249: 'EraseEof',\n            250: 'Play',\n            251: 'ZoomOut'\n        };\n        var i;\n        // Function keys (F1-24).\n        for (i = 1; i < 25; i++) {\n            keycodes[111 + i] = 'F' + i;\n        }\n        // Printable ASCII characters.\n        var letter = '';\n        for (i = 65; i < 91; i++) {\n            letter = String.fromCharCode(i);\n            keycodes[i] = [letter.toLowerCase(), letter.toUpperCase()];\n        }\n        var reversed_keycodes = {};\n        Object.keys(keycodes).forEach(function(which) {\n            if (is_array(keycodes[which])) {\n                keycodes[which].forEach(function(key) {\n                    reversed_keycodes[key.toUpperCase()] = which;\n                });\n            } else {\n                reversed_keycodes[keycodes[which].toUpperCase()] = which;\n            }\n        });\n        // -----------------------------------------------------------------\n        var keymap;\n        var default_keymap = {\n            'ALT+D': delete_forward({clipboard: true}),\n            'HOLD+ALT+D': delete_forward({clipboard: true, hold: true}),\n            'HOLD+DELETE': delete_forward({clipboard: false, hold: true}),\n            'HOLD+SHIFT+DELETE': delete_forward({clipboard: false, hold: true}),\n            'ENTER': function() {\n                if (history && command && !settings.mask &&\n                    ((is_function(settings.historyFilter) &&\n                      settings.historyFilter(command)) ||\n                     (settings.historyFilter instanceof RegExp &&\n                      command.match(settings.historyFilter)) ||\n                     !settings.historyFilter)) {\n                    history.append(command);\n                }\n                var tmp = command;\n                history.reset();\n\n                // for next input event on firefox/android with google keyboard\n                prev_command = '';\n                no_keydown = true;\n\n                self.set('');\n                var promise;\n                if (settings.commands) {\n                    promise = settings.commands.call(self, tmp);\n                }\n                if (is_function(prompt)) {\n                    if (promise && is_function(promise.then)) {\n                        promise.then(draw_prompt);\n                    } else {\n                        draw_prompt();\n                    }\n                }\n                clip.val('');\n                return false;\n            },\n            'SHIFT+ENTER': function() {\n                self.insert('\\n');\n                return true;\n            },\n            'BACKSPACE': backspace_key,\n            'SHIFT+BACKSPACE': backspace_key,\n            'TAB': function() {\n                self.insert('\\t');\n            },\n            'CTRL+D': function() {\n                self['delete'](1);\n                return false;\n            },\n            'DELETE': function() {\n                self['delete'](1);\n                return true;\n            },\n            'HOLD+ARROWUP': up_arrow,\n            'ARROWUP': up_arrow,\n            'CTRL+ARROWUP': prev_history,\n            'CTRL+P': prev_history,\n            'ARROWDOWN': down_arrow,\n            'HOLD+ARROWDOWN': down_arrow,\n            'CTRL+N': next_history,\n            'CTRL+ARROWDOWN': next_history,\n            'ARROWLEFT': left,\n            'HOLD+ARROWLEFT': debounce(left, 10),\n            'CTRL+B': left,\n            'CTRL+ARROWLEFT': function() {\n                // jump to one character after last space before prevoius word\n                var len = position - 1;\n                var pos = 0;\n                if (command[len] === ' ') {\n                    --len;\n                }\n                for (var i = len; i > 0; --i) {\n                    if (command[i] === ' ' && command[i + 1] !== ' ') {\n                        pos = i + 1;\n                        break;\n                    } else if (command[i] === '\\n' &&\n                               command[i + 1] !== '\\n') {\n                        pos = i;\n                        break;\n                    }\n                }\n                self.position(pos);\n            },\n            'CTRL+R': function() {\n                if (reverse_search) {\n                    reverse_history_search(true);\n                } else {\n                    backup_prompt = prompt;\n                    draw_reverse_prompt();\n                    last_command = command;\n                    self.set('');\n                    redraw();\n                    reverse_search = true;\n                }\n                return false;\n            },\n            'CTRL+G': function() {\n                if (reverse_search) {\n                    prompt = backup_prompt;\n                    draw_prompt();\n                    self.set(last_command);\n                    redraw();\n                    reverse_search = false;\n                    rev_search_str = '';\n                    return false;\n                }\n            },\n            'ARROWRIGHT': right,\n            'HOLD+ARROWRIGHT': debounce(right, 10),\n            'CTRL+F': right,\n            'CTRL+ARROWRIGHT': function() {\n                // jump to beginning or end of the word\n                if (command[position] === ' ') {\n                    ++position;\n                }\n                var re = /\\S[\\n\\s]{2,}|[\\n\\s]+\\S?/;\n                var match = command.slice(position).match(re);\n                if (!match || match[0].match(/^\\s+$/)) {\n                    self.position(bare_text(command).length);\n                } else if (match[0][0] !== ' ') {\n                    position += match.index + 1;\n                } else {\n                    position += match.index + match[0].length - 1;\n                    if (match[0][match[0].length - 1] !== ' ') {\n                        --position;\n                    }\n                }\n                redraw();\n            },\n            'F12': return_true, // Allow Firebug\n            'END': end(true),\n            'CTRL+END': end(),\n            'CTRL+E': end(),\n            'HOME': home(true),\n            'CTRL+HOME': home(),\n            'CTRL+A': home(),\n            'SHIFT+INSERT': paste_event,\n            'CTRL+SHIFT+T': return_true, // open closed tab\n            'CTRL+W': delete_backward({clipboard: true, hold: false}),\n            'HOLD+BACKSPACE': delete_backward({clipboard: false, hold: true}),\n            'HOLD+SHIFT+BACKSPACE': delete_backward({clipboard: false, hold: true}),\n            'CTRL+H': function() {\n                if (command !== '' && position > 0) {\n                    self['delete'](-1);\n                }\n                return false;\n            },\n            'CTRL+X': return_true,\n            'CTRL+C': function() {\n                return get_selected_html() === '';\n            },\n            'CTRL+T': return_true,\n            'CTRL+Y': function() {\n                if (kill_text !== '') {\n                    self.insert(kill_text);\n                }\n            },\n            'CTRL+V': paste_event,\n            'META+V': paste_event,\n            'CTRL+K': function() {\n                var len = text(command).length;\n                if (len > position) {\n                    kill_text = self['delete'](len - position);\n                    text_to_clipboard(clip.$node, kill_text);\n                }\n                return false;\n            },\n            'CTRL+U': function() {\n                if (command !== '' && position !== 0) {\n                    kill_text = self['delete'](-position);\n                    text_to_clipboard(clip.$node, kill_text);\n                }\n                return false;\n            },\n            'CTRL+TAB': function() {\n                return false;\n            },\n            'META+`': return_true, // CMD+` switch browser window on Mac\n            'META+R': return_true, // CMD+R page reload in Chrome Mac\n            'META+L': return_true // CLD+L jump into Ominbox on Chrome Mac\n        };\n        // -------------------------------------------------------------------------------\n        function delete_forward(options) {\n            options = options || {};\n            if (options.hold && !settings.mobileDelete) {\n                return function delete_character_forward() {\n                    self['delete'](1);\n                    return false;\n                };\n            }\n            return function delete_word_forward() {\n                var re = / *[^ ]+ *(?= )|[^ ]+$/;\n                var substring = command.slice(position);\n                var m = substring.match(re);\n                if (m) {\n                    kill_text = m[0];\n                    if (options.clipboard) {\n                        text_to_clipboard(clip, kill_text);\n                    }\n                }\n                self.set(\n                    command.slice(0, position) +\n                        command.slice(position).replace(re, ''),\n                    true\n                );\n                // chrome jump to address bar\n                return false;\n            };\n        }\n        // -------------------------------------------------------------------------------\n        function delete_backward(options) {\n            options = options || {};\n            if (options.hold && !settings.mobileDelete) {\n                return function delete_character_backward() {\n                    self['delete'](-1);\n                };\n            }\n            return function delete_word_backward() {\n                // don't work in Chromium (can't prevent close tab)\n                if (command !== '' && position !== 0) {\n                    var m = command.slice(0, position).match(/([^ ]* *$)/);\n                    if (m[0].length) {\n                        kill_text = self['delete'](-m[0].length);\n                        if (options.clipboard) {\n                            text_to_clipboard(clip, kill_text);\n                        }\n                    }\n                }\n                return false;\n            };\n        }\n        // -------------------------------------------------------------------------------\n        function return_true() {\n            return true;\n        }\n        // -------------------------------------------------------------------------------\n        function paste_event() {\n            clip.val('');\n            paste_count = 0;\n            if (self.isenabled() && !clip.$node.is(':focus')) {\n                clip.$node.trigger('focus', [true]);\n            }\n            clip.$node.one('input', paste);\n            return true;\n        }\n        // ---------------------------------------------------------------------\n        // :: Paste content to terminal using hidden textarea\n        // ---------------------------------------------------------------------\n        function paste() {\n            if (paste_count++ > 0) {\n                return;\n            }\n            function set() {\n                clip.val(command);\n                fix_textarea();\n            }\n            function insert(text) {\n                self.insert(text);\n                set();\n            }\n            if (self.isenabled()) {\n                //wait until Browser insert text to textarea\n                self.oneTime(100, function() {\n                    var value = clip.val();\n                    if (is_function(settings.onPaste)) {\n                        var ret = settings.onPaste.call(self, {\n                            target: self,\n                            text: value\n                        });\n                        if (ret !== undefined) {\n                            if (ret && is_function(ret.then || ret.done)) {\n                                (ret.then || ret.done).call(ret, insert);\n                            } else if (typeof ret === 'string') {\n                                insert(ret);\n                            } else if (ret === false) {\n                                set();\n                            }\n                            return;\n                        }\n                    }\n                    insert(value);\n                });\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function prev_history() {\n            if (first_up_history) {\n                last_command = command;\n                self.set(history.current());\n            } else {\n                self.set(history.previous());\n            }\n            first_up_history = false;\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function next_history() {\n            self.set(history.end() ? last_command : history.next());\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function have_newlines(string) {\n            return string.match(/\\n/);\n        }\n        // -------------------------------------------------------------------------------\n        function have_wrapping(string, prompt_len) {\n            var lengths = string.split('\\n').map(function(line) {\n                return $.terminal.length(line);\n            });\n            if (prompt_len) {\n                lengths[0] += prompt_len;\n            }\n            var wrap = lengths.filter(function(len) {\n                return len >= num_chars;\n            });\n            return !!wrap.length;\n        }\n        // -------------------------------------------------------------------------------\n        function simple_split_command_line(formatted) {\n            var prompt = last_rendered_prompt;\n            var lines = $.terminal.split_equal(prompt + formatted, num_chars);\n            var re = new RegExp('^' + $.terminal.escape_regex(prompt));\n            lines = lines.map($.terminal.unescape_brackets);\n            lines[0] = lines[0].replace(re, '');\n            return lines;\n        }\n        // -------------------------------------------------------------------------------\n        function up_arrow() {\n            var formatted = formatting(command);\n            formatted = $.terminal.strip(formatted);\n            var before = $.terminal.substring(formatted, 0, position);\n            var col = self.column();\n            var cursor_line = self.find('.cmd-cursor-line');\n            var line = cursor_line.prevUntil('span').length;\n            // case when line is wrapped and we are below prompt\n            if (line === 1 && col <= prompt_len) {\n                self.position(0);\n                return false;\n            }\n            if (have_newlines(before) || have_wrapping(before, prompt_len)) {\n                if (line === 0) {\n                    return prev_history();\n                }\n                var prev = cursor_line.prev();\n                var splitted = prev.is('.cmd-end-line');\n                var lines = simple_split_command_line(formatted);\n                prev = lines[line - 1];\n                var left_over = lines[line].substring(col).length;\n                var diff;\n                if (left_over > 0) {\n                    diff = col;\n                    if (line - 1 === 0) {\n                        diff -= prompt_len;\n                    }\n                    diff = col + prev.substring(diff).length;\n                    if (splitted) {\n                        ++diff;\n                    }\n                } else {\n                    diff = col + 1;\n                }\n                self.position(-diff, true);\n                return false;\n            } else {\n                return prev_history();\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function down_arrow() {\n            // use format and strip so we get visual strings (formatting can change text)\n            var formatted = formatting(command);\n            formatted = $.terminal.strip(formatted);\n            var after = $.terminal.substring(formatted, position);\n            if (have_newlines(after) || have_wrapping(after)) {\n                var lines = simple_split_command_line(formatted);\n                var col = self.column();\n                var cursor_line = self.find('.cmd-cursor-line');\n                var $line = cursor_line.prevUntil('span');\n                var line = $line.length;\n                var ending = cursor_line.is('.cmd-end-line');\n                var next = lines[line + 1];\n                if (!next) {\n                    return next_history();\n                }\n                var left_over = lines[line].substring(col).length;\n                var diff;\n                // move to next line if at the end move to end of next line\n                if (left_over === 0) {\n                    diff = next.length + 1;\n                } else {\n                    diff = Math.min(col, next.length) + left_over;\n                    if (line === 0) {\n                        diff += prompt_len;\n                    }\n                    if (ending) {\n                        // correction for splitted line that don't have extra space\n                        diff += 1;\n                    }\n                }\n                self.position(diff, true);\n                return false;\n            } else {\n                return next_history();\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function backspace_key() {\n            if (reverse_search) {\n                rev_search_str = rev_search_str.slice(0, -1);\n                draw_reverse_prompt();\n            } else if (command !== '' && position > 0) {\n                self['delete'](-1);\n            }\n            // for next input after naitve backspace\n            // we need timeout because we don't want it to trigger\n            // for current input but next one\n            self.oneTime(1, function() {\n                no_keydown = true;\n            });\n        }\n        // -------------------------------------------------------------------------------\n        function left() {\n            if (position > 0) {\n                self.position(-1, true);\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function right() {\n            if (position < bare_text(command).length) {\n                self.position(1, true);\n            }\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function home(line) {\n            function home() {\n                self.position(0);\n            }\n            if (line) {\n                return function() {\n                    if (command.match(/\\n/)) {\n                        var string = command.substring(0, self.position());\n                        self.position(string.lastIndexOf('\\n') + 1);\n                    } else {\n                        home();\n                    }\n                };\n            } else {\n                return home;\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function end(line) {\n            function end() {\n                self.position(text(command).length);\n            }\n            if (line) {\n                return function() {\n                    if (command.match(/\\n/)) {\n                        var lines = command.split('\\n');\n                        var pos = self.position();\n                        var sum = 0;\n                        for (var i = 0; i < lines.length; ++i) {\n                            sum += lines[i].length;\n                            if (sum > pos) {\n                                self.position(sum + i);\n                                return;\n                            }\n                        }\n                    }\n                    end();\n                };\n            } else {\n                return end;\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function mobile_focus() {\n            //if (is_touch) {\n            var $clip = clip.$node;\n            var focus = $clip.is(':focus');\n            if (enabled) {\n                if (!focus) {\n                    //clip.trigger('focus', [true]);\n                }\n                self.oneTime(10, function() {\n                    if (!$clip.is(':focus') && enabled) {\n                        $clip.trigger('focus', [true]);\n                    }\n                });\n            } else if (focus && !enabled) {\n                $clip.trigger('blur', [true]);\n            }\n        }\n        // -------------------------------------------------------------------------------\n        // fix for .cursor span animation that should only be applied when\n        // animation is equal to terminal-blink\n        // -------------------------------------------------------------------------------\n        function fix_cursor() {\n            if (animation_supported) {\n                var style = window.getComputedStyle(cursor[0]);\n                var animationName = style.getPropertyValue('--animation');\n                animationName = animationName.replace(/^\\s*|\\s*$/g, '');\n                var _class = self.attr('class');\n                if (_class.match(/-animation/)) {\n                    _class = _class.replace(/[a-z]+-animation/g, '');\n                }\n                if (animationName && !animationName.match(/blink/)) {\n                    var className = animationName.replace(/terminal-/, '') + '-animation';\n                    if (!_class.match(className)) {\n                        _class += ' ' + className;\n                    }\n                }\n                _class = _class.replace(/\\s+/g, ' ');\n                if (_class !== self.attr('class').replace(/\\s+/g, ' ')) {\n                    self.attr('class', _class);\n                }\n            }\n        }\n        // -------------------------------------------------------------------------------\n        // on mobile you can't delete character if input is empty (event\n        // will not fire) so we fake text entry, we could just put dummy\n        // data but we put real command and position\n        // -------------------------------------------------------------------------------\n        function fix_textarea(position_only) {\n            if (!self.isenabled()) {\n                return;\n            }\n            // delay worked while experimenting\n            self.oneTime(10, function() {\n                // we use space before command to show select all context menu\n                // idea taken from CodeMirror\n                if (!is_mobile && clip.val() !== command && !position_only) {\n                    clip.val(' ' + command);\n                }\n                if (enabled) {\n                    self.oneTime(10, function() {\n                        try {\n                            // we check first to improve performance\n                            if (clip.$node.caret() !== position + 1) {\n                                clip.$node.caret(position + 1);\n                            }\n                        } catch (e) {\n                            // firefox throw NS_ERROR_FAILURE ignore\n                        }\n                    });\n                }\n            });\n        }\n        // -------------------------------------------------------------------------------\n        // terminal animation don't work on android because they animate\n        // 2 properties\n        // -------------------------------------------------------------------------------\n        if (animation_supported && !is_android) {\n            animation = function(toggle) {\n                if (toggle) {\n                    cursor.addClass('cmd-blink');\n                } else {\n                    cursor.removeClass('cmd-blink');\n                }\n            };\n            restart_animation = function() {\n                var new_cursor = cursor.clone();\n                new_cursor.insertBefore(cursor);\n                cursor.remove();\n                cursor = new_cursor;\n            };\n        } else {\n            var animating = false;\n            animation = function(toggle) {\n                if (toggle && !animating) {\n                    animating = true;\n                    cursor.addClass('cmd-inverted cmd-blink');\n                    self.everyTime(500, 'blink', blink);\n                } else if (animating && !toggle) {\n                    animating = false;\n                    self.stopTime('blink', blink);\n                    cursor.removeClass('cmd-inverted cmd-blink');\n                }\n            };\n            restart_animation = function() {\n                animation(false);\n                animation(true);\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: Blinking cursor function\n        // ---------------------------------------------------------------------\n        function blink() {\n            cursor.toggleClass('cmd-inverted');\n        }\n        // ---------------------------------------------------------------------\n        // :: Set prompt for reverse search\n        // ---------------------------------------------------------------------\n        function draw_reverse_prompt() {\n            prompt = '(reverse-i-search)`' + rev_search_str + \"': \";\n            draw_prompt();\n        }\n        // ---------------------------------------------------------------------\n        // :: Disable reverse search\n        // ---------------------------------------------------------------------\n        function clear_reverse_state() {\n            prompt = backup_prompt;\n            reverse_search = false;\n            reverse_search_position = null;\n            rev_search_str = '';\n        }\n        // ---------------------------------------------------------------------\n        // :: Search through command line history. If next is not defined or\n        // :: false it searches for the first item from the end. If true it\n        // :: search for the next item\n        // ---------------------------------------------------------------------\n        function reverse_history_search(next) {\n            var history_data = history.data();\n            var regex, save_string;\n            var len = history_data.length;\n            if (next && reverse_search_position > 0) {\n                len -= reverse_search_position;\n            }\n            if (rev_search_str.length > 0) {\n                for (var j = rev_search_str.length; j > 0; j--) {\n                    save_string = $.terminal.escape_regex(rev_search_str.slice(0, j));\n                    if (settings.caseSensitiveSearch) {\n                        regex = new RegExp(save_string);\n                    } else {\n                        regex = new RegExp(save_string, 'i');\n                    }\n                    for (var i = len; i--;) {\n                        if (regex.test(history_data[i])) {\n                            reverse_search_position = history_data.length - i;\n                            self.position(history_data[i].indexOf(save_string));\n                            self.set(history_data[i], true);\n                            redraw();\n                            if (rev_search_str.length !== j) {\n                                rev_search_str = rev_search_str.slice(0, j);\n                                draw_reverse_prompt();\n                            }\n                            return;\n                        }\n                    }\n                }\n            }\n            rev_search_str = ''; // clear if not found any\n        }\n        // ---------------------------------------------------------------------\n        // :: calculate width of hte character\n        // ---------------------------------------------------------------------\n        function get_char_width() {\n            var $prompt = self.find('.cmd-prompt');\n            var html = $prompt.html();\n            $prompt.html('<span>&nbsp;</span>');\n            var width = $prompt.find('span')[0].getBoundingClientRect().width;\n            $prompt.html(html);\n            return width;\n        }\n        // ---------------------------------------------------------------------\n        // :: return number of characters in command line\n        // ---------------------------------------------------------------------\n        function get_num_chars(char_width) {\n            var width = self.width();\n            return Math.floor(width / char_width);\n        }\n        // ---------------------------------------------------------------------\n        // :: Split String that fit into command line where first line need to\n        // :: fit next to prompt (need to have less characters)\n        // ---------------------------------------------------------------------\n        function process_cmd_line(string) {\n            function split(string) {\n                return $.terminal.split_equal(string, num_chars);\n            }\n            // -----------------------------------------------------------------\n            function skip_empty(array) {\n                // we remove lines that are leftovers after adding space at the end\n                var result = [];\n                array.forEach(function(line, i) {\n                    if ($.terminal.strip(line).match(empty_marker_re)) {\n                        result[i] = false;\n                        // lines that will get removed need line ending on previos\n                        // line so code that check that marker works correctly\n                        if (i > 0) {\n                            result[i - 1] += line_marker;\n                        }\n                    } else {\n                        result[i] = array[i];\n                    }\n                });\n                return result.filter(function(line) {\n                    return line !== false;\n                });\n            }\n            // -----------------------------------------------------------------\n            var line = prompt_node.find('.cmd-line');\n            var prompt;\n            if (line.length) {\n                prompt = line.nextUntil('.cmd-line').text();\n            } else {\n                prompt = prompt_node.text();\n            }\n            prompt = $.terminal.escape_brackets(prompt);\n            var re = new RegExp('^' + $.terminal.escape_regex(prompt));\n            var array;\n            if (string.match(/\\n/)) {\n                var tmp = string.split('\\n');\n                var first_len = num_chars - prompt_len - 1;\n                for (var i = 0; i < tmp.length - 1; ++i) {\n                    tmp[i] += line_marker;\n                }\n                // split first line\n                if (strlen(tmp[0]) > first_len) {\n                    array = split(prompt + tmp[0]);\n                    array[0] = array[0].replace(re, '');\n                    array = skip_empty(array);\n                } else {\n                    array = [tmp[0]];\n                }\n                // process rest of the lines\n                for (i = 1; i < tmp.length; ++i) {\n                    if (strlen(tmp[i]) > num_chars) {\n                        var splitted = split(tmp[i]);\n                        if (i < tmp.length - 1) {\n                            splitted = skip_empty(splitted);\n                        }\n                        array = array.concat(splitted);\n                    } else {\n                        array.push(tmp[i]);\n                    }\n                }\n            } else {\n                array = split(prompt + string, num_chars);\n                array[0] = array[0].replace(re, '');\n            }\n            // fix issue with cursor that was cut off #379\n            if (array.length > 1) {\n                var len = $.terminal.length(array[array.length - 1]);\n                if (len === num_chars) {\n                    array.push('');\n                }\n            }\n            return array;\n        }\n        // ---------------------------------------------------------------------\n        var cmd_line_worker = new WorkerCache({\n            validation: function(key) {\n                var result = false;\n                if ((!this._previous_value || this._previous_value === key) &&\n                    (!this._cols || this._cols === num_chars)) {\n                    result = true;\n                }\n                this._previous_value = key;\n                this._cols = num_chars;\n                return result;\n            },\n            action: process_cmd_line\n        });\n        // ---------------------------------------------------------------------\n        function split_command_line(string) {\n            return cmd_line_worker.get(string);\n        }\n        // ---------------------------------------------------------------------\n        // :: use custom formatting\n        // ---------------------------------------------------------------------\n        function formatting(string, skip_formatted_position) {\n            // we don't want to format command when user type formatting in\n            try {\n                string = $.terminal.escape_formatting(string);\n                var format_options = $.extend({}, settings, {\n                    unixFormattingEscapeBrackets: true,\n                    position: position\n                });\n                var formatted = $.terminal.apply_formatters(string, format_options);\n                var output = $.terminal.normalize(formatted[0]);\n                var max = $.terminal.length(output);\n                if (!skip_formatted_position) {\n                    formatted_position = formatted[1];\n                    // fix issue with nested formatting where max length\n                    // is checked before nested_formatting flatten formatting\n                    if (formatted_position > max) {\n                        formatted_position = max;\n                    }\n                }\n                output = $.terminal.normalize(output);\n                return output;\n            } catch (e) {\n                alert_exception('[Formatting]', e.stack);\n                return string;\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: format and encode the string\n        // ---------------------------------------------------------------------\n        function format(string, before) {\n            //string = $.terminal.normalize(string);\n            var encoded = $.terminal.encode(wrap(string), {\n                tabs: settings.tabs,\n                before: before\n            });\n            return $.terminal.format(encoded, {\n                char_width: settings.char_width,\n                allowedAttributes: settings.allowedAttributes || []\n            });\n        }\n        // ---------------------------------------------------------------------\n        // :: function create new string with all characters in it's own\n        // :: formatting - it will only have style if the input is formatting\n        // :: this function is not very usefull so it's not in $.terminal\n        // ---------------------------------------------------------------------\n        function wrap(string) {\n            return $.terminal.partition(string).join('');\n        }\n        // ---------------------------------------------------------------------\n        // :: shortcut helpers\n        // ---------------------------------------------------------------------\n        function length(str, raw) {\n            return $.terminal.length(str, raw);\n        }\n        // ---------------------------------------------------------------------\n        function is_multiline(str) {\n            return strlen(text(str)) > num_chars - prompt_len - 1 ||\n                str.match(/\\n/);\n        }\n        // ---------------------------------------------------------------------\n        function substring(str, start, end) {\n            return $.terminal.substring(str, start, end);\n        }\n        // ---------------------------------------------------------------------\n        // :: helper function that check if string is valid emoji formatting\n        // ---------------------------------------------------------------------\n        function is_emoji_formatting(str) {\n            if ($.terminal.is_formatting(str)) {\n                return str.replace(format_parts_re, '$4').match(/^emoji /);\n            }\n            return false;\n        }\n        // ---------------------------------------------------------------------\n        // :: Function that displays the command line. Split long lines and\n        // :: place cursor in the right place\n        // ---------------------------------------------------------------------\n        var redraw = (function() {\n            var before = cursor.prev();\n            var after = cursor.next();\n            var cursor_line = cursor.parent();\n            // -----------------------------------------------------------------\n            // :: Draw line with the cursor\n            // -----------------------------------------------------------------\n            function draw_cursor_line(string, options) {\n                var end_line = string.match(line_marker_re);\n                if (end_line) {\n                    string = string.replace(line_marker_re, ' ');\n                }\n                cursor_line.toggleClass('cmd-end-line', !!end_line);\n                var cursor_end_line = false;\n                var settings = $.extend({\n                    prompt: '',\n                    last: false\n                }, options);\n                var position = settings.position;\n                var len = length(string);\n                var prompt = settings.prompt;\n                var c;\n                if (position === len) {\n                    before.html(format(string));\n                    c = '&nbsp;';\n                    empty_cursor();\n                    after.html('');\n                } else if (position === 0) {\n                    before.html('');\n                    c = substring(string, 0, 1);\n                    cursor.html(format(c));\n                    after.html(format(substring(string, 1), prompt + c));\n                } else {\n                    var before_str = $.terminal.substring(string, 0, position);\n                    before.html(format(before_str, prompt));\n                    c = substring(string, position, position + 1);\n                    var c_before = (prompt + before_str).replace(/^.*\\t/, '');\n                    cursor.html(format(c, c_before));\n                    if (position === len - 1) {\n                        cursor_end_line = true;\n                        after.html('');\n                    } else {\n                        if (c.match(/\\t/)) {\n                            c_before = '';\n                        } else {\n                            c_before += c;\n                        }\n                        after.html(format(substring(string, position + 1), c_before));\n                    }\n                }\n                if (ch_unit_bug) {\n                    if (typeof wcwidth !== 'undefined') {\n                        // handle emoji and wide characters in IE or\n                        // other possible browsers that don't have valid ch unit\n                        var size = strlen(text(c));\n                        if (size === 1 && is_emoji_formatting(c)) {\n                            size = 2;\n                        }\n                        cursor.width(char_width * size);\n                    } else {\n                        cursor.width(char_width);\n                    }\n                }\n                cursor.toggleClass('cmd-end-line', cursor_end_line);\n                // fix for animation when changing --animation dynamically\n                fix_cursor();\n                var cursor_len = $.terminal.length(cursor.text());\n                if (cursor_len > 1) {\n                    var node = cursor.find('[data-text]')[0];\n                    node.style.setProperty('--length', cursor_len);\n                }\n                // synchronize css animations (it's not that important because if user\n                // will change animation she should disable animation on span, but it\n                // looks nicer until she disable that inner animation)\n                restart_animation();\n            }\n            // -----------------------------------------------------------------\n            function div(string, before) {\n                var end_line = string.match(line_marker_re);\n                var result = '<div role=\"presentation\" aria-hidden=\"true\"';\n                if (end_line) {\n                    string = string.replace(line_marker_re, ' ');\n                    result += ' class=\"cmd-end-line\"';\n                }\n                result += '>' + format(string, before || '') + '</div>';\n                return result;\n            }\n            // -----------------------------------------------------------------\n            function empty_cursor() {\n                // data-text is for consistency in CSS and end class is for unit tests\n                cursor.html('<span data-text class=\"end\"><span>&nbsp;<span></span>');\n            }\n            // -----------------------------------------------------------------\n            // :: Display lines after the cursor\n            // -----------------------------------------------------------------\n            function lines_after(lines) {\n                var last_ins = cursor_line;\n                $.each(lines, function(i, line) {\n                    last_ins = $(div(line)).insertAfter(last_ins);\n                });\n            }\n            // -----------------------------------------------------------------\n            // :: Display lines before the cursor\n            // -----------------------------------------------------------------\n            function lines_before(lines) {\n                $.each(lines, function(i, line) {\n                    cursor_line.before(div(line, i === 0 ? prompt_last_line : ''));\n                });\n            }\n            // -----------------------------------------------------------------\n            // :: Redraw function\n            // -----------------------------------------------------------------\n            return function() {\n                var string;\n                switch (typeof settings.mask) {\n                    case 'boolean':\n                        string = settings.mask ? command.replace(/./g, '*') : command;\n                        break;\n                    case 'string':\n                        string = command.replace(/./g, settings.mask);\n                        break;\n                }\n                var formatted = formatting(string);\n                var pos;\n                if (length(formatted) === text(string).length) {\n                    pos = position;\n                } else {\n                    pos = formatted_position;\n                }\n                var i;\n                wrapper.css({\n                    display: 'none'\n                });\n                wrapper.find('div:not(.cmd-cursor-line)').remove();\n                before.html('');\n                if (is_multiline(formatted)) {\n                    var tabs = formatted.match(/\\t/g);\n                    var original_string = formatted;\n                    //quick tabulation hack\n                    if (tabs) {\n                        formatted = formatted.replace(/\\t/g, '\\x00\\x00\\x00\\x00');\n                    }\n                    var array = split_command_line(formatted);\n                    if (tabs) {\n                        array = $.map(array, function(line) {\n                            return line.replace(/\\x00\\x00\\x00\\x00/g, '\\t');\n                        });\n                    }\n                    var first_len = length(array[0]);\n                    //cursor in first line\n                    if (first_len === 0 && array.length === 1) {\n                        // skip empty line\n                    } else if (pos < first_len) {\n                        draw_cursor_line(array[0], {\n                            length: array.length,\n                            position: pos,\n                            prompt: prompt_last_line\n                        });\n                        lines_after(array.slice(1));\n                    } else if (pos === first_len) {\n                        // first char acter of second line\n                        cursor_line.before(div(array[0], prompt_last_line));\n                        draw_cursor_line(array[1] || '', {\n                            length: array.length,\n                            position: 0,\n                            last: array.length <= 2\n                        });\n                        if (array.length > 2) {\n                            lines_after(array.slice(2));\n                        }\n                    } else {\n                        var last = array.slice(-1)[0];\n                        var len = length(original_string);\n                        var from_last = len - pos;\n                        var last_len = length(last);\n                        var new_pos = 0;\n                        if (from_last === -1) {\n                            from_last = 0;\n                        }\n                        if (from_last <= last_len) { // in last line\n                            lines_before(array.slice(0, -1));\n                            if (last_len === from_last) {\n                                new_pos = 0;\n                            } else {\n                                new_pos = last_len - from_last;\n                            }\n                            draw_cursor_line(last, {\n                                length: array.length,\n                                position: new_pos,\n                                last: true\n                            });\n                        } else {\n                            // more lines, cursor in the middle\n                            var line_index;\n                            var current;\n                            new_pos = pos;\n                            for (i = 0; i < array.length; ++i) {\n                                var current_len = $.terminal.length(array[i]);\n                                if (new_pos > current_len) {\n                                    new_pos -= current_len;\n                                } else {\n                                    break;\n                                }\n                            }\n                            current = array[i];\n                            line_index = i;\n                            // cursor on first character in line\n                            if (new_pos === length(current)) {\n                                new_pos = 0;\n                                current = array[++line_index];\n                                if (current === undefined) {\n                                    //should never happen\n                                    var msg = $.terminal.defaults.strings.redrawError;\n                                    throw new Error(msg);\n                                }\n                            }\n                            draw_cursor_line(current, {\n                                length: array.length,\n                                position: new_pos\n                            });\n                            lines_before(array.slice(0, line_index));\n                            lines_after(array.slice(line_index + 1));\n                        }\n                    }\n                    self.find('.cmd-cursor-line ~ div:last-of-type')\n                        .append('<span></span>');\n                } else if (formatted === '') {\n                    before.html('');\n                    empty_cursor();\n                    after.html('');\n                } else {\n                    draw_cursor_line(formatted, {\n                        length: 1,\n                        position: pos\n                    });\n                }\n                var in_line = cursor_line.prevUntil('.cmd-prompt').length;\n                if (is_css_variables_supported) {\n                    self[0].style.setProperty('--cursor-line', in_line);\n                } else {\n                    clip.$node.css('top', in_line * 14 + 'px');\n                }\n                wrapper.css({\n                    display: ''\n                });\n            };\n        })();\n        // ---------------------------------------------------------------------\n        // :: find position that match display position for commands that\n        // :: change length by formatters\n        // ---------------------------------------------------------------------\n        var find_position = (function() {\n            function make_guess(string, position) {\n                var opts = $.extend({}, settings, {\n                    position: position\n                });\n                return $.terminal.apply_formatters(string, opts)[1];\n            }\n            function cmp(search_pos, pos, string) {\n                var guess = make_guess(string, pos);\n                if (guess === search_pos) {\n                    var next_guess = make_guess(string, pos + 1);\n                    if (next_guess > search_pos) {\n                        return 0;\n                    }\n                    return 1;\n                } else if (guess < search_pos) {\n                    return 1;\n                } else {\n                    return -1;\n                }\n            }\n            return function(string, formatted_position) {\n                if (formatted_position === 0) {\n                    return 0;\n                }\n                string = bare_text(string);\n                var codepoint_len = string.length;\n                var str = $.terminal.escape_brackets(command);\n                var pos = binary_search(0, codepoint_len, formatted_position, cmp, [str]);\n                var chars = $.terminal.split_characters(string);\n                if (codepoint_len > chars.length) {\n                    var len = 0;\n                    for (var i = 0; i < chars.length; ++i) {\n                        len += chars[i].length;\n                        if (len >= pos) {\n                            return len;\n                        }\n                    }\n                }\n                return pos;\n            };\n        })();\n        // ---------------------------------------------------------------------\n        // :: Draw prompt that can be a function or a string\n        // ---------------------------------------------------------------------\n        var prev_prompt_data;\n        var draw_prompt = (function() {\n            function set(prompt) {\n                prompt = $.terminal.apply_formatters(prompt, {});\n                prompt = $.terminal.normalize(prompt);\n                prompt = crlf(prompt);\n                last_rendered_prompt = prompt;\n                var lines = $.terminal.split_equal(prompt, num_chars).map(function(line) {\n                    if (!$.terminal.have_formatting(line)) {\n                        return '[[;;]' + line + ']';\n                    }\n                    return $.terminal.format_split(line).map(function(str) {\n                        if ($.terminal.is_formatting(str)) {\n                            return str;\n                        }\n                        return '[[;;]' + str + ']';\n                    }).join('');\n                });\n                var options = {\n                    char_width: settings.char_width\n                };\n                prompt_last_line = lines[lines.length - 1];\n                var encoded_last_line = $.terminal.encode(lines[lines.length - 1], {\n                    tabs: settings.tabs\n                });\n                var last_line = $.terminal.format(encoded_last_line, options);\n                var formatted = lines.slice(0, -1).map(function(line) {\n                    line = $.terminal.encode(line, {\n                        tabs: settings.tabs\n                    });\n                    return '<span class=\"cmd-line\">' +\n                        $.terminal.format(line, options) +\n                        '</span>';\n                }).concat([last_line]).join('\\n');\n                // update prompt if changed\n                if (prompt_node.html() !== formatted) {\n                    prompt_node.html(formatted);\n                    // fix for Chrome bug width selection\n                    // https://bugs.chromium.org/p/chromium/issues/detail?id=1087787\n                    var spans = prompt_node.find('> span span');\n                    if (is_ch_unit_supported) {\n                        prompt_node.hide();\n                        spans.each(function() {\n                            var self = $(this);\n                            var len = strlen(self.text());\n                            self.css('width', len + 'ch');\n                        });\n                        prompt_node.show();\n                    }\n                    prompt_len = strlen(text(encoded_last_line));\n                }\n            }\n            return function() {\n                // the data is used as cancelable reference because we have ref\n                // data object that is hold in closure and we remove `set` function\n                // so previous call to function prompt will be ignored\n                if (prev_prompt_data && prev_prompt_data.set) {\n                    prev_prompt_data.set = $.noop;\n                    // remove reference for garbage collector\n                    prev_prompt_data = null;\n                }\n                switch (typeof prompt) {\n                    case 'string':\n                        set(prompt);\n                        break;\n                    case 'function':\n                        var data = prev_prompt_data = {\n                            set: set\n                        };\n                        var ret = prompt.call(self, function(string) {\n                            data.set(string);\n                        });\n                        if (ret && ret.then) {\n                            ret.then(data.set).catch(function(e) {\n                                var prompt = $.terminal.escape_brackets('[ERR]> ');\n                                data.set('[[;red;]' + prompt + ']');\n                                alert_exception('Prompt', e);\n                            });\n                        }\n                        break;\n                }\n            };\n        })();\n        // ---------------------------------------------------------------------\n        function fire_change_command() {\n            if (is_function(settings.onCommandChange)) {\n                settings.onCommandChange.call(self, command);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Command Line Methods\n        // ---------------------------------------------------------------------\n        $.extend(self, {\n            option: function(name, value) {\n                if (typeof value === 'undefined') {\n                    return settings[name];\n                } else {\n                    settings[name] = value;\n                }\n                return self;\n            },\n            name: function(string) {\n                if (string !== undefined) {\n                    name = string;\n                    var enabled = history && history.enabled() || !history;\n                    history = new History(\n                        name,\n                        settings.historySize,\n                        settings.history === 'memory'\n                    );\n                    // disable new history if old was disabled\n                    if (!enabled) {\n                        history.disable();\n                    }\n                    return self;\n                } else {\n                    return name;\n                }\n            },\n            purge: function() {\n                history.clear();\n                return self;\n            },\n            history: function() {\n                return history;\n            },\n            'delete': function(n, stay) {\n                var removed, string;\n                if (n === 0) {\n                    return \"\";\n                } else if (n < 0) {\n                    if (position > 0) {\n                        // this may look weird but if n is negative we need\n                        // to use +\n                        removed = command.slice(0, position).slice(n);\n                        string = bare_text(command);\n                        string = string.slice(0, position + n) +\n                            string.slice(position, string.length);\n                        if (!stay) {\n                            self.position(position + n);\n                        }\n                    }\n                } else if (command !== '') {\n                    string = text(command);\n                    if (position < string.length) {\n                        removed = string.slice(position).slice(0, n);\n                        string = string.slice(0, position) +\n                            string.slice(position + n, string.length);\n                    }\n                }\n                if (removed) {\n                    command = string;\n                }\n                redraw();\n                fix_textarea();\n                fire_change_command();\n                return removed;\n            },\n            set: function(string, stay, silent) {\n                if (string !== undefined) {\n                    command = string;\n                    if (!stay) {\n                        self.position(bare_text(command).length);\n                    }\n                    redraw();\n                    fix_textarea();\n                    if (!silent) {\n                        fire_change_command();\n                    }\n                }\n                return self;\n            },\n            keymap: function(new_keymap, value) {\n                function wrap(key, fn) {\n                    var original = default_keymap[key];\n                    if (is_function(original)) {\n                        original = original.bind(self);\n                    }\n                    return function(e) {\n                        // new keymap function will get default as 2nd argument\n                        return fn.call(self, e, original);\n                    };\n                }\n                if (typeof new_keymap === 'undefined') {\n                    return keymap;\n                } else if (typeof new_keymap === 'string') {\n                    if (typeof value === 'undefined') {\n                        if (keymap[new_keymap]) {\n                            return keymap[new_keymap];\n                        } else if (default_keymap[new_keymap]) {\n                            return default_keymap[new_keymap];\n                        }\n                    } else {\n                        keymap[new_keymap] = wrap(new_keymap, value);\n                    }\n                } else {\n                    keymap = $.extend(\n                        {},\n                        keymap ? keymap : default_keymap,\n                        $.omap(new_keymap || {}, wrap)\n                    );\n                    return self;\n                }\n            },\n            insert: function(string, stay) {\n                var bare_command = bare_text(command);\n                var len = bare_text(string).length;\n                if (position === bare_command.length) {\n                    string = bare_command + string;\n                } else if (position === 0) {\n                    string = string + bare_command;\n                } else {\n                    string = bare_command.slice(0, position) +\n                        string + bare_command.slice(position);\n                }\n                command = string;\n                if (!stay) {\n                    self.position(len, true, true);\n                }\n                fix_textarea();\n                redraw();\n                fire_change_command();\n                return self;\n            },\n            get: function() {\n                return command;\n            },\n            commands: function(commands) {\n                if (commands) {\n                    settings.commands = commands;\n                    return self;\n                } else {\n                    return commands;\n                }\n            },\n            destroy: function() {\n                doc.unbind('keypress.cmd', keypress_event);\n                doc.unbind('keydown.cmd', keydown_event);\n                doc.unbind('input.cmd', input_event);\n                self.stopTime('blink', blink);\n                self.find('.cmd-wrapper').remove();\n                self.find('.cmd-prompt, .cmd-clipboard, .cmd-editable').remove();\n                self.removeClass('cmd').removeData('cmd').off('.cmd');\n                return self;\n            },\n            column: function(include_prompt) {\n                var before = command.substring(0, position);\n                if (position === 0 || !command.length) {\n                    return 0;\n                }\n                var re = /\\n?([^\\n]*)$/;\n                var match = before.match(re);\n                var col = match[1].length;\n                if (!have_newlines(before) &&\n                    (include_prompt || have_wrapping(before, prompt_len))) {\n                    col += prompt_len;\n                }\n                col %= num_chars;\n                return col;\n            },\n            line: function() {\n                var before = command.substring(0, position);\n                if (position === 0 || !command.length) {\n                    return 0;\n                }\n                return before.split(/\\n/).length - 1;\n            },\n            prompt: function(user_prompt) {\n                if (user_prompt === true) {\n                    return last_rendered_prompt;\n                } else if (user_prompt === undefined) {\n                    return prompt;\n                } else {\n                    var should_redraw = user_prompt !== prompt;\n                    if (typeof user_prompt === 'string' ||\n                        typeof user_prompt === 'function') {\n                        prompt = user_prompt;\n                    } else {\n                        throw new Error('prompt must be a function or string');\n                    }\n                    if (should_redraw) {\n                        draw_prompt();\n                        // we could check if command is longer then numchars-new\n                        // prompt\n                        redraw();\n                    }\n                    return self;\n                }\n            },\n            kill_text: function() {\n                return kill_text;\n            },\n            position: function(n, relative, silent) {\n                if (typeof n === 'number') {\n                    var pos = position;\n                    var len = bare_text(command).length;\n                    if (relative) {\n                        position += n;\n                    } else if (n < 0) {\n                        position = 0;\n                    } else if (n > len) {\n                        position = len;\n                    } else {\n                        position = n;\n                    }\n                    if (pos !== position && !silent) {\n                        redraw();\n                        if (is_function(settings.onPositionChange)) {\n                            settings.onPositionChange(position, formatted_position);\n                        }\n                        fix_textarea(true);\n                    }\n                    return self;\n                } else {\n                    return position;\n                }\n            },\n            refresh: function() {\n                draw_prompt();\n                redraw();\n                fix_textarea(true);\n                return self;\n            },\n            // if formatter change length of the strings (like emoji demo) we need to keep\n            // track of two different positions one for command and one for display\n            display_position: function(n, relative) {\n                if (n === undefined) {\n                    return formatted_position;\n                } else {\n                    // double escape\n                    var string = formatting($.terminal.escape_formatting(command), true);\n                    var len = length(string);\n                    var command_len = bare_text(command).length;\n                    var new_formatted_pos;\n                    if (relative) {\n                        new_formatted_pos = formatted_position + n;\n                    } else if (n > len) {\n                        new_formatted_pos = len;\n                    } else {\n                        new_formatted_pos = n;\n                    }\n                    if (text(string).length === length(command, true)) {\n                        formatted_position = new_formatted_pos;\n                        return self.position(new_formatted_pos);\n                    }\n                    if (len === new_formatted_pos) {\n                        formatted_position = new_formatted_pos;\n                        return self.position(command_len);\n                    }\n                    var pos = find_position(command, new_formatted_pos);\n                    if (pos !== -1) {\n                        formatted_position = new_formatted_pos;\n                        self.position(pos);\n                    }\n                    return self;\n                }\n            },\n            visible: (function() {\n                var visible = self.visible;\n                return function() {\n                    visible.apply(self, []);\n                    redraw();\n                    draw_prompt();\n                    return self;\n                };\n            })(),\n            show: (function() {\n                var show = self.show;\n                return function() {\n                    show.apply(self, []);\n                    redraw();\n                    draw_prompt();\n                    return self;\n                };\n            })(),\n            resize: function(num) {\n                char_width = get_char_width();\n                var new_num_chars;\n                if (typeof num === 'number') {\n                    new_num_chars = num;\n                } else {\n                    new_num_chars = get_num_chars(char_width);\n                }\n                if (num_chars !== new_num_chars || arguments[0] === true) {\n                    num_chars = new_num_chars;\n                    redraw();\n                    draw_prompt();\n                }\n                return self;\n            },\n            invoke_key: function(shortcut) {\n                var keys = shortcut.toUpperCase().split('+');\n                var key = keys.pop();\n                var ctrl = keys.indexOf('CTRL') !== -1;\n                var shift = keys.indexOf('SHIFT') !== -1;\n                var alt = keys.indexOf('ALT') !== -1;\n                var meta = keys.indexOf('META') !== -1;\n                var e = $.Event(\"keydown\", {\n                    ctrlKey: ctrl,\n                    shiftKey: shift,\n                    altKey: alt,\n                    metaKey: meta,\n                    which: reversed_keycodes[key],\n                    key: key\n                });\n                var doc = $(document.documentElement || window);\n                doc.trigger(e);\n                e = $.Event(\"keypress\");\n                e.key = key;\n                e.which = e.keyCode = 0;\n                doc.trigger(e);\n                return self;\n            },\n            clip: function() {\n                return clip;\n            },\n            enable: function(silent) {\n                if (!enabled) {\n                    enabled = true;\n                    self.addClass('enabled');\n                    try {\n                        if (!clip.$node.is(':focus')) {\n                            clip.$node.focus();\n                        }\n                        clip.$node.caret(position);\n                    } catch (e) {\n                        // firefox throw NS_ERROR_FAILURE - ignore\n                    }\n                    animation(true);\n                    if (!silent && is_function(prompt)) {\n                        draw_prompt();\n                    }\n                    fix_cursor();\n                    fix_textarea();\n                }\n                mobile_focus();\n                return self;\n            },\n            isenabled: function() {\n                return enabled;\n            },\n            disable: function(focus) {\n                enabled = false;\n                self.removeClass('enabled');\n                animation(false);\n                if (!focus) {\n                    mobile_focus();\n                }\n                return self;\n            },\n            mask: function(new_mask) {\n                if (typeof new_mask === 'undefined') {\n                    return settings.mask;\n                } else {\n                    settings.mask = new_mask;\n                    redraw();\n                    return self;\n                }\n            }\n        });\n        // ---------------------------------------------------------------------\n        // :: INIT\n        // ---------------------------------------------------------------------\n        self.name(settings.name || settings.prompt || '');\n        if (settings.prompt !== false) {\n            prompt = settings.prompt;\n            draw_prompt();\n        }\n        if (settings.enabled === true) {\n            self.enable();\n        }\n        char_width = get_char_width();\n        num_chars = get_num_chars(char_width);\n        if (!settings.history) {\n            history.disable();\n        }\n        var first_up_history = true;\n        // skip_keypress - hack for Android that was inserting characters on\n        // backspace\n        var skip_keypress = false;\n        var dead_key = false;\n        var single_key = false;\n        var no_keypress = false;\n        var no_key = false;\n        var no_keydown = true;\n        var backspace = false;\n        var process = false;\n        var hold = false;\n        var hold_pause = false;\n        var skip_insert;\n        // we hold text before keydown to fix backspace for Android/Chrome/SwiftKey\n        // keyboard that generate keycode 229 for all keys #296\n        var prev_command = '';\n        var prev_key;\n        // ---------------------------------------------------------------------\n        // :: Keydown Event Handler\n        // ---------------------------------------------------------------------\n        function is_backspace(e) {\n            return e.key.toUpperCase() === 'BACKSPACE' || e.which === 8;\n        }\n        // ---------------------------------------------------------------------\n        function is_single(e) {\n            return e.key && e.key.length === 1 && !e.ctrlKey;\n        }\n        // ---------------------------------------------------------------------\n        function is_delay_key(key) {\n            var specials = ['HOLD+SHIFT+BACKSPACE', 'HOLD+BACKSPACE'];\n            return specials.indexOf(key) !== -1 && settings.mobileDelete ||\n                settings.repeatTimeoutKeys.indexOf(key) !== -1;\n        }\n        // ---------------------------------------------------------------------\n        function clear_reverse_search_key(e) {\n            // arrows / Home / End / ENTER\n            return e.which === 35 || e.which === 36 ||\n                e.which === 37 || e.which === 38 ||\n                e.which === 39 || e.which === 40 ||\n                e.which === 13 || e.which === 27;\n        }\n        var skip_keydown = false;\n        // ---------------------------------------------------------------------\n        // function complexicity is 35 when adding this exception\n        // eslint-disable-next-line complexity\n        function keydown_event(e) {\n            debug('keydown \"' + e.key + '\" ' + e.fake + ' ' + e.which);\n            var result;\n            process = (e.key || '').toLowerCase() === 'process' || e.which === 0;\n            dead_key = no_keypress && single_key && !is_backspace(e);\n            // special keys don't trigger keypress fix #293\n            try {\n                if (!e.fake) {\n                    single_key = is_single(e);\n                    // chrome on android support key property but it's \"Unidentified\"\n                    no_key = String(e.key).toLowerCase() === 'unidentified';\n                    backspace = is_backspace(e);\n                }\n            } catch (exception) {}\n            // keydown created in input will have text already inserted and we\n            // want text before input\n            if (e.key === \"Unidentified\") {\n                no_keydown = true;\n                // android swift keyboard have always which == 229 we will triger proper\n                // event in input with e.fake == true\n                return;\n            }\n            if (!e.fake) {\n                no_keydown = false;\n            }\n            no_keypress = true;\n            // Meta+V did bind input but it didin't happen because terminal paste\n            // prevent native insert action\n            clip.$node.off('input', paste);\n            var key = get_key(e);\n            if (is_function(settings.keydown)) {\n                e.key = ie_key_fix(e);\n                result = settings.keydown.call(self, e);\n                if (result !== undefined) {\n                    //skip_keypress = true;\n                    if (!result) {\n                        skip_insert = true;\n                    }\n                    return result;\n                }\n            }\n            if (key !== prev_key) {\n                clear_hold();\n            }\n            // CTRL+C hanlding is only exception of cmd aware terminal logic\n            // cmd need to call CTRL+C keymap when terminal is not enabled\n            if (enabled || (key === 'CTRL+C' && is_terminal_selected(self))) {\n                if (hold) {\n                    prev_key = key;\n                    key = 'HOLD+' + key;\n                    if (hold_pause) {\n                        return;\n                    }\n                    if (settings.holdRepeatTimeout > 0 && is_delay_key(key)) {\n                        hold_pause = true;\n                        self.oneTime(settings.holdRepeatTimeout, 'delay', function() {\n                            hold_pause = false;\n                        });\n                    }\n                } else {\n                    self.oneTime(settings.holdTimeout, 'hold', function() {\n                        hold = true;\n                    });\n                    prev_key = key;\n                }\n                // if e.fake ignore of space is handled in input and next keydown\n                // is not triggered this is just in case code since on Android\n                // keydown is not triggered only input so event is always fake on Android\n                if (!e.fake && is_android) {\n                    if (skip_keydown) {\n                        clear_hold();\n                        skip_keydown = false;\n                        return false;\n                    }\n                    if (mobile_ignore_key(key)) {\n                        skip_keydown = true;\n                    } else if (mobile_ignore_key(prev_key)) {\n                        // just in case next key is different then space\n                        skip_keydown = false;\n                    }\n                }\n                restart_animation();\n                // CTRL+V don't fire keypress in IE11\n                skip_insert = ['CTRL+V', 'META+V'].indexOf(key) !== -1;\n                if (e.which !== 38 && !(e.which === 80 && e.ctrlKey)) {\n                    first_up_history = true;\n                }\n                if (reverse_search && clear_reverse_search_key(e)) {\n                    clear_reverse_state();\n                    draw_prompt();\n                    if (e.which === 27) { // ESC\n                        self.set('');\n                    }\n                    redraw();\n                    if (e.which === 13) {\n                        keydown_event.call(this, e);\n                    }\n                } else if (is_function(keymap[key])) {\n                    result = keymap[key](e);\n                    if (result === true) {\n                        return;\n                    }\n                    if (result !== undefined) {\n                        return result;\n                    }\n                } else if (e.altKey) {\n                    return;\n                } else {\n                    skip_keypress = false;\n                    return;\n                }\n                // this will prevent for instance backspace to go back one page\n                //skip_keypress = true;\n                //e.preventDefault();\n            }\n        }\n        function clear_hold() {\n            self.stopTime('hold');\n            self.stopTime('delay');\n            hold_pause = hold = false;\n        }\n        var doc = $(document.documentElement || window);\n        self.keymap(settings.keymap || {});\n        function keypress_event(e) {\n            debug('keypress \"' + e.key + '\" ' + e.fake);\n            clear_hold();\n            var result;\n            if (!e.fake) {\n                no_keypress = false;\n            }\n            if ((e.ctrlKey || e.metaKey) && !e.altKey) {\n                return;\n            }\n            if (skip_keypress) {\n                return;\n            }\n            if (is_function(settings.keypress)) {\n                result = settings.keypress.call(self, e);\n                if (result !== undefined) {\n                    if (!result) {\n                        skip_insert = true;\n                    }\n                    return result;\n                }\n            }\n            if (enabled) {\n                if (e.fake) {\n                    // event created in input, we prevent inserting text\n                    // in different interpreter when keydown called pop\n                    return;\n                }\n                // key polyfill is not correct for keypress\n                // https://github.com/cvan/keyboardevent-key-polyfill/issues/15\n                var key;\n                if (is_key_native) {\n                    key = e.key;\n                    // fixing IE inconsistency #362\n                    var normalized = key.toUpperCase();\n                    if (key_mapping[normalized]) {\n                        key = key_mapping[normalized];\n                    }\n                }\n                if (!key || no_key) {\n                    key = String.fromCharCode(e.which);\n                }\n                if ($.inArray(e.which, [13, 0, 8]) > -1) {\n                    if (e.keyCode === 123) { // for F12 which === 0\n                        return;\n                    }\n                    return false;\n                    // which === 100 - d\n                } else if (key && (!e.ctrlKey || (e.ctrlKey && e.ctrlKey)) &&\n                           (!(e.altKey && e.which === 100) || e.altKey) &&\n                           !dead_key) {\n                    // dead_key are handled by input event\n                    if (reverse_search) {\n                        rev_search_str += key;\n                        reverse_history_search();\n                        draw_reverse_prompt();\n                    } else if (key.length === 1) {\n                        self.insert(key);\n                    }\n                }\n            }\n        }\n        function event(type, chr, which) {\n            var event = $.Event(type);\n            event.which = which;\n            event.key = chr;\n            event.fake = true;\n            doc.trigger(event);\n        }\n        var skip_input = false;\n        function input_event() {\n            debug('input ' + no_keydown + ' || ' + process + ' ((' + no_keypress +\n                  ' || ' + dead_key + ') && !' + skip_insert + ' && (' + single_key +\n                  ' || ' + no_key + ') && !' + backspace + ')');\n            // correct for fake space used for select all context menu hack\n            var val = clip.val();\n            if (!is_mobile) {\n                val = val.replace(/^ /, '');\n            }\n            // Some Androids don't fire keypress - #39\n            // if there is dead_key we also need to grab real character #158\n            // Firefox/Android with google keyboard don't fire keydown and keyup #319\n            if ((no_keydown || process || ((no_keypress || dead_key) && !skip_insert &&\n                                          (single_key || no_key) && !backspace)) &&\n                val !== command) {\n                var pos = position;\n                // backspace is set in keydown if no keydown we need to get new one\n                if (no_keydown) {\n                    var cmd = prev_command;\n                    backspace = cmd.slice(0, cmd.length - 1).length === val.length;\n                }\n                if (skip_input) {\n                    skip_input = false;\n                    clip.val(command);\n                    return;\n                }\n                if (reverse_search) {\n                    rev_search_str = val;\n                    reverse_history_search();\n                    draw_reverse_prompt();\n                } else {\n                    var str = val.slice(position);\n                    if (str.length === 1 || backspace) {\n                        // original not optimized function called once\n                        var chr = get_next_character(str);\n                        if (mobile_ignore_key(chr)) {\n                            skip_input = true;\n                        }\n                        // we trigger events so keypress and keydown callback work\n                        if (no_keydown) {\n                            var keycode;\n                            if (backspace) {\n                                keycode = 8;\n                            } else {\n                                keycode = str.toUpperCase().charCodeAt(0);\n                            }\n                            event('keydown', backspace ? 'Backspace' : str, keycode);\n                        }\n                        if (no_keypress && !backspace) {\n                            event('keypress', chr, str.charCodeAt(0));\n                        }\n                    }\n                    if (backspace) {\n                        prev_command = command;\n                        return;\n                    }\n                    // if user return false in keydown we don't want to insert text\n                    if (skip_insert) {\n                        skip_insert = false;\n                        return;\n                    }\n                    self.set(val);\n                }\n                if (backspace) {\n                    self.position(pos - 1);\n                } else {\n                    // user enter more then one character if click on complete word\n                    // on android\n                    self.position(pos + Math.abs(val.length - prev_command.length));\n                }\n            }\n            prev_command = command;\n            skip_insert = false;\n            no_keydown = true;\n        }\n        doc.bind('keypress.cmd', keypress_event);\n        doc.bind('keydown.cmd', keydown_event);\n        doc.bind('keyup.cmd', clear_hold);\n        doc.bind('input.cmd', input_event);\n        (function() {\n            if (is_mobile) {\n                $(self[0]).add(clip.$node).on('touchstart.cmd', function() {\n                    if (!self.isenabled()) {\n                        clip.focus();\n                    } else {\n                        clip.blur();\n                    }\n                });\n                self.disable();\n                return;\n            }\n            var was_down = false;\n            var count = 0;\n            self.on('mousedown.cmd', function() {\n                was_down = true;\n            }).on('mouseup.cmd', function(e) {\n                function trigger() {\n                    var $target = $(e.target);\n                    var is_prompt = $target.is('.cmd-prompt');\n                    if (!is_prompt && down && get_selected_html() === '') {\n                        if (enabled) {\n                            if ($target.is('.cmd')) {\n                                self.position(text(command).length);\n                            } else {\n                                self.display_position(get_char_pos(e));\n                            }\n                        }\n                    }\n                    count = 0;\n                }\n                // we get button from event for testing normally it's on originalEvent\n                var button;\n                if (e.originalEvent === undefined) {\n                    button = e.button;\n                } else {\n                    button = e.originalEvent.button;\n                }\n                if (button === 0 && get_selected_html() === '') {\n                    var name = 'click_' + id;\n                    if (++count === 1) {\n                        var down = was_down;\n                        if (enabled) {\n                            if (settings.clickTimeout === 0) {\n                                trigger();\n                            } else {\n                                self.oneTime(settings.clickTimeout, name, trigger);\n                            }\n                        } else {\n                            count = 0;\n                        }\n                    } else {\n                        self.stopTime(name);\n                        count = 0;\n                    }\n                }\n                was_down = false;\n            });\n        })();\n        self.data('cmd', self);\n        if (!('KeyboardEvent' in window && 'key' in window.KeyboardEvent.prototype)) {\n            setTimeout(function() {\n                throw new Error('key event property not supported try https://github.' +\n                                'com/inexorabletash/polyfill/blob/master/keyboard.js');\n            }, 0);\n        }\n        return self;\n    }; // cmd plugin\n    // -------------------------------------------------------------------------\n    var strlen = (function() {\n        if (typeof wcwidth === 'undefined') {\n            return function(string) {\n                return $.terminal.length(string);\n            };\n        } else {\n            return wcwidth;\n        }\n    })();\n    // -------------------------------------------------------------------------\n    function count_selfclosing_formatting(string) {\n        var count = 0;\n        if ($.terminal.have_formatting(string)) {\n            var re = new RegExp(format_parts_re, 'i');\n            $.terminal.format_split(string).forEach(function(str) {\n                if ($.terminal.is_formatting(str)) {\n                    var m = str.match(re);\n                    if (m && m[1].match(/@/) && m[6] === '') {\n                        count++;\n                    }\n                }\n            });\n        }\n        return count;\n    }\n    // -------------------------------------------------------------------------\n    function bare_text(string) {\n        if (!string.match(/&/)) {\n            return string;\n        }\n        return $('<span>' + safe(string) + '</span>').text();\n    }\n    // -------------------------------------------------------------------------\n    function text(string) {\n        return bare_text($.terminal.strip(string));\n    }\n    // -------------------------------------------------------------------------\n    function safe(string) {\n        if (!string.match(/[<>&]/)) {\n            return string;\n        }\n        return string.replace(/&(?![^;]+;)/g, '&amp;')\n            .replace(/>/g, '&gt;').replace(/</g, '&lt;');\n    }\n    // -------------------------------------------------------------------------\n    function crlf(string) {\n        return string.replace(/\\r/g, '');\n    }\n    // -------------------------------------------------------------------------\n    function char_len(chr) {\n        return entity_re.test(chr) ? 1 : chr.length;\n    }\n    // -------------------------------------------------------------------------\n    function make_re_fn(re) {\n        return function(string) {\n            var m = string.match(re);\n            if (starts_with(m)) {\n                return m[1];\n            }\n        };\n    }\n    // -------------------------------------------------------------------------\n    function starts_with(match) {\n        return match && match.index === 0;\n    }\n    // -------------------------------------------------------------------------\n    // :: optimized higher order function that it check complex regexes\n    // :: only when bigger string match those regexes, function is always\n    // :: used in loop when you process whole string, it's used to create local\n    // :: get_next_character function only cmd in input use original\n    // :: not optimized function\n    // -------------------------------------------------------------------------\n    function make_next_char_fun(string) {\n        var tests = [];\n        [\n            entity_re,\n            emoji_re,\n            combine_chr_re\n        ].forEach(function(re) {\n            if (string.match(re)) {\n                tests.push(make_re_fn(re));\n            }\n        });\n        if (string.match(astral_symbols_re)) {\n            tests.push(function(string) {\n                var m1 = string.match(astral_symbols_re);\n                if (starts_with(m1)) {\n                    var m2 = string.match(combine_chr_re);\n                    if (m2 && m2.index === 1) {\n                        return string.slice(0, 3);\n                    }\n                    return m1[1];\n                }\n            });\n        }\n        return function(string) {\n            for (var i = 0; i < tests.length; ++i) {\n                var test = tests[i];\n                var ret = test(string);\n                if (ret) {\n                    return ret;\n                }\n            }\n            return string[0];\n        };\n    }\n    // -------------------------------------------------------------------------\n    // :: function that return character from beginning of the string\n    // :: counting emoji, suroggate pairs and combine characters\n    // -------------------------------------------------------------------------\n    function get_next_character(string) {\n        var match_entity = string.match(entity_re);\n        if (starts_with(match_entity)) {\n            return match_entity[1];\n        }\n        var match_combo = string.match(combine_chr_re);\n        if (starts_with(match_combo)) {\n            return match_combo[1];\n        }\n        var match_emoji = string.match(emoji_re);\n        if (starts_with(match_emoji)) {\n            return match_emoji[1];\n        } else if (string.charCodeAt(0) < 255) {\n            return string[0];\n        } else {\n            var astral_match = string.match(astral_symbols_re);\n            if (starts_with(astral_match)) {\n                match_combo = string.match(combine_chr_re);\n                if (match_combo && match_combo.index === 1) {\n                    return string.slice(0, 3);\n                }\n                return string.slice(0, 2);\n            } else {\n                return string[0];\n            }\n        }\n    }\n    // -------------------------------------------------------------------------\n    // normalize position for counting emoji and extra chars\n    // -------------------------------------------------------------------------\n    function normalize_position(string, position) {\n        if (position === 0) {\n            return position;\n        }\n        string = $.terminal.strip(string);\n        var result = $.terminal.split_characters(string).reduce(function(acc, chr) {\n            if (typeof acc === 'number') {\n                return acc;\n            }\n            var length = acc.length + char_len(chr);\n            if (length >= position) {\n                return acc.position + 1;\n            }\n            return {\n                position: acc.position + 1,\n                length: length\n            };\n        }, {position: 0, length: 0});\n        if (typeof result === 'number') {\n            return result;\n        } else {\n            return result.position;\n        }\n    }\n    // -------------------------------------------------------------------------\n    function char_width_prop(len, options) {\n        if (is_ch_unit_supported) {\n            return 'width: ' + len + 'ch';\n        } else if (!is_css_variables_supported) {\n            if (options.char_width) {\n                return 'width: ' + (options.char_width * len) + 'px';\n            }\n        } else {\n            return '--length: ' + len;\n        }\n        return '';\n    }\n    // -------------------------------------------------------------------------\n    // options {char_width}\n    function extra_css(text, options) {\n        if (typeof wcwidth !== 'undefined') {\n            var bare = bare_text(text);\n            var len = strlen(bare);\n            if (len > 1 && len !== $.terminal.length(bare)) {\n                return char_width_prop(len, options);\n            }\n        }\n        return '';\n    }\n    // -------------------------------------------------------------------------\n    function wide_characters(text, options) {\n        if (typeof wcwidth !== 'undefined') {\n            var bare = bare_text(text);\n            var chars = $.terminal.split_characters(bare);\n            if (chars.length === 1) {\n                return text;\n            }\n            var specs = chars.map(function(chr) {\n                return {\n                    len: strlen(chr),\n                    chr: chr\n                };\n            }).reduce(function(arr, spec) {\n                var last = arr[arr.length - 1];\n                if (last) {\n                    if (last.len !== spec.len) {\n                        return arr.concat([{\n                            sum: spec.len,\n                            len: spec.len,\n                            specs: [spec]\n                        }]);\n                    } else {\n                        arr.pop();\n                        return arr.concat([{\n                            sum: last.sum + spec.len,\n                            len: last.len,\n                            specs: last.specs.concat(spec)\n                        }]);\n                    }\n                }\n                return [{\n                    sum: spec.len,\n                    specs: [spec],\n                    len: spec.len\n                }];\n            }, []);\n            return specs.map(function(spec) {\n                if (spec.len === 1) {\n                    return make_string(spec);\n                }\n                var style = char_width_prop(spec.sum, options);\n                if (spec.sum === chars.length || !style.length) {\n                    return '<span>' + make_string(spec) + '</span>';\n                } else if (spec.specs.length > 1) {\n                    return wrap(style, spec.specs.map(function(spec) {\n                        return wrap(char_width_prop(spec.len), spec.chr);\n                    }).join(''));\n                } else {\n                    return wrap(style, make_string(spec));\n                }\n            }).join('');\n        }\n        function make_string(spec) {\n            return spec.specs.map(function(spec) {\n                return spec.chr;\n            }).join('');\n        }\n        function wrap(style, str) {\n            return '<span style=\"' + style + '\">' + str + '</span>';\n        }\n        return text;\n    }\n    // ---------------------------------------------------------------------\n    // :: Binary search utility\n    // ---------------------------------------------------------------------\n    function binary_search(start, end, search_pos, compare_fn, more_args) {\n        var len = end - start;\n        var mid = start + Math.floor(len / 2);\n        var args = [search_pos, mid].concat(more_args);\n        var cmp = compare_fn.apply(null, args);\n        if (cmp === 0) {\n            return mid;\n        } else if (cmp > 0 && len > 1) {\n            return binary_search(\n                mid,\n                end,\n                search_pos,\n                compare_fn,\n                more_args\n            );\n        } else if (cmp < 0 && len > 1) {\n            return binary_search(\n                start,\n                mid,\n                search_pos,\n                compare_fn,\n                more_args\n            );\n        } else {\n            return -1;\n        }\n    }\n    // -----------------------------------------------------------------\n    // :: selection utilities - should work in modern browser including IE9\n    // -----------------------------------------------------------------\n    function is_terminal_selected(cmd) {\n        if (is_function(window.getSelection)) {\n            var selection = window.getSelection();\n            if (selection.toString()) {\n                var node = selection.getRangeAt(0).startContainer.parentNode;\n                var term = $(node).closest('.terminal');\n                return term.length && (cmd && term.find('.cmd').is(cmd) || !cmd);\n            }\n        }\n    }\n    // -----------------------------------------------------------------\n    function get_selected_html() {\n        var html = '';\n        if (is_function(window.getSelection)) {\n            var sel = window.getSelection();\n            if (sel.rangeCount) {\n                var container = document.createElement('div');\n                for (var i = 0, len = sel.rangeCount; i < len; ++i) {\n                    container.appendChild(sel.getRangeAt(i).cloneContents());\n                }\n                html = container.innerHTML;\n            }\n        }\n        return html;\n    }\n    // -----------------------------------------------------------------\n    function with_selection(fn) {\n        var html = '';\n        var ranges = [];\n        if (is_function(window.getSelection)) {\n            var selection = window.getSelection();\n            if (selection.rangeCount) {\n                var container = document.createElement(\"div\");\n                for (var i = 0, len = selection.rangeCount; i < len; ++i) {\n                    var range = selection.getRangeAt(i).cloneRange();\n                    ranges.push(range);\n                    container.appendChild(range.cloneContents());\n                }\n                html = container.innerHTML;\n            }\n        }\n        fn(html);\n        if (ranges.length) {\n            selection.removeAllRanges();\n            ranges.forEach(function(range) {\n                selection.addRange(range);\n            });\n        }\n        return html !== '';\n    }\n    // -----------------------------------------------------------------\n    function process_selected_line() {\n        var $self = $(this);\n        var result = $self.text();\n        if ($self.hasClass('cmd-end-line')) {\n            result += '\\n';\n        }\n        return result;\n    }\n    // -----------------------------------------------------------------\n    function process_div(element) {\n        // span is empty line, div is default case with text\n        return $(element).find('> div, > span')\n            .map(process_selected_line).get().join('\\n').replace(/\\n$/, '');\n    }\n    // -----------------------------------------------------------------\n    function process_selected_html(html) {\n        var stdout;\n        var text = '';\n        var $html = $('<div>' + html + '</div>');\n        if (html.match(/<\\/div>/)) {\n            // match multiple echo output\n            stdout = $html.find('div[data-index]').map(function() {\n                return process_div(this);\n            }).get().join('\\n');\n            // match inside single echo output\n            if (!stdout && html.match(/style=\"width: 100%;?\"/)) {\n                stdout = process_div($html);\n            }\n            text = stdout;\n        }\n        var $prompt = $html.find('.cmd-prompt');\n        if ($prompt.length) {\n            if (text.length) {\n                text += '\\n';\n            }\n            text += $prompt.text();\n        }\n        var $cmd_lines = $html.find('[role=\"presentation\"]');\n        if ($cmd_lines.length) {\n            text += $cmd_lines.map(process_selected_line).get().join('');\n        }\n        if (!text.length && html) {\n            text = $html.text();\n        }\n        return text.replace(/\\xA0/g, ' '); // fix &nbsp; space\n    }\n    // ---------------------------------------------------------------------\n    // :: copy given DOM element text to clipboard\n    // ---------------------------------------------------------------------\n    var text_to_clipboard;\n    if (is_function(document.queryCommandSupported) &&\n        document.queryCommandSupported('copy')) {\n        text_to_clipboard = function text_to_clipboard($textarea, text) {\n            var val = $textarea.val();\n            var had_focus = $textarea.is(':focus');\n            var pos = $textarea.caret();\n            if (window.navigator && window.navigator.clipboard) {\n                navigator.clipboard.writeText(text);\n            } else if (had_focus) {\n                $textarea.val(text).focus();\n                $textarea[0].select();\n                document.execCommand('copy');\n                $textarea.val(val);\n                $textarea.caret(pos);\n            } else {\n                var $text = $('<textarea/>').css({\n                    position: 'fixed',\n                    top: 0,\n                    left: 0\n                }).appendTo('body');\n                $text.val(text).focus();\n                $text[0].select();\n                document.execCommand('copy');\n                $text.blur();\n                $text.remove();\n            }\n            return true;\n        };\n    } else {\n        text_to_clipboard = $.noop;\n    }\n    // ---------------------------------------------------------------------\n    var get_textarea_selection = (function() {\n        var textarea = document.createElement('textarea');\n        var selectionStart = 'selectionStart' in textarea;\n        textarea = null;\n        if (selectionStart) {\n            return function(textarea) {\n                var length = textarea.selectionEnd - textarea.selectionStart;\n                return textarea.value.substr(textarea.selectionStart, length);\n            };\n        } else if (document.selection) {\n            return function() {\n                var range = document.selection.createRange();\n                return range.text();\n            };\n        } else {\n            return function() {\n                return '';\n            };\n        }\n    })();\n    // ---------------------------------------------------------------------\n    function clear_textarea_selection(textarea) {\n        textarea.selectionStart = textarea.selectionEnd = 0;\n    }\n    // ---------------------------------------------------------------------\n    // :: return string that are common in all elements of the array\n    // ---------------------------------------------------------------------\n    function common_string(string, array, matchCase) {\n        if (!array.length) {\n            return '';\n        }\n        var type = string_case(string);\n        var result = [];\n        for (var j = string.length; j < array[0].length; ++j) {\n            var push = false;\n            var candidate = array[0].charAt(j),\n                candidateLower = candidate.toLowerCase();\n            for (var i = 1; i < array.length; ++i) {\n                push = true;\n                var current = array[i].charAt(j),\n                    currentLower = current.toLowerCase();\n                if (candidate !== current) {\n                    if (matchCase || type === 'mixed') {\n                        push = false;\n                        break;\n                    } else if (candidateLower === currentLower) {\n                        if (type === 'lower') {\n                            candidate = candidate.toLowerCase();\n                        } else if (type === 'upper') {\n                            candidate = candidate.toUpperCase();\n                        } else {\n                            push = false;\n                            break;\n                        }\n                    } else {\n                        push = false;\n                        break;\n                    }\n                }\n            }\n            if (push) {\n                result.push(candidate);\n            } else {\n                break;\n            }\n        }\n        return string + result.join('');\n    }\n    // ---------------------------------------------------------------------\n    function trigger_terminal_change(next) {\n        terminals.forEach(function(term) {\n            term.settings().onTerminalChange.call(term, next);\n        });\n    }\n    // ---------------------------------------------------------------------\n    var select = (function() {\n        if (window.getSelection) {\n            var selection = window.getSelection();\n            if (selection.setBaseAndExtent) {\n                return function(start, end) {\n                    var selection = window.getSelection();\n                    selection.setBaseAndExtent(start, 0, end, 1);\n                };\n            } else {\n                return function(start, end) {\n                    var selection = window.getSelection();\n                    var range = document.createRange();\n                    range.setStart(start, 0);\n                    range.setEnd(end, end.childNodes.length);\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                };\n            }\n        } else {\n            return $.noop;\n        }\n    })();\n    // -------------------------------------------------------------------------\n    function process_command(string, fn) {\n        var array = string.match(command_re) || [];\n        if (array.length) {\n            var name = array.shift();\n            var args = $.map(array, function(arg) {\n                if (arg.match(/^[\"']/)) {\n                    arg = arg.replace(/\\n/g, '\\\\u0000\\\\u0000\\\\u0000\\\\u0000');\n                    arg = fn(arg);\n                    return arg.replace(/\\x00\\x00\\x00\\x00/g, '\\n');\n                }\n                return fn(arg);\n            });\n            var quotes = $.map(array, function(arg) {\n                var m = arg.match(/^(['\"]).*\\1$/);\n                return m && m[1] || '';\n            });\n            var rest = string.slice(name.length).trim();\n            return {\n                command: string,\n                name: name,\n                args: args,\n                args_quotes: quotes,\n                rest: rest\n            };\n        } else {\n            return {\n                command: string,\n                name: '',\n                args: [],\n                args_quotes: quotes,\n                rest: ''\n            };\n        }\n    }\n    // -------------------------------------------------------------------------\n    $.terminal = {\n        version: '2.17.1',\n        date: 'Sun, 31 May 2020 16:15:43 +0000',\n        // colors from https://www.w3.org/wiki/CSS/Properties/color/keywords\n        color_names: [\n            'transparent', 'currentcolor', 'black', 'silver', 'gray', 'white',\n            'maroon', 'red', 'purple', 'fuchsia', 'green', 'lime', 'olive',\n            'yellow', 'navy', 'blue', 'teal', 'aqua', 'aliceblue',\n            'antiquewhite', 'aqua', 'aquamarine', 'azure', 'beige', 'bisque',\n            'black', 'blanchedalmond', 'blue', 'blueviolet', 'brown',\n            'burlywood', 'cadetblue', 'chartreuse', 'chocolate', 'coral',\n            'cornflowerblue', 'cornsilk', 'crimson', 'cyan', 'darkblue',\n            'darkcyan', 'darkgoldenrod', 'darkgray', 'darkgreen', 'darkgrey',\n            'darkkhaki', 'darkmagenta', 'darkolivegreen', 'darkorange',\n            'darkorchid', 'darkred', 'darksalmon', 'darkseagreen',\n            'darkslateblue', 'darkslategray', 'darkslategrey', 'darkturquoise',\n            'darkviolet', 'deeppink', 'deepskyblue', 'dimgray', 'dimgrey',\n            'dodgerblue', 'firebrick', 'floralwhite', 'forestgreen', 'fuchsia',\n            'gainsboro', 'ghostwhite', 'gold', 'goldenrod', 'gray', 'green',\n            'greenyellow', 'grey', 'honeydew', 'hotpink', 'indianred', 'indigo',\n            'ivory', 'khaki', 'lavender', 'lavenderblush', 'lawngreen',\n            'lemonchiffon', 'lightblue', 'lightcoral', 'lightcyan',\n            'lightgoldenrodyellow', 'lightgray', 'lightgreen', 'lightgrey',\n            'lightpink', 'lightsalmon', 'lightseagreen', 'lightskyblue',\n            'lightslategray', 'lightslategrey', 'lightsteelblue', 'lightyellow',\n            'lime', 'limegreen', 'linen', 'magenta', 'maroon',\n            'mediumaquamarine', 'mediumblue', 'mediumorchid', 'mediumpurple',\n            'mediumseagreen', 'mediumslateblue', 'mediumspringgreen',\n            'mediumturquoise', 'mediumvioletred', 'midnightblue', 'mintcream',\n            'mistyrose', 'moccasin', 'navajowhite', 'navy', 'oldlace', 'olive',\n            'olivedrab', 'orange', 'orangered', 'orchid', 'palegoldenrod',\n            'palegreen', 'paleturquoise', 'palevioletred', 'papayawhip',\n            'peachpuff', 'peru', 'pink', 'plum', 'powderblue', 'purple', 'red',\n            'rosybrown', 'royalblue', 'saddlebrown', 'salmon', 'sandybrown',\n            'seagreen', 'seashell', 'sienna', 'silver', 'skyblue', 'slateblue',\n            'slategray', 'slategrey', 'snow', 'springgreen', 'steelblue', 'tan',\n            'teal', 'thistle', 'tomato', 'turquoise', 'violet', 'wheat',\n            'white', 'whitesmoke', 'yellow', 'yellowgreen', 'rebeccapurple'],\n        // for unit tests\n        Cycle: Cycle,\n        History: History,\n        Stack: Stack,\n        // ---------------------------------------------------------------------\n        // :: Validate html color (it can be name or hex)\n        // ---------------------------------------------------------------------\n        valid_color: function valid_color(color) {\n            if (color.match(color_hex_re)) {\n                return true;\n            } else {\n                return $.inArray(color.toLowerCase(), $.terminal.color_names) !== -1;\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: function check if given string contain invalid strings\n        // ---------------------------------------------------------------------\n        unclosed_strings: function unclosed_strings(string) {\n            return !!string.match(unclosed_strings_re);\n        },\n        // ---------------------------------------------------------------------\n        // :: Escape all special regex characters, so it can be use as regex to\n        // :: match exact string that contain those characters\n        // ---------------------------------------------------------------------\n        escape_regex: function escape_regex(str) {\n            if (typeof str === 'string') {\n                var special = /([-\\\\^$[\\]()+{}?*.|])/g;\n                return str.replace(special, '\\\\$1');\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: test if string contain formatting\n        // ---------------------------------------------------------------------\n        have_formatting: function have_formatting(str) {\n            return typeof str === 'string' && !!str.match(format_exist_re);\n        },\n        is_formatting: function is_formatting(str) {\n            return typeof str === 'string' && !!str.match(format_full_re);\n        },\n        // ---------------------------------------------------------------------\n        // :: return array of formatting and text between them\n        // ---------------------------------------------------------------------\n        format_split: function format_split(str) {\n            return str.split(format_split_re).filter(Boolean);\n        },\n        // ---------------------------------------------------------------------\n        // :: replace that return position after replace for working with\n        // :: replacement that change length of the string\n        // :: source https://stackoverflow.com/a/46756077/387194\n        // ---------------------------------------------------------------------\n        tracking_replace: function tracking_replace(string, rex, replacement, position) {\n            if (!(rex instanceof RegExp)) {\n                throw new Error('tracking_replace: Second argument need to be RegExp');\n            }\n            function substring(string, start, end) {\n                return string.slice(start, end);\n            }\n            function length(string) {\n                return $.terminal.strip(string).length;\n            }\n            var new_string = \"\";\n            var match;\n            var index = 0;\n            var rep_string;\n            var new_position = position;\n            var start;\n            rex.lastIndex = 0; // Just to be sure\n            while ((match = rex.exec(string))) {\n                // if regex don't have g flag lastIndex will not work\n                if (rex.global) {\n                    // Add any of the original string we just skipped\n                    var last_index = length(substring(string, 0, rex.lastIndex));\n                    start = last_index - length(match[0]);\n                } else {\n                    start = match.index;\n                    last_index = start + length(match[0]);\n                }\n                if (index < start) {\n                    new_string += substring(string, index, start);\n                }\n                index = last_index;\n                // Build the replacement string. This just handles $$ and $n,\n                // you may want to add handling for $`, $', and $&.\n                if (typeof replacement === 'function') {\n                    rep_string = replacement.apply(null, match);\n                } else {\n                    rep_string = replacement.replace(/\\$(\\$|\\d)/g, function(m, c0) {\n                        if (c0 === \"$\") {\n                            return \"$\";\n                        }\n                        return match[c0];\n                    });\n                }\n                // Add on the replacement\n                new_string += rep_string;\n                // If the position is affected...\n                if (start < position) {\n                    // ... update it:\n                    var rep_len = length(rep_string);\n                    rep_len += count_selfclosing_formatting(rep_string);\n                    if (last_index < position) {\n                        // It's after the replacement, move it\n                        new_position = Math.max(\n                            0,\n                            new_position +\n                            rep_len -\n                            length(match[0])\n                        );\n                    } else {\n                        // It's *in* the replacement, put it just after\n                        new_position += rep_len - (position - start);\n                    }\n                }\n                // If the regular expression doesn't have the g flag, break here so\n                // we do just one replacement (and so we don't have an endless loop!)\n                if (!rex.global) {\n                    break;\n                }\n            }\n            // Add on any trailing text in the string\n            if (index < length(string)) {\n                new_string += substring(string, index);\n            }\n            // Return the string and the updated position\n            if (string === new_string) {\n                return [string, position];\n            }\n            return [new_string, new_position];\n        },\n        // ---------------------------------------------------------------------\n        // :: helper function used by substring and split_equal it loop over\n        // :: string and execute callback with text count and other data\n        // ---------------------------------------------------------------------\n        iterate_formatting: function iterate_formatting(string, callback) {\n            function is_space(i) {\n                return string.slice(i - 6, i) === '&nbsp;' ||\n                    string.slice(i - 1, i).match(/\\s/);\n            }\n            // ----------------------------------------------------------------\n            function match_entity(index) {\n                return string.slice(index).match(entity_re);\n            }\n            // ----------------------------------------------------------------\n            function is_open_formatting(i) {\n                return string[i] === '[' && string[i + 1] === '[';\n            }\n            // ----------------------------------------------------------------\n            function is_escape_bracket(i) {\n                return string[i - 1] !== '\\\\' && string[i] === '\\\\' &&\n                    string[i + 1] === ']';\n            }\n            // ----------------------------------------------------------------\n            function is_text(i) {\n                return not_formatting && (string[i] !== ']' || !have_formatting)\n                    && !opening;\n            }\n            // ----------------------------------------------------------------\n            // :: function will skip to next character in main loop\n            // :: TODO: improve performance of emoji regex and check whole\n            // :: string it's complex string if not use simple function\n            // ----------------------------------------------------------------\n            var get_next_character = make_next_char_fun(string);\n            function next_iteration() {\n                var char = get_next_character(substring);\n                if (char.length > 1 && $.terminal.length(substring) > 1) {\n                    return char.length - 1;\n                }\n                return 0;\n            }\n            // ----------------------------------------------------------------\n            function is_next_space() {\n                return (is_space(i) && (not_formatting || opening)) &&\n                    (space === -1 && prev_space !== i || space !== -1);\n            }\n            // ----------------------------------------------------------------\n            // :: last iteration or one before closing formatting\n            // ----------------------------------------------------------------\n            var last = false;\n            function is_last() {\n                if (i === string.length - 1 && !last) {\n                    last = true;\n                } else {\n                    last = !!substring.match(/^.]$/);\n                }\n                return last;\n            }\n            // ----------------------------------------------------------------\n            var have_formatting = $.terminal.have_formatting(string);\n            var formatting = '';\n            var in_text = false;\n            var count = 0;\n            var match;\n            var space = -1;\n            var space_count = -1;\n            var prev_space;\n            var length = 0;\n            var offset = 0;\n            var re_ent = /(&[^;]+);$/;\n            for (var i = 0; i < string.length; i++) {\n                var substring = string.slice(i);\n                match = substring.match(format_start_re);\n                if (match) {\n                    formatting = match[1];\n                    in_text = false;\n                } else if (formatting) {\n                    if (string[i] === ']') {\n                        if (in_text) {\n                            formatting = '';\n                            in_text = false;\n                        } else {\n                            in_text = true;\n                        }\n                    }\n                } else {\n                    in_text = true;\n                }\n                var not_formatting = (formatting && in_text) || !formatting;\n                var opening = is_open_formatting(i);\n                if (is_next_space()) {\n                    space = i;\n                    space_count = count;\n                }\n                var braket = string[i].match(/[[\\]]/);\n                offset = 0;\n                if (not_formatting) {\n                    // treat entity as one character\n                    if (string[i] === '&') {\n                        match = match_entity(i);\n                        if (match) {\n                            i += match[1].length - 2; // 2 because continue adds 1 to i\n                            continue;\n                        }\n                        ++count;\n                        ++length;\n                    } else if (is_escape_bracket(i)) {\n                        // escape \\] and \\\\ counts as one character\n                        ++count;\n                        ++length;\n                        offset = 1;\n                        i += 1;\n                    } else if (!braket || !have_formatting) {\n                        ++count;\n                        ++length;\n                    }\n                }\n                if (is_text(i)) {\n                    if (strlen(string[i]) === 2) {\n                        length++;\n                    }\n                    var char = get_next_character(substring);\n                    var size = char.length;\n                    // begining of enity that we've skipped, we are at the end\n                    if (char === ';') {\n                        match = string.slice(0, i + 1).match(re_ent);\n                        if (match) {\n                            offset = match[1].length;\n                            size = offset + 1;\n                        }\n                    }\n                    var data = {\n                        last: is_last(),\n                        count: count,\n                        index: i - offset,\n                        formatting: formatting,\n                        length: length,\n                        text: in_text,\n                        size: size,\n                        space: space,\n                        space_count: space_count\n                    };\n                    var ret = callback(data);\n                    if (ret === false) {\n                        break;\n                    } else if (ret) {\n                        if (ret.count !== undefined) {\n                            count = ret.count;\n                        }\n                        if (ret.length !== undefined) {\n                            length = ret.length;\n                        }\n                        if (ret.space !== undefined) {\n                            prev_space = space;\n                            space = ret.space;\n                        }\n                        if (ret.index !== undefined) {\n                            i = ret.index;\n                            continue;\n                        }\n                    }\n                } else if (i === string.length - 1 && !last) {\n                    // last iteration, if formatting have last bracket,\n                    // from formatting, then last iteration\n                    // was already called (in if) #550\n                    callback({\n                        last: true,\n                        count: count + 1,\n                        index: i,\n                        formatting: formatting,\n                        length: 0,\n                        text: in_text,\n                        space: space\n                    });\n                }\n                // handle emoji, suroggate pairs and combine characters\n                if (in_text) {\n                    i += next_iteration();\n                }\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: function return string splitted into single characters\n        // :: each character is wrapped into formatting from input string\n        // :: or empty formatting so it will create span when using with ::format\n        // ---------------------------------------------------------------------\n        partition: function partition(string) {\n            if (!$.terminal.have_formatting(string)) {\n                var chars = $.terminal.split_characters(string);\n                return chars.map(wrap);\n            }\n            var result = [];\n            function wrap(string) {\n                if (string.match(/\\\\$/)) {\n                    string += '\\\\';\n                }\n                return '[[;;]' + string + ']';\n            }\n            function formatting(string) {\n                if ($.terminal.is_formatting(string)) {\n                    if (string.match(/\\\\]$/)) {\n                        string = string.replace(/\\\\]/g, '\\\\\\\\]');\n                    }\n                } else {\n                    string = wrap(string);\n                }\n                return string;\n            }\n            $.terminal.iterate_formatting(string, function(data) {\n                if (data.text) {\n                    var text = [];\n                    if (data.formatting) {\n                        text.push(data.formatting);\n                    }\n                    text.push(string.substring(data.index, data.index + data.size));\n                    if (data.formatting) {\n                        text.push(']');\n                    }\n                    result.push(formatting(text.join('')));\n                }\n            });\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: formatting aware substring function\n        // ---------------------------------------------------------------------\n        substring: function substring(string, start_index, end_index) {\n            var chars = $.terminal.split_characters(string);\n            if (!chars.slice(start_index, end_index).length) {\n                return '';\n            }\n            if (!$.terminal.have_formatting(string)) {\n                return chars.slice(start_index, end_index).join('');\n            }\n            var start = 0;\n            var end;\n            var start_formatting = '';\n            var end_formatting = '';\n            var prev_index;\n            var offset = 1;\n            $.terminal.iterate_formatting(string, function(data) {\n                if (start_index && data.count === start_index + 1) {\n                    start = data.index;\n                    if (data.formatting) {\n                        start_formatting = data.formatting;\n                    }\n                }\n                if (end_index && data.count === end_index) {\n                    end_formatting = data.formatting;\n                    prev_index = data.index;\n                    offset = data.size;\n                }\n                if (data.count === end_index + 1) {\n                    end = data.index;\n                    if (data.formatting) {\n                        end = prev_index + offset;\n                    }\n                }\n            });\n            if (start_index && !start) {\n                return '';\n            }\n            if (end === undefined) {\n                end = string.length;\n            }\n            string = start_formatting + string.slice(start, end);\n            if (end_formatting) {\n                string = string.replace(/(\\[\\[^\\]]+)?\\]$/, '');\n                string += ']';\n            }\n            return string;\n        },\n        // ---------------------------------------------------------------------\n        // :: add format text as 5th paramter to formatting it's used for\n        // :: data attribute in format function - and fix unclosed &\n        // ---------------------------------------------------------------------\n        normalize: function normalize(string) {\n            string = string.replace(format_re, function(_, format, text) {\n                if (format.match(self_closing_re) && text === '') {\n                    return '[[' + format + '] ]';\n                }\n                if (text === '') {\n                    return '';\n                }\n                function safe(string) {\n                    return string.replace(/\\\\\\]/g, '&#93;').replace(/\\n/g, '\\\\n')\n                        .replace(/&nbsp;/g, ' ');\n                }\n                format = safe(format);\n                var semicolons = format.match(/;/g).length;\n                // missing semicolons\n                if (semicolons >= 4) {\n                    var args = format.split(/;/);\n                    var start = args.slice(0, 4).join(';');\n                    var arg = args.slice(4).join(';');\n                    return '[[' + start + ';' + (arg || text) + ']' + text + ']';\n                } else if (semicolons === 2) {\n                    semicolons = ';;';\n                } else if (semicolons === 3) {\n                    semicolons = ';';\n                }\n                // return '[[' + format + ']' + text + ']';\n                // closing braket will break formatting so we need to escape\n                // those using html entity equvalent\n                // space is hack for images that break iterate_formatting\n                format += semicolons + safe(text);\n                return '[[' + format + ']' + text + ']';\n            });\n            return $.terminal.amp(string);\n        },\n        // ---------------------------------------------------------------------\n        // :: split text into lines with equal length so each line can be\n        // :: rendered separately (text formatting can be longer then a line).\n        // ---------------------------------------------------------------------\n        split_equal: function split_equal(str, length, keep_words) {\n            var prev_format = '';\n            var result = [];\n            var array = $.terminal.normalize(str).split(/\\n/g);\n            for (var i = 0, len = array.length; i < len; ++i) {\n                if (array[i] === '') {\n                    result.push('');\n                    continue;\n                }\n                var line = array[i];\n                var get_next_character = make_next_char_fun(line);\n                var first_index = 0;\n                var output;\n                var line_length = line.length;\n                var last_bracket = !!line.match(/\\[\\[[^\\]]+\\](?:[^\\][]|\\\\\\])+\\]$/);\n                $.terminal.iterate_formatting(line, function(data) {\n                    var chr, substring;\n                    if (data.length >= length || data.last ||\n                        (data.length === length - 1 &&\n                         strlen(line[data.index + 1]) === 2)) {\n                        var can_break = false;\n                        // TODO: this need work\n                        if (keep_words && data.space !== -1) {\n                            // replace html entities with characters\n                            var stripped = text(line).substring(data.space_count);\n                            // real length, not counting formatting\n                            stripped = stripped.slice(0, length).trim();\n                            var text_len = strlen(stripped);\n                            if (stripped.match(/\\s/) || text_len < length) {\n                                can_break = true;\n                            }\n                        }\n                        // if words is true we split at last space and make next loop\n                        // continue where the space where located\n                        var after_index = data.index + data.size;\n                        if (last_bracket) {\n                            after_index += 1;\n                        }\n                        var new_index;\n                        if (keep_words && data.space !== -1 &&\n                            after_index !== line_length && can_break) {\n                            output = line.slice(first_index, data.space);\n                            new_index = data.space - 1;\n                        } else {\n                            substring = line.slice(data.index);\n                            chr = get_next_character(substring);\n                            output = line.slice(first_index, data.index) + chr;\n                            if (data.last && last_bracket && chr !== ']') {\n                                output += ']';\n                            }\n                            new_index = data.index + chr.length - 1;\n                        }\n                        if (keep_words) {\n                            output = output.replace(/^(&nbsp;|\\s)+|(&nbsp;|\\s)+$/g, '');\n                        }\n                        first_index = (new_index || data.index) + 1;\n                        if (prev_format) {\n                            var closed_formatting = output.match(/^[^\\]]*\\]/);\n                            output = prev_format + output;\n                            if (closed_formatting) {\n                                prev_format = '';\n                            }\n                        }\n                        var matched = output.match(format_re);\n                        if (matched) {\n                            var last = matched[matched.length - 1];\n                            if (last[last.length - 1] !== ']') {\n                                prev_format = last.match(format_begin_re)[1];\n                                output += ']';\n                            } else if (output.match(format_end_re)) {\n                                output = output.replace(format_end_re, '');\n                                prev_format = last.match(format_begin_re)[1];\n                            }\n                        }\n                        result.push(output);\n                        // modify loop by returing new data\n                        return {index: new_index, length: 0, space: -1};\n                    }\n                });\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: Escape & that's not part of entity\n        // ---------------------------------------------------------------------\n        amp: function amp(str) {\n            return str.replace(/&(?!#[0-9]+;|#x[0-9a-f]+;|[a-z]+;)/gi, '&amp;');\n        },\n        // ---------------------------------------------------------------------\n        // :: Encode formating as html for insertion into DOM\n        // ---------------------------------------------------------------------\n        encode: function encode(str, options) {\n            var settings = $.extend({\n                tabs: 4,\n                before: ''\n            }, options);\n            return $.terminal.amp(str).replace(/</g, '&lt;').replace(/>/g, '&gt;')\n                .replace(/ /g, '&nbsp;').split('\\n').map(function(line) {\n                    var splitted = line.split(/((?:\\[\\[[^\\]]+\\])?\\t(?:\\])?)/);\n                    splitted = splitted.filter(Boolean);\n                    return splitted.map(function(str, i) {\n                        if (str.match(/\\t/)) {\n                            return str.replace(/\\t([^\\t]*)$/, function(_, end) {\n                                if (i !== 0 && splitted[i - 1].match(/\\t\\]?$/)) {\n                                    var sp = new Array(settings.tabs + 1).join('&nbsp;');\n                                    return sp + end;\n                                } else {\n                                    var before = splitted.slice(i - 1, i).join('');\n                                    if (settings.before && i <= 1) {\n                                        before = settings.before + before;\n                                    }\n                                    var len = $.terminal.length(before);\n                                    var chars = settings.tabs - (len % settings.tabs);\n                                    if (chars === 0) {\n                                        chars = 4;\n                                    }\n                                    return new Array(chars + 1).join('&nbsp;') + end;\n                                }\n                            });\n                        }\n                        return str;\n                    }).join('');\n                }).join('\\n');\n        },\n        // -----------------------------------------------------------------------\n        // :: Default formatter that allow for nested formatting, example:\n        // :: [[;;#000]hello [[;#f00;]red] world]\n        // -----------------------------------------------------------------------\n        nested_formatting: function nested_formatting(string) {\n            if (!$.terminal.have_formatting(string)) {\n                return string;\n            }\n            var stack = [];\n            var re = /((?:\\[\\[(?:[^\\][]|\\\\\\])+\\])?(?:[^\\][]|\\\\\\])*\\]?)/;\n            var format_re = /\\[\\[([^\\][]+)\\][\\s\\S]*/;\n            var format_split_re = /^\\[\\[([^;]*);([^;]*);([^\\]]*)\\]/;\n            function get_inherit_style(stack) {\n                var output = [[], '', ''];\n                if (!stack.length) {\n                    return output;\n                }\n                for (var i = stack.length; i--;) {\n                    var formatting = stack[i].split(';');\n                    var style = formatting[0].split(/(-?[@!gbiuso])/g).filter(Boolean);\n                    style.forEach(function(s) {\n                        if (output[0].indexOf(s) === -1) {\n                            output[0].push(s);\n                        }\n                    });\n                    for (var j = 1; j < output.length; ++j) {\n                        var value = formatting[j].trim();\n                        if (value && !output[j]) {\n                            output[j] = value;\n                        }\n                    }\n                }\n                var ignore = output[0].filter(function(s) {\n                    return s[0] === '-';\n                }).map(function(s) {\n                    return s[1];\n                });\n                output[0] = output[0].filter(function(s) {\n                    return ignore.indexOf(s) === -1 && ignore.indexOf(s[1]) === -1;\n                }).join('');\n                return output.join(';');\n            }\n            return string.split(re).filter(Boolean).map(function(string) {\n                var style;\n                if (string.match(/^\\[\\[/)) {\n                    var formatting = string.replace(format_re, '$1');\n                    var is_formatting = $.terminal.is_formatting(string);\n                    string = string.replace(format_split_re, '');\n                    stack.push(formatting);\n                    if ($.terminal.nested_formatting.__inherit__) {\n                        style = get_inherit_style(stack);\n                    } else {\n                        style = formatting;\n                    }\n                    if (!is_formatting) {\n                        string += ']';\n                    } else {\n                        stack.pop();\n                    }\n                    string = '[[' + style + ']' + string;\n                } else {\n                    var pop = false;\n                    if (string.match(/\\]/)) {\n                        pop = true;\n                    }\n                    if (stack.length) {\n                        if ($.terminal.nested_formatting.__inherit__) {\n                            style = get_inherit_style(stack);\n                        } else {\n                            style = stack[stack.length - 1];\n                        }\n                        string = '[[' + style + ']' + string;\n                    }\n                    if (pop) {\n                        stack.pop();\n                    } else if (stack.length) {\n                        string += ']';\n                    }\n                }\n                return string;\n            }).join('');\n        },\n        // ---------------------------------------------------------------------\n        // :: safe function that will render text as it is\n        // ---------------------------------------------------------------------\n        escape_formatting: function escape_formatting(string) {\n            return $.terminal.escape_brackets(string);\n        },\n        // ---------------------------------------------------------------------\n        // :: apply custom formatters only to text\n        // ---------------------------------------------------------------------\n        apply_formatters: function apply_formatters(string, settings) {\n            if (string === \"\") {\n                if (settings && typeof settings.position === 'number') {\n                    return [\"\", settings.position];\n                } else {\n                    return \"\";\n                }\n            }\n            function test_lengths(formatter, index, ret, string) {\n                if (!formatter.__no_warn__ &&\n                    $.terminal.length(ret) !== $.terminal.length(string)) {\n                    warn('Your formatter[' + index + '] change length of the string, ' +\n                         'you should use [regex, replacement] formatter or function ' +\n                         ' that return [replacement, position] instead');\n                }\n            }\n            var formatters = $.terminal.defaults.formatters;\n            settings = settings || {};\n            var i = 0;\n            function apply_function_formatter(formatter, input) {\n                var options = $.extend({}, settings, {\n                    position: input[1]\n                });\n                var ret = formatter(input[0], options);\n                if (typeof ret === 'string') {\n                    test_lengths(formatter, i - 1, ret, input[0]);\n                    if (typeof ret === 'string') {\n                        return [ret, options.position];\n                    }\n                    return input;\n                } else if (is_array(ret) && ret.length === 2) {\n                    return ret;\n                } else {\n                    return input;\n                }\n            }\n            var input;\n            if (typeof settings.position === 'number') {\n                input = [string, settings.position];\n            } else {\n                input = [string, 0];\n            }\n            try {\n                var result = formatters.reduce(function(input, formatter) {\n                    i++;\n                    // __meta__ is for safe formatter that can handle formatters\n                    // inside formatters. for other usage we use format_split so one\n                    // formatter don't mess with formatter that was previous\n                    // on the list\n                    if (typeof formatter === 'function' && formatter.__meta__) {\n                        return apply_function_formatter(formatter, input);\n                    } else {\n                        var length = 0;\n                        var found_position = false;\n                        var splitted = $.terminal.format_split(input[0]);\n                        var partials = splitted.map(function(string) {\n                            var position;\n                            var this_len = text(string).length;\n                            // first position that match is used for this partial\n                            if (input[1] < length + this_len && !found_position) {\n                                position = input[1] - length;\n                                found_position = true;\n                            } else if (found_position) {\n                                // -1 indicate that we will not track position because it\n                                // was in one of the previous parial strings\n                                position = -1;\n                            } else {\n                                // initial position for replacers\n                                position = input[1];\n                            }\n                            // length is used to correct position after replace\n                            var length_before = length;\n                            var result;\n                            length += this_len;\n                            if ($.terminal.is_formatting(string)) {\n                                if (found_position) {\n                                    return [string, position];\n                                }\n                                return [string, -1];\n                            } else {\n                                if (is_array(formatter)) {\n                                    var options = formatter[2] || {};\n                                    result = [string, position < 0 ? 0 : position];\n                                    if (result[0].match(formatter[0])) {\n                                        if (options.loop) {\n                                            while (result[0].match(formatter[0])) {\n                                                result = $.terminal.tracking_replace(\n                                                    result[0],\n                                                    formatter[0],\n                                                    formatter[1],\n                                                    result[1]\n                                                );\n                                            }\n                                        } else {\n                                            result = $.terminal.tracking_replace(\n                                                result[0],\n                                                formatter[0],\n                                                formatter[1],\n                                                result[1]\n                                            );\n                                        }\n                                    }\n                                    if (position < 0) {\n                                        return [result[0], -1];\n                                    }\n                                } else if (typeof formatter === 'function') {\n                                    result = apply_function_formatter(formatter, [\n                                        string, position\n                                    ]);\n                                }\n                                if (typeof result !== 'undefined') {\n                                    // correct position becuase it's relative\n                                    // to partial and we need global for whole string\n                                    if (result[1] !== -1) {\n                                        result[1] += length_before;\n                                    }\n                                    var after_len = text(result[0]).length;\n                                    if (after_len !== this_len) {\n                                    }\n                                    return result;\n                                }\n                                return [string, -1];\n                            }\n                        });\n                        var position_partial = partials.filter(function(partial) {\n                            return partial[1] !== -1;\n                        })[0];\n                        var string = partials.map(function(partial) {\n                            return partial[0];\n                        }).join('');\n                        var position;\n                        if (typeof position_partial === 'undefined') {\n                            position = input[1];\n                        } else {\n                            position = position_partial[1];\n                        }\n                        // to make sure that output position is not outside the string\n                        var max = text(string).length;\n                        max += count_selfclosing_formatting(string);\n                        if (position > max) {\n                            position = max;\n                        }\n                        if (string === input[0]) {\n                            return input;\n                        }\n                        var before = $.terminal.strip(input[0]);\n                        var after = $.terminal.strip(string);\n                        if (before === after) {\n                            return [string, input[1]];\n                        }\n                        return [string, position];\n                    }\n                }, input);\n                if (typeof settings.position === 'number') {\n                    var codepoint_len = $.terminal.strip(result[0]).length;\n                    if ($.terminal.length(result[0]) < codepoint_len) {\n                        var position = result[1];\n                        position = normalize_position(result[0], position);\n                        var max = $.terminal.length(result[0]);\n                        if (position > max) {\n                            position = max;\n                        }\n                        result[1] = position;\n                    }\n                    return result;\n                } else {\n                    return result[0];\n                }\n            } catch (e) {\n                var msg = 'Error in formatter [' + (i - 1) + ']';\n                formatters.splice(i - 1);\n                throw new $.terminal.Exception('formatting', msg, e.stack);\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: Replace terminal formatting with html\n        // ---------------------------------------------------------------------\n        format: function format(str, options) {\n            var settings = $.extend({}, {\n                linksNoReferrer: false,\n                linksNoFollow: false,\n                allowedAttributes: [],\n                char_width: undefined,\n                escape: true,\n                anyLinks: false\n            }, options || {});\n            // -----------------------------------------------------------------\n            function filter_attr_names(names) {\n                if (names.length && settings.allowedAttributes.length) {\n                    return names.filter(function(name) {\n                        if (name === 'data-text') {\n                            return false;\n                        }\n                        var allowed = false;\n                        var filters = settings.allowedAttributes;\n                        for (var i = 0; i < filters.length; ++i) {\n                            if (filters[i] instanceof RegExp) {\n                                if (filters[i].test(name)) {\n                                    allowed = true;\n                                    break;\n                                }\n                            } else if (filters[i] === name) {\n                                allowed = true;\n                                break;\n                            }\n                        }\n                        return allowed;\n                    });\n                }\n                return [];\n            }\n            // -----------------------------------------------------------------\n            function clean_data(data, text) {\n                if (data === '') {\n                    return text;\n                } else {\n                    return data.replace(/&#93;/g, ']')\n                        .replace(/>/g, '&gt;').replace(/</g, '&lt;');\n                }\n            }\n            // -----------------------------------------------------------------\n            function add_attrs(attrs) {\n                if (attrs) {\n                    var keys = filter_attr_names(Object.keys(attrs));\n                    if (keys.length) {\n                        return ' ' + keys.map(function(name) {\n                            var value = attrs[name].replace(/\"/g, '&quot;');\n                            return name + '=\"' + value + '\"';\n                        }).join(' ');\n                    }\n                }\n                return '';\n            }\n            // -----------------------------------------------------------------\n            function rel_attr() {\n                var rel = [\"noopener\"];\n                if (settings.linksNoReferrer) {\n                    rel.unshift(\"noreferrer\");\n                }\n                if (settings.linksNoFollow) {\n                    rel.unshift(\"nofollow\");\n                }\n                return rel;\n            }\n            // -----------------------------------------------------------------\n            // test if this is valid Path\n            // -----------------------------------------------------------------\n            function is_path(url) {\n                return url.match(/^\\.{1,2}\\//) ||\n                    url.match(/^\\//) ||\n                    !(url.match(/\\//) || url.match(/^[^:]+:/));\n            }\n            // -----------------------------------------------------------------\n            function with_url_validation(fn) {\n                return function(url) {\n                    if (settings.anyLinks) {\n                        return true;\n                    }\n                    var test = fn(url);\n                    if (!test) {\n                        warn('Invalid URL ' + url + ' only http(s) ftp and Path ' +\n                             'are allowed');\n                    }\n                    return test;\n                };\n            }\n            // -----------------------------------------------------------------\n            var valid_href = with_url_validation(function(url) {\n                return url.match(/^((https?|ftp):\\/\\/|\\.{0,2}\\/)/) || is_path(url);\n            });\n            // -----------------------------------------------------------------\n            var valid_src = with_url_validation(function(url) {\n                return url.match(/^(https?:|blob:|data:)/) || is_path(url);\n            });\n            // -----------------------------------------------------------------\n            function format(s, style, color, background, _class, data_text, text) {\n                var attrs;\n                if (data_text.match(/;/)) {\n                    try {\n                        var splitted = data_text.split(';');\n                        var str = splitted.slice(1).join(';')\n                            .replace(/&nbsp;/g, ' ')\n                            .replace(/&lt;/g, '<')\n                            .replace(/&gt;/g, '>');\n                        if (str.match(/^\\s*\\{[^}]*\\}\\s*$/)) {\n                            attrs = JSON.parse(str);\n                            data_text = splitted[0];\n                        }\n                    } catch (e) {\n                    }\n                }\n                if (text === '' && !style.match(/@/)) {\n                    return ''; //'<span>&nbsp;</span>';\n                }\n                text = safe(text);\n                text = text.replace(/\\\\\\]/g, '&#93;');\n                if (settings.escape) {\n                    // inside formatting we need to unescape escaped slashes\n                    // but this escape is not needed when echo - don't know why\n                    text = text.replace(/\\\\\\\\/g, '\\\\');\n                }\n                var style_str = '';\n                if (style.indexOf('b') !== -1) {\n                    style_str += 'font-weight:bold;';\n                }\n                var text_decoration = [];\n                if (style.indexOf('u') !== -1) {\n                    text_decoration.push('underline');\n                }\n                if (style.indexOf('s') !== -1) {\n                    text_decoration.push('line-through');\n                }\n                if (style.indexOf('o') !== -1) {\n                    text_decoration.push('overline');\n                }\n                if (text_decoration.length) {\n                    style_str += 'text-decoration:' +\n                        text_decoration.join(' ') + ';';\n                }\n                if (style.indexOf('i') !== -1) {\n                    style_str += 'font-style:italic;';\n                }\n                if ($.terminal.valid_color(color)) {\n                    style_str += [\n                        'color:' + color,\n                        '--color:' + color,\n                        '--original-color:' + color\n                    ].join(';') + ';';\n                    if (style.indexOf('!') !== -1) {\n                        style_str += '--link-color:' + color + ';';\n                    }\n                    if (style.indexOf('g') !== -1) {\n                        style_str += 'text-shadow:0 0 5px ' + color + ';';\n                    }\n                }\n                if ($.terminal.valid_color(background)) {\n                    style_str += 'background-color:' + background + ';';\n                }\n                var data = clean_data(data_text, text);\n                var extra = extra_css(text, settings);\n                if (extra) {\n                    text = wide_characters(text, settings);\n                    style_str += extra;\n                }\n                var result;\n                if (style.indexOf('!') !== -1) {\n                    if (data.match(email_re)) {\n                        result = '<a href=\"mailto:' + data + '\"';\n                    } else {\n                        // only http and ftp links (prevent javascript)\n                        // unless user force it with anyLinks option\n                        if (!valid_href(data)) {\n                            data = '';\n                        }\n                        result = '<a target=\"_blank\"';\n                        if (data) {\n                            result += ' href=\"' + data + '\"';\n                        }\n                        result += ' rel=\"' + rel_attr().join(' ') + '\"';\n                    }\n                    // make focus to terminal textarea that will enable\n                    // terminal when pressing tab and terminal is disabled\n                    result += ' tabindex=\"1000\"';\n                } else if (style.indexOf('@') !== -1) {\n                    result = '<img';\n                    if (valid_src(data)) {\n                        result += ' src=\"' + data + '\"';\n                    }\n                } else {\n                    result = '<span';\n                }\n                result += add_attrs(attrs);\n                if (style_str !== '') {\n                    result += ' style=\"' + style_str + '\"';\n                }\n                if (_class !== '') {\n                    result += ' class=\"' + _class + '\"';\n                }\n                // links and image need data-text attribute cmd click behavior\n                // formatter can return links.\n                if (style.indexOf('!') !== -1) {\n                    result += ' data-text>' + text + '</a>';\n                } else if (style.indexOf('@') !== -1) {\n                    result += ' data-text/>';\n                } else {\n                    result += ' data-text=\"' + data.replace(/\"/g, '&quot;') + '\">' +\n                        '<span>' + text + '</span></span>';\n                }\n                return result;\n            }\n            if (typeof str === 'string') {\n                // support for formating foo[[u;;]bar]baz[[b;#fff;]quux]zzz\n                var splitted = $.terminal.format_split(str);\n                str = $.map(splitted, function(text) {\n                    if (text === '') {\n                        return text;\n                    } else if ($.terminal.is_formatting(text)) {\n                        // fix &nbsp; inside formatting because encode is called\n                        // before format\n                        text = text.replace(/\\[\\[[^\\]]+\\]/, function(text) {\n                            return text.replace(/&nbsp;/g, ' ');\n                        });\n                        return text.replace(format_parts_re, format);\n                    } else {\n                        text = safe(text);\n                        text = text.replace(/\\\\\\]/, '&#93;');\n                        var extra = extra_css(text, settings);\n                        var prefix;\n                        if (extra.length) {\n                            text = wide_characters(text, settings);\n                            prefix = '<span style=\"' + extra + '\"';\n                        } else {\n                            prefix = '<span';\n                        }\n                        return prefix + ' data-text=\"' + text + '\">' + text + '</span>';\n                    }\n                }).join('');\n                return str.replace(/<span><br\\s*\\/?><\\/span>/gi, '<br/>');\n            } else {\n                return '';\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: Replace brackets with html entities\n        // ---------------------------------------------------------------------\n        escape_brackets: function escape_brackets(string) {\n            return string.replace(/\\[/g, '&#91;').replace(/\\]/g, '&#93;');\n        },\n        // ---------------------------------------------------------------------\n        // :: complmentary function\n        // ---------------------------------------------------------------------\n        unescape_brackets: function unescape_brackets(string) {\n            return string.replace(/&#91;/g, '[').replace(/&#93;/g, ']');\n        },\n        // ---------------------------------------------------------------------\n        // :: return number of characters without formatting\n        // ---------------------------------------------------------------------\n        length: function(string, raw) {\n            return $.terminal.split_characters(raw ? string : text(string)).length;\n        },\n        // ---------------------------------------------------------------------\n        // :: split characters handling emoji, surogate pairs and combine chars\n        // ---------------------------------------------------------------------\n        split_characters: function split_characters(string) {\n            var result = [];\n            var get_next_character = make_next_char_fun(string);\n            while (string.length) {\n                var chr = get_next_character(string);\n                string = string.slice(chr.length);\n                result.push(chr);\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: return string where array items are in columns padded spaces\n        // :: after adding align tabs arr.join('\\t\\t') looks much better\n        // ---------------------------------------------------------------------\n        columns: function(array, cols, space) {\n            var no_formatting = array.map(function(string) {\n                return $.terminal.strip(string);\n            });\n            var lengths = no_formatting.map(function(string) {\n                return strlen(string);\n            });\n            if (typeof space === 'undefined') {\n                space = 4;\n            }\n            var length = Math.max.apply(null, lengths) + space;\n            // we need value - 1 because index starts from 0\n            var column_limit = Math.floor(cols / length) - 1;\n            if (column_limit < 1) {\n                return array.join('\\n');\n            }\n            var lines = [];\n            for (var i = 0, len = array.length; i < len; i += column_limit) {\n                var line = array.slice(i, i + column_limit);\n                var last = line.pop();\n                lines.push(line.reduce(function(acc, string) {\n                    var stripped = $.terminal.strip(string);\n                    var pad = new Array(length - stripped.length + 1).join(' ');\n                    acc.push(string + pad);\n                    return acc;\n                }, []).join('') + last);\n            }\n            return lines.join('\\n');\n        },\n        // ---------------------------------------------------------------------\n        // :: Remove formatting from text\n        // ---------------------------------------------------------------------\n        strip: function strip(str) {\n            if (!$.terminal.have_formatting(str)) {\n                return str;\n            }\n            return $.terminal.format_split(str).map(function(str) {\n                if ($.terminal.is_formatting(str)) {\n                    str = str.replace(format_parts_re, '$6');\n                    return str.replace(/\\\\([[\\]])/g, function(whole, bracket) {\n                        return bracket;\n                    });\n                }\n                return str;\n            }).join('');\n        },\n        // ---------------------------------------------------------------------\n        // :: Return active terminal\n        // ---------------------------------------------------------------------\n        active: function active() {\n            return terminals.front();\n        },\n        // ---------------------------------------------------------------------\n        // :: Implmentation detail id is always length of terminals Cycle\n        // ---------------------------------------------------------------------\n        last_id: function last_id() {\n            var len = terminals.length();\n            return len - 1;\n        },\n        // ---------------------------------------------------------------------\n        // :: Function that works with strings like 'asd' 'asd\\' asd' \"asd asd\"\n        // :: asd\\ 123 -n -b / [^ ]+ / /\\s+/ asd\\ a it creates a regex and\n        // :: numbers and replaces escape characters in double quotes\n        // :: if strict is set to false it only strips single and double quotes\n        // :: and escapes spaces\n        // ---------------------------------------------------------------------\n        parse_argument: function parse_argument(arg, strict) {\n            function parse_string(string) {\n                // split string to string literals and non-strings\n                return string.split(string_re).map(function(string) {\n                    // remove quotes if before are even number of slashes\n                    // we don't remove slases becuase they are handled by JSON.parse\n                    if (string.match(/^['\"]/)) {\n                        // fixing regex to match empty string is not worth it\n                        if (string === '\"\"' || string === \"''\") {\n                            return '';\n                        }\n                        var quote = string[0];\n                        var re = new RegExp(\"(^|(?:\\\\\\\\(?:\\\\\\\\)*)?)\" + quote, \"g\");\n                        string = string.replace(re, \"$1\");\n                    }\n                    string = '\"' + string + '\"';\n                    // use build in function to parse rest of escaped characters\n                    return JSON.parse(string);\n                }).join('');\n            }\n            if (strict === false) {\n                if (arg[0] === \"'\" && arg[arg.length - 1] === \"'\") {\n                    return arg.replace(/^'|'$/g, '');\n                } else if (arg[0] === '\"' && arg[arg.length - 1] === '\"') {\n                    return arg.replace(/^\"|\"$/g, '').replace(/\\\\([\" ])/g, '$1');\n                } else if (arg.match(/\\/.*\\/[gimy]*$/)) {\n                    return arg;\n                } else if (arg.match(/['\"]]/)) {\n                    // part of arg is in quote\n                    return parse_string(arg);\n                } else {\n                    return arg.replace(/\\\\ /g, ' ');\n                }\n            }\n            var regex = arg.match(re_re);\n            if (regex) {\n                return new RegExp(regex[1], regex[2]);\n            } else if (arg.match(/['\"]/)) {\n                return parse_string(arg);\n            } else if (arg.match(/^-?[0-9]+$/)) {\n                return parseInt(arg, 10);\n            } else if (arg.match(float_re)) {\n                return parseFloat(arg);\n            } else {\n                return arg.replace(/\\\\(['\"() ])/g, '$1');\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: function split and parse arguments\n        // ---------------------------------------------------------------------\n        parse_arguments: function parse_arguments(string) {\n            return $.map(string.match(command_re) || [], $.terminal.parse_argument);\n        },\n        // ---------------------------------------------------------------------\n        // :: Function split and strips single and double quotes\n        // :: and escapes spaces\n        // ---------------------------------------------------------------------\n        split_arguments: function split_arguments(string) {\n            return $.map(string.match(command_re) || [], function(arg) {\n                return $.terminal.parse_argument(arg, false);\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :: Function that returns an object {name,args}. Arguments are parsed\n        // :: using the function parse_arguments\n        // ---------------------------------------------------------------------\n        parse_command: function parse_command(string) {\n            return process_command(string, $.terminal.parse_argument);\n        },\n        // ---------------------------------------------------------------------\n        // :: Same as parse_command but arguments are parsed using split_arguments\n        // ---------------------------------------------------------------------\n        split_command: function split_command(string) {\n            return process_command(string, function(arg) {\n                return $.terminal.parse_argument(arg, false);\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :; function that parse arguments like yargs library\n        // ---------------------------------------------------------------------\n        parse_options: function parse_options(arg, options) {\n            var settings = $.extend({}, {\n                boolean: []\n            }, options);\n            if (typeof arg === 'string') {\n                return parse_options($.terminal.split_arguments(arg), options);\n            }\n            var result = {\n                _: []\n            };\n            function token(value) {\n                this.value = value;\n            }\n            var rest = arg.reduce(function(acc, arg) {\n                var str = typeof arg === 'string' ? arg : '';\n                if (str.match(/^--?[^-]/) && acc instanceof token) {\n                    result[acc.value] = true;\n                }\n                if (str.match(/^--[^-]/)) {\n                    var name = str.replace(/^--/, '');\n                    if (settings.boolean.indexOf(name) === -1) {\n                        return new token(name);\n                    } else {\n                        result[name] = true;\n                    }\n                } else if (str.match(/^-[^-]/)) {\n                    var single = str.replace(/^-/, '').split('');\n                    if (settings.boolean.indexOf(single.slice(-1)[0]) === -1) {\n                        var last = single.pop();\n                    }\n                    single.forEach(function(single) {\n                        result[single] = true;\n                    });\n                    if (last) {\n                        return new token(last);\n                    }\n                } else if (acc instanceof token) {\n                    result[acc.value] = arg;\n                } else if (arg) {\n                    result._.push(arg);\n                }\n                return null;\n            }, null);\n            if (rest instanceof token) {\n                result[rest.value] = true;\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: function executed for each text inside [[ .... ]] in echo\n        // ---------------------------------------------------------------------\n        extended_command: function extended_command(term, string, options) {\n            var settings = $.extend({\n                invokeMethods: false\n            }, options);\n            try {\n                change_hash = false;\n                var m = string.match(extended_command_re);\n                if (m) {\n                    if (!settings.invokeMethods) {\n                        warn('To invoke terminal or cmd methods you need to enable ' +\n                             'invokeMethods option');\n                        return;\n                    }\n                    string = m[1];\n                    var obj = m[2] === 'terminal' ? term : term.cmd();\n                    var fn = m[3];\n                    try {\n                        var args = eval('[' + m[4] + ']');\n                        if (!obj[fn]) {\n                            term.error('Unknow function ' + fn);\n                        } else {\n                            obj[fn].apply(term, args);\n                        }\n                    } catch (e) {\n                        term.error('Invalid invocation in ' +\n                                   $.terminal.escape_brackets(string));\n                    }\n                } else {\n                    term.exec(string, true).done(function() {\n                        change_hash = true;\n                    });\n                }\n            } catch (e) {\n                // error is process in exec\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: ES6 iterator for a given string that handle emoji and formatting\n        // ---------------------------------------------------------------------\n        iterator: function(string) {\n            function formatting(string) {\n                if ($.terminal.is_formatting(string)) {\n                    if (string.match(/\\]\\\\\\]/)) {\n                        string = string.replace(/\\]\\\\\\]/g, ']\\\\\\\\]');\n                    }\n                }\n                return string;\n            }\n            if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n                var len = $.terminal.length(string);\n                var i = 0;\n                var obj = {};\n                obj[Symbol.iterator] = function() {\n                    return {\n                        next: function() {\n                            if (i < len) {\n                                var text = $.terminal.substring(string, i, i + 1);\n                                i++;\n                                return {\n                                    value: formatting(text)\n                                };\n                            } else {\n                                return {\n                                    done: true\n                                };\n                            }\n                        }\n                    };\n                };\n                return obj;\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: object that can be used in string methods intead of regex\n        // ---------------------------------------------------------------------\n        formatter: new (function() {\n            try {\n                this[Symbol.split] = function(string) {\n                    return $.terminal.format_split(string);\n                };\n                this[Symbol.match] = function(string) {\n                    return string.match(format_re);\n                };\n                this[Symbol.replace] = function(string, replacer) {\n                    return string.replace(format_parts_re, replacer);\n                };\n                this[Symbol.search] = function(string) {\n                    return string.search(format_re);\n                };\n            } catch (e) {\n            }\n        })(),\n        // ---------------------------------------------------------------------\n        // :: helper function that add formatter before nested_formatting\n        // ---------------------------------------------------------------------\n        new_formatter: function(formatter) {\n            var formatters = $.terminal.defaults.formatters;\n            for (var i = 0; i < formatters.length; ++i) {\n                if (formatters[i] === $.terminal.nested_formatting) {\n                    formatters.splice(i, 0, formatter);\n                    return;\n                }\n            }\n            formatters.push(formatter);\n        }\n    };\n    // -------------------------------------------------------------------------\n    $.terminal.Exception = function Terminal_Exception(type, message, stack) {\n        if (arguments.length === 1) {\n            this.message = arguments[0];\n            this.type = 'TERMINAL';\n        } else {\n            this.type = type;\n            this.message = message;\n            if (stack) {\n                this.stack = stack;\n            }\n        }\n    };\n    $.terminal.Exception.prototype = new Error();\n    $.terminal.Exception.prototype.toString = function() {\n        return this.message + '\\n' + this.stack;\n    };\n    // -----------------------------------------------------------------------\n    // Helper plugins and functions\n    // -----------------------------------------------------------------------\n    $.fn.visible = function() {\n        return this.css('visibility', 'visible');\n    };\n    $.fn.hidden = function() {\n        return this.css('visibility', 'hidden');\n    };\n    // -----------------------------------------------------------------------\n    var warnings = [];\n    function warn(msg) {\n        msg = '[jQuery Terminal] ' + msg;\n        if (warnings.indexOf(msg) === -1) {\n            warnings.push(msg);\n            /* eslint-disable */\n            if (console) {\n                if (console.warn) {\n                    console.warn(msg);\n                } else if (console.log) {\n                    console.log(msg);\n                }\n                /* eslint-enable */\n            } else {\n                // prevent catching in outer try..catch\n                setTimeout(function() {\n                    throw new Error('WARN: ' + msg);\n                }, 0);\n            }\n        }\n    }\n    // -----------------------------------------------------------------------\n    // JSON-RPC CALL\n    // -----------------------------------------------------------------------\n    var ids = {}; // list of url based ids of JSON-RPC\n    $.jrpc = function(url, method, params, success, error) {\n        var deferred = new $.Deferred();\n        var options;\n        if ($.isPlainObject(url)) {\n            options = url;\n        } else {\n            options = {\n                url: url,\n                method: method,\n                params: params,\n                success: success,\n                error: error\n            };\n        }\n        function validJSONRPC(response) {\n            return $.isNumeric(response.id) &&\n                (typeof response.result !== 'undefined' ||\n                 typeof response.error !== 'undefined');\n        }\n        ids[options.url] = ids[options.url] || 0;\n        var request = {\n            'jsonrpc': '2.0',\n            'method': options.method,\n            'params': options.params,\n            'id': ++ids[options.url]\n        };\n        $.ajax({\n            url: options.url,\n            beforeSend: function beforeSend(jxhr, settings) {\n                if (is_function(options.request)) {\n                    options.request(jxhr, request);\n                }\n                settings.data = JSON.stringify(request);\n            },\n            success: function success(response, status, jqXHR) {\n                var content_type = jqXHR.getResponseHeader('Content-Type');\n                if (!content_type.match(/(application|text)\\/json/)) {\n                    warn('Response Content-Type is neither application/json' +\n                         ' nor text/json');\n                }\n                var json;\n                try {\n                    json = JSON.parse(response);\n                } catch (e) {\n                    if (options.error) {\n                        options.error(jqXHR, 'Invalid JSON', e);\n                    } else {\n                        throw new $.terminal.Exception('JSON', 'Invalid JSON', e.stack);\n                    }\n                    deferred.reject({message: 'Invalid JSON', response: response});\n                    return;\n                }\n                if (is_function(options.response)) {\n                    options.response(jqXHR, json);\n                }\n                if (validJSONRPC(json) || options.method === 'system.describe') {\n                    // don't catch errors in success callback\n                    if (options.success) {\n                        options.success(json, status, jqXHR);\n                    }\n                    deferred.resolve(json);\n                } else {\n                    if (options.error) {\n                        options.error(jqXHR, 'Invalid JSON-RPC');\n                    }\n                    deferred.reject({message: 'Invalid JSON-RPC', response: response});\n                }\n            },\n            error: options.error,\n            contentType: 'application/json',\n            dataType: 'text',\n            async: true,\n            cache: false,\n            // timeout: 1,\n            type: 'POST'\n        });\n        return deferred.promise();\n    };\n    // -----------------------------------------------------------------------\n    function terminal_ready(term) {\n        return !!(term.closest('body').length &&\n                  term.is(':visible') &&\n                  term.find('.cmd-prompt').length);\n    }\n    // -----------------------------------------------------------------------\n    // :: Create fake terminal to calcualte the dimention of one character\n    // :: this will make terminal work if terminal div is not added to the\n    // :: DOM at init like with:\n    // :: $('<div/>').terminal().echo('foo bar').appendTo('body');\n    // -----------------------------------------------------------------------\n    function get_char_size(term) {\n        var rect;\n        if (terminal_ready(term)) {\n            var $prompt = term.find('.cmd-prompt').clone().css({\n                visiblity: 'hidden',\n                position: 'absolute'\n            });\n            $prompt.appendTo(term.find('.cmd')).html('&nbsp;');\n            rect = $prompt[0].getBoundingClientRect();\n            $prompt.remove();\n        } else {\n            var temp = $('<div class=\"terminal terminal-temp\"><div class=\"terminal-' +\n                         'wrapper\"><div class=\"terminal-output\"><div><div class=\"te' +\n                         'rminal-line\" style=\"float: left\"><span>&nbsp;</span></div' +\n                         '></div></div></div>').appendTo('body');\n            temp.addClass(term.attr('class')).attr('id', term.attr('id'));\n            if (term) {\n                var style = term.attr('style');\n                if (style) {\n                    style = style.split(/\\s*;\\s*/).filter(function(s) {\n                        return !s.match(/display\\s*:\\s*none/i);\n                    }).join(';');\n                    temp.attr('style', style);\n                }\n            }\n            rect = temp.find('.terminal-line')[0].getBoundingClientRect();\n        }\n        var result = {\n            width: rect.width,\n            height: rect.height\n        };\n        if (temp) {\n            temp.remove();\n        }\n        return result;\n    }\n    // -----------------------------------------------------------------------\n    // :: calculate numbers of characters\n    // -----------------------------------------------------------------------\n    function get_num_chars(terminal, char_size) {\n        var width = terminal.find('.terminal-fill').width();\n        var result = Math.floor(width / char_size.width);\n        // random number to not get NaN in node.js but big enough to\n        // not wrap exception\n        return result || 1000;\n    }\n    // -----------------------------------------------------------------------\n    // :: Calculate number of lines that fit without scroll\n    // -----------------------------------------------------------------------\n    function get_num_rows(terminal, char_size) {\n        var height = terminal.find('.terminal-fill').height();\n        return Math.floor(height / char_size.height);\n    }\n    // -----------------------------------------------------------------------\n    function all(array, fn) {\n        var same = array.filter(function(item) {\n            return item[fn]() === item;\n        });\n        return same.length === array.length;\n    }\n    // -----------------------------------------------------------------------\n    function string_case(string) {\n        var array = string.split('');\n        if (all(array, 'toLowerCase')) {\n            return 'lower';\n        } else if (all(array, 'toUpperCase')) {\n            return 'upper';\n        } else {\n            return 'mixed';\n        }\n    }\n    // -----------------------------------------------------------------------\n    function same_case(string) {\n        return string_case(string) !== 'mixed';\n    }\n    // -----------------------------------------------------------------------\n    // fix for jQuery bug\n    function is_function(object) {\n        return get_type(object) === 'function';\n    }\n    // -----------------------------------------------------------------------\n    function is_promise(object) {\n        return is_function(object && (object.then || object.done));\n    }\n    // -----------------------------------------------------------------------\n    function is_array(object) {\n        return get_type(object) === 'array';\n    }\n    // -----------------------------------------------------------------------\n    function get_type(object) {\n        return typeof object === 'function' ? 'function' : $.type(object);\n    }\n    // -----------------------------------------------------------------------\n    // :: TERMINAL PLUGIN CODE\n    // -----------------------------------------------------------------------\n    var version_set = !$.terminal.version.match(/^\\{\\{/);\n    var copyright = 'Copyright (c) 2011-2020 Jakub T. Jankiewicz ' +\n        '<https://jcubic.pl/me>';\n    var version_string = version_set ? ' v. ' + $.terminal.version : ' ';\n    // regex is for placing version string aligned to the right\n    var reg = new RegExp(' {' + version_string.length + '}$');\n    var name_ver = 'jQuery Terminal Emulator' +\n        (version_set ? version_string : '');\n    // -----------------------------------------------------------------------\n    // :: Terminal Signatures\n    // -----------------------------------------------------------------------\n    var signatures = [\n        ['jQuery Terminal', '(c) 2011-2020 jcubic'],\n        [name_ver, copyright.replace(/^Copyright | *<.*>/g, '')],\n        [name_ver, copyright.replace(/^Copyright /, '')],\n        [\n            '      _______                 ________                        __',\n            '     / / _  /_ ____________ _/__  ___/______________  _____  / /',\n            ' __ / / // / // / _  / _/ // / / / _  / _/     / /  \\\\/ / _ \\\\/ /',\n            '/  / / // / // / ___/ // // / / / ___/ // / / / / /\\\\  / // / /__',\n            '\\\\___/____ \\\\\\\\__/____/_/ \\\\__ / /_/____/_//_/_/_/_/_/  \\\\/\\\\__\\\\_\\\\___/',\n            '         \\\\/          /____/                                   '\n                .replace(reg, ' ') + version_string,\n            copyright\n        ],\n        [\n            '      __ _____                     ________                            ' +\n                '  __',\n            '     / // _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___ ' +\n                ' / /',\n            ' __ / // // // // // _  // _// // / / // _  // _//     // //  \\\\/ // _ ' +\n                '\\\\/ /',\n            '/  / // // // // // ___// / / // / / // ___// / / / / // // /\\\\  // // ' +\n                '/ /__',\n            '\\\\___//____ \\\\\\\\___//____//_/ _\\\\_  / /_//____//_/ /_/ /_//_//_/ /_/ \\\\' +\n                '__\\\\_\\\\___/',\n            ('          \\\\/              /____/                                     ' +\n             '     ').replace(reg, '') + version_string,\n            copyright\n        ]\n    ];\n    // -----------------------------------------------------------------------\n    // :: Default options\n    // -----------------------------------------------------------------------\n    $.terminal.nested_formatting.__meta__ = true;\n    // if set to true nested formatting will inherit styles from styles outside\n    $.terminal.nested_formatting.__inherit__ = false;\n    // nested formatting will always return different length so we silent the warning\n    $.terminal.nested_formatting.__no_warn__ = true;\n    $.terminal.defaults = {\n        prompt: '> ',\n        history: true,\n        exit: true,\n        clear: true,\n        enabled: true,\n        maskChar: '*',\n        wrap: true,\n        checkArity: true,\n        raw: false,\n        tabindex: 1,\n        invokeMethods: false,\n        exceptionHandler: null,\n        pauseEvents: true,\n        softPause: false,\n        mousewheel: null,\n        touchscroll: null,\n        memory: false,\n        cancelableAjax: true,\n        processArguments: true,\n        linksNoReferrer: false,\n        anyLinks: false,\n        linksNoFollow: false,\n        processRPCResponse: null,\n        completionEscape: true,\n        onCommandChange: null,\n        mobileDelete: is_mobile,\n        onPositionChange: null,\n        convertLinks: true,\n        extra: {},\n        tabs: 4,\n        historySize: 60,\n        scrollObject: null,\n        historyState: false,\n        importHistory: false,\n        historyFilter: null,\n        echoCommand: true,\n        scrollOnEcho: true,\n        login: null,\n        outputLimit: -1,\n        formatters: [$.terminal.nested_formatting],\n        onAjaxError: null,\n        pasteImage: true,\n        scrollBottomOffset: 20,\n        wordAutocomplete: true,\n        caseSensitiveAutocomplete: true,\n        caseSensitiveSearch: true,\n        clickTimeout: 200,\n        holdTimeout: 400,\n        holdRepeatTimeout: 200,\n        repeatTimeoutKeys: [],\n        mobileIngoreAutoSpace: [],\n        request: $.noop,\n        response: $.noop,\n        describe: 'procs',\n        onRPCError: null,\n        keymap: null,\n        doubleTab: null,\n        doubleTabEchoCommand: false,\n        ansiParser: {},\n        completion: false,\n        onInit: $.noop,\n        onClear: $.noop,\n        onBlur: $.noop,\n        onFocus: $.noop,\n        onTerminalChange: $.noop,\n        onExit: $.noop,\n        onPush: $.noop,\n        onPop: $.noop,\n        keypress: $.noop,\n        keydown: $.noop,\n        renderHandler: null,\n        onAfterRedraw: $.noop,\n        onEchoCommand: $.noop,\n        onPaste: $.noop,\n        onFlush: $.noop,\n        onBeforeCommand: null,\n        onAfterCommand: null,\n        onBeforeEcho: null,\n        onAfterEcho: null,\n        onBeforeLogin: null,\n        onAfterLogout: null,\n        onBeforeLogout: null,\n        allowedAttributes: ['title', /^aria-/, 'id', /^data-/],\n        strings: {\n            comletionParameters: 'From version 1.0.0 completion function need to' +\n                ' have two arguments',\n            wrongPasswordTryAgain: 'Wrong password try again!',\n            wrongPassword: 'Wrong password!',\n            ajaxAbortError: 'Error while aborting ajax call!',\n            wrongArity: \"Wrong number of arguments. Function '%s' expects %s got\" +\n                ' %s!',\n            commandNotFound: \"Command '%s' Not Found!\",\n            oneRPCWithIgnore: 'You can use only one rpc with describe == false ' +\n                'or rpc without system.describe',\n            oneInterpreterFunction: \"You can't use more than one function (rpc \" +\n                'without system.describe or with option describe == false count' +\n                 's as one)',\n            loginFunctionMissing: \"You didn't specify a login function\",\n            noTokenError: 'Access denied (no token)',\n            serverResponse: 'Server responded',\n            wrongGreetings: 'Wrong value of greetings parameter',\n            notWhileLogin: \"You can't call `%s' function while in login\",\n            loginIsNotAFunction: 'Authenticate must be a function',\n            canExitError: \"You can't exit from main interpreter\",\n            invalidCompletion: 'Invalid completion',\n            invalidSelector: 'Sorry, but terminal said that you use invalid ' +\n                'selector!',\n            invalidTerminalId: 'Invalid Terminal ID',\n            login: 'login',\n            password: 'password',\n            recursiveLoop: 'Recursive loop in echo detected, skip',\n            notAString: '%s function: argument is not a string',\n            redrawError: 'Internal error, wrong position in cmd redraw',\n            invalidStrings: 'Command %s have unclosed strings',\n            defunctTerminal: \"You can't call method on terminal that was destroyed\"\n        }\n    };\n    // -------------------------------------------------------------------------\n    // :: All terminal globals\n    // -------------------------------------------------------------------------\n    var requests = []; // for canceling on CTRL+D\n    var terminals = new Cycle(); // list of terminals global in this scope\n    // state for all terminals, terminals can't have own array fo state because\n    // there is only one popstate event\n    var save_state = []; // hold objects returned by export_view by history API\n    var hash_commands;\n    var change_hash = false; // don't change hash on Init\n    var fire_hash_change = true;\n    var first_instance = true; // used by history state\n    $.fn.terminal = function(init_interpreter, options) {\n        function StorageHelper(memory) {\n            if (memory) {\n                this.storage = {};\n            }\n            this.set = function(key, value) {\n                if (memory) {\n                    this.storage[key] = value;\n                } else {\n                    $.Storage.set(key, value);\n                }\n            };\n            this.get = function(key) {\n                if (memory) {\n                    return this.storage[key];\n                } else {\n                    return $.Storage.get(key);\n                }\n            };\n            this.remove = function(key) {\n                if (memory) {\n                    delete this.storage[key];\n                } else {\n                    $.Storage.remove(key);\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: helper function\n        // ---------------------------------------------------------------------\n        function get_processed_command(command) {\n            if ($.terminal.unclosed_strings(command)) {\n                var string = $.terminal.escape_brackets(command);\n                var message = sprintf(strings().invalidStrings, \"`\" + string + \"`\");\n                throw new $.terminal.Exception(message);\n            } else if (is_function(settings.processArguments)) {\n                return process_command(command, settings.processArguments);\n            } else if (settings.processArguments) {\n                return $.terminal.parse_command(command);\n            } else {\n                return $.terminal.split_command(command);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: helper function that use option to render objects\n        // ---------------------------------------------------------------------\n        function preprocess_value(value) {\n            if (is_function(settings.renderHandler)) {\n                var ret = settings.renderHandler.call(self, value, self);\n                if (ret === false) {\n                    return false;\n                }\n                if (typeof ret === 'string' || is_node(ret) || is_promise(ret)) {\n                    return ret;\n                } else {\n                    return value;\n                }\n            }\n            return value;\n        }\n        // ---------------------------------------------------------------------\n        // :: call when line is out of view when outputLimit is used\n        // :: NOTE: it's not called when less plugin is used onClear is called\n        // :: instead because less call term::clear() after export old view\n        // ---------------------------------------------------------------------\n        function unmount(node) {\n            var index = node.data('index');\n            var line = lines[index];\n            var options = line[1];\n            if (is_function(options.unmount)) {\n                options.unmount.call(self, node);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: helper function used in render and in update\n        // ---------------------------------------------------------------------\n        function prepare_render(value, options) {\n            if (is_node(value)) {\n                var settings = $.extend({}, options, {\n                    raw: true,\n                    finalize: function(div) {\n                        var node;\n                        if (value instanceof $.fn.init) {\n                            // deep clone with events - we clone because remove\n                            // from DOM will remove events from original object\n                            node = value.clone(true, true);\n                        } else {\n                            // don't clone html nodes because it will not\n                            // work for canvas or video tag\n                            node = value;\n                        }\n                        div.find('.terminal-render-item').replaceWith(node);\n                        if (options && is_function(options.finalize)) {\n                            options.finalize(div, self);\n                        }\n                    }\n                });\n                return ['<div class=\"terminal-render-item\"/>', settings];\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: helper function that renders DOM nodes and jQuery objects\n        // ---------------------------------------------------------------------\n        function render(value, options) {\n            var ret = prepare_render(value, options);\n            if (ret) {\n                self.echo.apply(self, ret);\n                return true;\n            }\n        }\n        // ---------------------------------------------------------------------\n        function get_node(index) {\n            return output.find('[data-index=' + index + ']');\n        }\n        // ---------------------------------------------------------------------\n        // :: test if object can be rendered\n        // ---------------------------------------------------------------------\n        function is_node(object) {\n            return object instanceof $.fn.init || object instanceof Element;\n        }\n        // ---------------------------------------------------------------------\n        // :: Display object on terminal\n        // ---------------------------------------------------------------------\n        function display_object(object) {\n            object = preprocess_value(object);\n            if (object === false) {\n                return;\n            }\n            if (render(object)) {\n                return;\n            }\n            if (typeof object === 'string') {\n                self.echo(object);\n            } else if (is_array(object)) {\n                self.echo($.map(object, function(object) {\n                    return JSON.stringify(object);\n                }).join(' '));\n            } else if (typeof object === 'object') {\n                self.echo(JSON.stringify(object));\n            } else {\n                self.echo(object);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display line code in the file if line numbers are present\n        // ---------------------------------------------------------------------\n        function print_line(url_spec, cols) {\n            var re = /(.*):([0-9]+):([0-9]+)$/;\n            // google chrome have line and column after filename\n            var m = url_spec.match(re);\n            if (m) {\n                // TODO: do we need to call pause/resume or return promise?\n                self.pause(settings.softPause);\n                $.get(m[1], function(response) {\n                    var file = m[1];\n                    var code = response.split('\\n');\n                    var n = +m[2] - 1;\n                    var start = n > 2 ? n - 2 : 0;\n                    var lines = code.slice(start, n + 3).map(function(line, i) {\n                        var prefix = '[' + (n + i - 1) + ']: ';\n                        var limit = cols - prefix.length - 4;\n                        if (line.length > limit) {\n                            line = line.substring(0, limit) + '...';\n                        }\n                        if (n > 2 ? i === 2 : i === n) {\n                            line = '[[;#f00;]' +\n                                $.terminal.escape_brackets(line) + ']';\n                        }\n                        return prefix + line;\n                    }).filter(Boolean).join('\\n');\n                    if (lines.length) {\n                        self.echo('[[b;white;]' + file + ']');\n                        self.echo(lines).resume();\n                    }\n                }, 'text');\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function\n        // ---------------------------------------------------------------------\n        function display_json_rpc_error(error) {\n            if (is_function(settings.onRPCError)) {\n                settings.onRPCError.call(self, error);\n            } else {\n                self.error('&#91;RPC&#93; ' + error.message);\n                if (error.error && error.error.message) {\n                    error = error.error;\n                    // more detailed error message\n                    var msg = '\\t' + error.message;\n                    if (error.file) {\n                        msg += ' in file \"' + error.file.replace(/.*\\//, '') + '\"';\n                    }\n                    if (error.at) {\n                        msg += ' at line ' + error.at;\n                    }\n                    self.error(msg);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Create interpreter function from url string\n        // ---------------------------------------------------------------------\n        function make_basic_json_rpc(url, auth) {\n            var interpreter = function(method, params) {\n                self.pause(settings.softPause);\n                $.jrpc({\n                    url: url,\n                    method: method,\n                    params: params,\n                    request: function(jxhr, request) {\n                        try {\n                            settings.request.call(self, jxhr, request, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    response: function(jxhr, response) {\n                        try {\n                            settings.response.call(self, jxhr, response, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    success: function success(json) {\n                        if (json.error) {\n                            display_json_rpc_error(json.error);\n                        } else if (is_function(settings.processRPCResponse)) {\n                            settings.processRPCResponse.call(self, json.result, self);\n                        } else {\n                            display_object(json.result);\n                        }\n                        self.resume();\n                    },\n                    error: ajax_error\n                });\n            };\n            // this is the interpreter function\n            return function(command, terminal) {\n                if (command === '') {\n                    return;\n                }\n                try {\n                    command = get_processed_command(command);\n                } catch (e) {\n                    // exception can be thrown on invalid regex\n                    display_exception(e, 'TERMINAL (get_processed_command)');\n                    return;\n                    // throw e; // this will show stack in other try..catch\n                }\n                if (!auth || command.name === 'help') {\n                    // allows to call help without a token\n                    interpreter(command.name, command.args);\n                } else {\n                    var token = terminal.token();\n                    if (token) {\n                        interpreter(command.name, [token].concat(command.args));\n                    } else {\n                        // should never happen\n                        terminal.error('&#91;AUTH&#93; ' + strings().noTokenError);\n                    }\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: Create interpreter function from Object. If the value is object\n        // :: it will create nested interpreters\n        // ---------------------------------------------------------------------\n        function make_object_interpreter(object, arity, login, fallback) {\n            // function that maps commands to object methods\n            // it keeps terminal context\n            return function(user_command, terminal) {\n                if (user_command === '') {\n                    return;\n                }\n                var command;\n                try {\n                    command = get_processed_command(user_command);\n                } catch (e) {\n                    // exception can be thrown on invalid regex\n                    if (is_function(settings.exception)) {\n                        settings.exception(e, self);\n                    } else {\n                        self.error('Error: ' + (e.message || e));\n                    }\n                    return;\n                    // throw e; // this will show stack in other try..catch\n                }\n                var val = object[command.name];\n                var type = get_type(val);\n                if (type === 'function') {\n                    if (arity && val.length !== command.args.length) {\n                        self.error(\n                            '&#91;Arity&#93; ' +\n                                sprintf(\n                                    strings().wrongArity,\n                                    command.name,\n                                    val.length,\n                                    command.args.length\n                                )\n                        );\n                    } else {\n                        return val.apply(self, command.args);\n                    }\n                } else if (type === 'object' || type === 'string') {\n                    var commands = [];\n                    if (type === 'object') {\n                        commands = Object.keys(val);\n                        val = make_object_interpreter(\n                            val,\n                            arity,\n                            login\n                        );\n                    }\n                    terminal.push(val, {\n                        prompt: command.name + '> ',\n                        name: command.name,\n                        completion: type === 'object' ? commands : undefined\n                    });\n                } else if (is_function(fallback)) {\n                    fallback(user_command, self);\n                } else if (is_function(settings.onCommandNotFound)) {\n                    settings.onCommandNotFound.call(self, user_command, self);\n                } else {\n                    terminal.error(sprintf(strings().commandNotFound, command.name));\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        function ajax_error(xhr, status, error) {\n            self.resume(); // onAjaxError can use pause/resume call it first\n            if (is_function(settings.onAjaxError)) {\n                settings.onAjaxError.call(self, xhr, status, error);\n            } else if (status !== 'abort') {\n                self.error('&#91;AJAX&#93; ' + status + ' - ' +\n                           strings().serverResponse + ':\\n' +\n                           $.terminal.escape_brackets(xhr.responseText));\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: function create interpreter object based on JSON-RPC meta data\n        // ---------------------------------------------------------------------\n        function make_json_rpc_object(url, auth, success) {\n            function jrpc_success(json) {\n                if (json.error) {\n                    display_json_rpc_error(json.error);\n                } else if (is_function(settings.processRPCResponse)) {\n                    settings.processRPCResponse.call(self, json.result, self);\n                } else {\n                    display_object(json.result);\n                }\n                self.resume();\n            }\n            function jrpc_request(jxhr, request) {\n                try {\n                    settings.request.call(self, jxhr, request, self);\n                } catch (e) {\n                    display_exception(e, 'USER');\n                }\n            }\n            function jrpc_response(jxhr, response) {\n                try {\n                    settings.response.call(self, jxhr, response, self);\n                } catch (e) {\n                    display_exception(e, 'USER');\n                }\n            }\n            function response(response) {\n                var procs = response;\n                // we check if it's false before we call this function but\n                // it don't hurt to be explicit here\n                if (settings.describe !== false && settings.describe !== '') {\n                    settings.describe.split('.').forEach(function(field) {\n                        procs = procs[field];\n                    });\n                }\n                if (procs && procs.length) {\n                    var interpreter_object = {};\n                    $.each(procs, function(_, proc) {\n                        if ($.isPlainObject(proc) && typeof proc.name === 'string') {\n                            interpreter_object[proc.name] = function() {\n                                var append = auth && proc.name !== 'help';\n                                var args = Array.prototype.slice.call(arguments);\n                                var args_len = args.length + (append ? 1 : 0);\n                                if (settings.checkArity && proc.params &&\n                                    proc.params.length !== args_len) {\n                                    self.error(\n                                        '&#91;Arity&#93; ' +\n                                            sprintf(\n                                                strings().wrongArity,\n                                                proc.name,\n                                                proc.params.length,\n                                                args_len\n                                            )\n                                    );\n                                } else {\n                                    self.pause(settings.softPause);\n                                    if (append) {\n                                        var token = self.token(true);\n                                        if (token) {\n                                            args = [token].concat(args);\n                                        } else {\n                                            self.error('&#91;AUTH&#93; ' +\n                                                       strings().noTokenError);\n                                        }\n                                    }\n                                    $.jrpc({\n                                        url: url,\n                                        method: proc.name,\n                                        params: args,\n                                        request: jrpc_request,\n                                        response: jrpc_response,\n                                        success: jrpc_success,\n                                        error: ajax_error\n                                    });\n                                }\n                            };\n                        }\n                    });\n                    var login = typeof auth === 'string' ? auth : 'login';\n                    interpreter_object.help = interpreter_object.help || function(fn) {\n                        if (typeof fn === 'undefined') {\n                            var names = procs.map(function(proc) {\n                                return proc.name;\n                            }).join(', ') + ', help';\n                            self.echo('Available commands: ' + names);\n                        } else {\n                            var found = false;\n                            $.each(procs, function(_, proc) {\n                                if (proc.name === fn) {\n                                    found = true;\n                                    var msg = '';\n                                    msg += '[[bu;;]' + proc.name + ']';\n                                    if (proc.params) {\n                                        var params = proc.params;\n                                        if (auth && proc.name !== login) {\n                                            params = params.slice(1);\n                                        }\n                                        msg += ' ' + params.join(' ');\n                                    }\n                                    if (proc.help) {\n                                        msg += '\\n' + proc.help;\n                                    }\n                                    self.echo(msg);\n                                    return false;\n                                }\n                            });\n                            if (!found) {\n                                if (fn === 'help') {\n                                    self.echo('[[bu;;]help] [method]\\ndisplay help ' +\n                                              'for the method or list of methods if not' +\n                                              ' specified');\n                                } else {\n                                    var msg = 'Method `' + fn + \"' not found \";\n                                    self.error(msg);\n                                }\n                            }\n                        }\n                    };\n                    success(interpreter_object);\n                } else {\n                    success(null);\n                }\n            }\n            return $.jrpc({\n                url: url,\n                method: 'system.describe',\n                params: [],\n                success: response,\n                request: jrpc_request,\n                response: jrpc_response,\n                error: function error() {\n                    success(null);\n                }\n            });\n        }\n        // ---------------------------------------------------------------------\n        // :: function create interpeter function and call finalize with\n        // :: interpreter and optional completion\n        // ---------------------------------------------------------------------\n        function make_interpreter(user_intrp, login, finalize) {\n            finalize = finalize || $.noop;\n            var type = get_type(user_intrp);\n            var object;\n            var result = {};\n            var rpc_count = 0; // only one rpc can be use for array\n            var fn_interpreter;\n            if (type === 'array') {\n                object = {};\n                // recur will be called when previous acync call is finished\n                (function recur(interpreters, success) {\n                    if (interpreters.length) {\n                        var first = interpreters[0];\n                        var rest = interpreters.slice(1);\n                        var type = get_type(first);\n                        if (type === 'string') {\n                            self.pause(settings.softPause);\n                            if (settings.describe === false) {\n                                if (++rpc_count === 1) {\n                                    fn_interpreter = make_basic_json_rpc(first, login);\n                                } else {\n                                    self.error(strings().oneRPCWithIgnore);\n                                }\n                                recur(rest, success);\n                            } else {\n                                make_json_rpc_object(first, login, function(new_obj) {\n                                    if (new_obj) {\n                                        $.extend(object, new_obj);\n                                    } else if (++rpc_count === 1) {\n                                        fn_interpreter = make_basic_json_rpc(\n                                            first,\n                                            login\n                                        );\n                                    } else {\n                                        self.error(strings().oneRPCWithIgnore);\n                                    }\n                                    self.resume();\n                                    recur(rest, success);\n                                });\n                            }\n                        } else if (type === 'function') {\n                            if (fn_interpreter) {\n                                self.error(strings().oneInterpreterFunction);\n                            } else {\n                                fn_interpreter = first;\n                            }\n                            recur(rest, success);\n                        } else if (type === 'object') {\n                            $.extend(object, first);\n                            recur(rest, success);\n                        }\n                    } else {\n                        success();\n                    }\n                })(user_intrp, function() {\n                    finalize({\n                        interpreter: make_object_interpreter(\n                            object,\n                            false,\n                            login,\n                            fn_interpreter && fn_interpreter.bind(self)\n                        ),\n                        completion: Object.keys(object)\n                    });\n                });\n            } else if (type === 'string') {\n                if (settings.describe === false) {\n                    object = {\n                        interpreter: make_basic_json_rpc(user_intrp, login)\n                    };\n                    if ($.isArray(settings.completion)) {\n                        object.completion = settings.completion;\n                    }\n                    finalize(object);\n                } else {\n                    self.pause(settings.softPause);\n                    make_json_rpc_object(user_intrp, login, function(object) {\n                        if (object) {\n                            result.interpreter = make_object_interpreter(\n                                object,\n                                false,\n                                login\n                            );\n                            result.completion = Object.keys(object);\n                        } else {\n                            // no procs in system.describe\n                            result.interpreter = make_basic_json_rpc(user_intrp, login);\n                        }\n                        finalize(result);\n                        self.resume();\n                    });\n                }\n            } else if (type === 'object') {\n                finalize({\n                    interpreter: make_object_interpreter(\n                        user_intrp,\n                        settings.checkArity,\n                        login\n                    ),\n                    completion: Object.keys(user_intrp)\n                });\n            } else {\n                // allow $('<div/>').terminal();\n                if (type === 'undefined') {\n                    user_intrp = $.noop;\n                } else if (type !== 'function') {\n                    var msg = type + ' is invalid interpreter value';\n                    throw new $.terminal.Exception(msg);\n                }\n                // single function don't need bind\n                finalize({\n                    interpreter: user_intrp,\n                    completion: settings.completion\n                });\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Create JSON-RPC authentication function\n        // ---------------------------------------------------------------------\n        function make_json_rpc_login(url, login) {\n            var method = get_type(login) === 'boolean' ? 'login' : login;\n            return function(user, passwd, callback) {\n                self.pause(settings.softPause);\n                $.jrpc({\n                    url: url,\n                    method: method,\n                    params: [user, passwd],\n                    request: function(jxhr, request) {\n                        try {\n                            settings.request.call(self, jxhr, request, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    response: function(jxhr, response) {\n                        try {\n                            settings.response.call(self, jxhr, response, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    success: function success(response) {\n                        if (!response.error && response.result) {\n                            callback(response.result);\n                        } else {\n                            // null will trigger message that login fail\n                            callback(null);\n                        }\n                        self.resume();\n                    },\n                    error: ajax_error\n                });\n            };\n            // default name is login so you can pass true\n        }\n        // ---------------------------------------------------------------------\n        // :: display Exception on terminal\n        // ---------------------------------------------------------------------\n        function display_exception(e, label, silent) {\n            if (is_function(settings.exceptionHandler)) {\n                settings.exceptionHandler.call(self, e, label);\n            } else {\n                self.exception(e, label);\n                if (!silent) {\n                    setTimeout(function() {\n                        throw e;\n                    }, 0);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Draw line - can have line breaks and be longer than the width of\n        // :: the terminal, there are 2 options raw and finalize\n        // :: raw - will not encode the string and finalize if a function that\n        // :: will have div container of the line as first argument\n        // :: NOTE: it formats and appends lines to output_buffer. The actual\n        // :: append to terminal output happens in the flush function\n        // ---------------------------------------------------------------------\n        var output_buffer = [];\n        var NEW_LINE = 1;\n        var format_cache;\n        if ('Map' in root) {\n            format_cache = new Map();\n        }\n        function buffer_line(arg, index, options) {\n            // urls should always have formatting to keep url if split\n            var i, len;\n            output_buffer.push(NEW_LINE);\n            var format_options = {\n                linksNoReferrer: settings.linksNoReferrer,\n                linksNoFollow: settings.linksNoFollow,\n                anyLinks: settings.anyLinks,\n                char_width: char_size.width,\n                escape: false,\n                allowedAttributes: options.allowedAttributes || []\n            };\n            var use_cache = settings.useCache && format_cache;\n            function format_buff(arg, newline) {\n                var args = JSON.stringify([arg, format_options]);\n                if (use_cache) {\n                    if (format_cache.has(args)) {\n                        return format_cache.get(args);\n                    }\n                }\n                var data = {\n                    line: $.terminal.format(\n                        arg,\n                        format_options\n                    ),\n                    newline: newline\n                };\n                if (use_cache) {\n                    format_cache.set(args, data);\n                }\n                return data;\n            }\n            if (arg instanceof Array) {\n                for (i = 0, len = arg.length; i < len; ++i) {\n                    if (arg[i] === '' || arg[i] === '\\r') {\n                        output_buffer.push({line: '<span></span>'});\n                    } else {\n                        output_buffer.push(format_buff(arg[i], i === len - 1));\n                    }\n                }\n            } else if (!options.raw) {\n                output_buffer.push(format_buff(arg));\n            } else {\n                output_buffer.push({line: arg});\n            }\n            output_buffer.push({\n                finalize: options.finalize,\n                index: index\n            });\n        }\n        // ---------------------------------------------------------------------\n        function links(string) {\n            function format(_, style, color, background, _class, data, text) {\n                function formatting(s, text) {\n                    return '[[' + [\n                        style + (s || ''),\n                        color,\n                        background,\n                        _class,\n                        text || data\n                    ].join(';') + ']';\n                }\n                function escaped(_) {\n                    return ']' + formatting('!', _) + _ + ']' + formatting();\n                }\n                if (!style.match(/!/)) {\n                    var m = text.match(email_full_re) || text.match(url_full_re);\n                    if (m) {\n                        return formatting('!', m[1]) + text + ']';\n                    } else if (text.match(email_re) || text.match(url_nf_re)) {\n                        var output = text.replace(email_re, escaped)\n                            .replace(url_nf_re, escaped);\n                        return formatting('', data) + output + ']';\n                    }\n                }\n                return _;\n            }\n            if (!$.terminal.have_formatting(string)) {\n                return string.replace(email_re, '[[!;;]$1]').\n                    replace(url_nf_re, '[[!;;]$1]');\n            }\n            return $.terminal.format_split(string).map(function(str) {\n                if ($.terminal.is_formatting(str)) {\n                    return str.replace(format_parts_re, format);\n                } else {\n                    return str.replace(email_re, '[[!;;]$1]').\n                        replace(url_nf_re, '[[!;;]$1]');\n                }\n            }).join('');\n        }\n        // ---------------------------------------------------------------------\n        function should_wrap(string, options) {\n            return (strlen(text(string)) > options.cols ||\n                    string.match(/\\n/)) &&\n                ((settings.wrap === true &&\n                  options.wrap === undefined) ||\n                 settings.wrap === false &&\n                 options.wrap === true);\n        }\n        // ---------------------------------------------------------------------\n        var string_cache;\n        if ('Map' in root) {\n            string_cache = new Map();\n        }\n        function process_line(line) {\n            // prevent exception in display exception\n            try {\n                var line_settings = $.extend({\n                    exec: true,\n                    raw: false,\n                    finalize: $.noop,\n                    invokeMethods: false,\n                    formatters: true,\n                    convertLinks: settings.convertLinks\n                }, line.options || {});\n                var string;\n                string = stringify_value(line.value);\n                if (string !== '') {\n                    if (!line_settings.raw) {\n                        if (line_settings.formatters) {\n                            try {\n                                string = $.terminal.apply_formatters(\n                                    string,\n                                    settings\n                                );\n                            } catch (e) {\n                                display_exception(e, 'FORMATTING');\n                            }\n                        }\n                        if (settings.useCache) {\n                            var key = string;\n                            if (string_cache && string_cache.has(key)) {\n                                string = string_cache.get(key);\n                                buffer_line(string, line.index, line_settings);\n                                return;\n                            }\n                        }\n                        if (line_settings.exec) {\n                            var parts = string.split(format_exec_re);\n                            string = $.map(parts, function(string) {\n                                if (string && string.match(format_exec_re) &&\n                                    !$.terminal.is_formatting(string)) {\n                                    // redraw should not execute commands and it have\n                                    // and lines variable have all extended commands\n                                    string = string.replace(/^\\[\\[|\\]\\]$/g, '');\n                                    if (line_settings.exec) {\n                                        var trim = string.trim();\n                                        if (prev_exec_cmd && prev_exec_cmd === trim) {\n                                            prev_exec_cmd = '';\n                                            self.error(strings().recursiveLoop);\n                                        } else {\n                                            prev_exec_cmd = trim;\n                                            $.terminal.extended_command(self, string, {\n                                                invokeMethods: line_settings.invokeMethods\n                                            });\n                                        }\n                                    }\n                                    return '';\n                                } else {\n                                    return string;\n                                }\n                            }).join('');\n                        }\n                        if (string === '') {\n                            return;\n                        }\n                        if (line_settings.convertLinks) {\n                            string = links(string);\n                        }\n                        string = crlf($.terminal.normalize(string));\n                        string = $.terminal.encode(string, {\n                            tabs: settings.tabs\n                        });\n                        //string = $.terminal.normalize(string);\n                        var array;\n                        var cols = line_settings.cols = self.cols();\n                        if (should_wrap(string, line_settings)) {\n                            var words = line_settings.keepWords;\n                            array = $.terminal.split_equal(string, cols, words);\n                        } else if (string.match(/\\n/)) {\n                            array = string.split(/\\n/);\n                        }\n                    }\n                }\n                var arg = array || string;\n                if (string_cache && key) {\n                    string_cache.set(key, arg);\n                }\n                buffer_line(arg, line.index, line_settings);\n            } catch (e) {\n                output_buffer = [];\n                // don't display exception if exception throw in terminal\n                if (is_function(settings.exceptionHandler)) {\n                    settings.exceptionHandler.call(self, e, 'TERMINAL');\n                } else {\n                    alert_exception('[Internal Exception(process_line)]', e);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Update terminal lines\n        // ---------------------------------------------------------------------\n        function redraw(options) {\n            options = $.extend({}, {\n                // should be used when single line is updated\n                update: false,\n                // should be used if you want to scroll to bottom after redraw\n                scroll: true\n            }, options || {});\n            if (!options.update) {\n                command_line.resize(num_chars);\n                // we don't want reflow while processing lines\n                var detached_output = output.empty().detach();\n            }\n            var lines_to_show = [];\n            // Dead code\n            if (settings.outputLimit >= 0) {\n                // flush will limit lines but if there is lot of\n                // lines we don't need to show them and then remove\n                // them from terminal\n                var limit;\n                if (settings.outputLimit === 0) {\n                    limit = self.rows();\n                } else {\n                    limit = settings.outputLimit;\n                }\n                lines.forEach(function(line, index) {\n                    var value = line[0];\n                    var options = line[1];\n                    lines_to_show.push({\n                        value: value,\n                        index: index,\n                        options: options\n                    });\n                });\n                var pivot = lines_to_show.length - limit - 1;\n                lines_to_show = lines_to_show.slice(pivot);\n            } else {\n                lines_to_show = lines.map(function(line, index) {\n                    return {\n                        value: line[0],\n                        index: index,\n                        options: line[1]\n                    };\n                });\n            }\n            try {\n                output_buffer = [];\n                $.each(lines_to_show, function(i, line) {\n                    process_line(line);\n                });\n                if (!options.update) {\n                    command_line.before(detached_output); // reinsert output\n                }\n                self.flush(options);\n                fire_event('onAfterRedraw');\n            } catch (e) {\n                if (is_function(settings.exceptionHandler)) {\n                    settings.exceptionHandler.call(self, e, 'TERMINAL (redraw)');\n                } else {\n                    alert_exception('[redraw]', e);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Function limit output lines based on outputLimit option\n        // ---------------------------------------------------------------------\n        function limit_lines() {\n            if (settings.outputLimit >= 0) {\n                var limit;\n                if (settings.outputLimit === 0) {\n                    limit = self.rows();\n                } else {\n                    limit = settings.outputLimit;\n                }\n                var $lines = output.find('> div > div');\n                if ($lines.length + 1 > limit) {\n                    var max = $lines.length - limit + 1;\n                    var for_remove = $lines.slice(0, max);\n                    // you can't get parent if you remove the\n                    // element so we first get the parent\n                    var parents = for_remove.parent();\n                    for_remove.remove();\n                    parents.each(function() {\n                        var $self = $(this);\n                        if ($self.is(':empty')) {\n                            unmount($self);\n                            // there can be divs inside parent that\n                            // was not removed\n                            $self.remove();\n                        }\n                    });\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display user greetings or terminal signature\n        // ---------------------------------------------------------------------\n        function show_greetings() {\n            if (settings.greetings === undefined) {\n                // signature have ascii art so it's not suite for screen readers\n                self.echo(self.signature, {finalize: a11y_hide, formatters: false});\n            } else if (settings.greetings) {\n                var type = typeof settings.greetings;\n                if (type === 'string') {\n                    self.echo(settings.greetings);\n                } else if (type === 'function') {\n                    try {\n                        var ret = settings.greetings.call(self, self.echo);\n                        var error = make_label_error('Greetings');\n                        unpromise(ret, self.echo, function(e) {\n                            error(e);\n                            settings.greetings = null;\n                        });\n                    } catch (e) {\n                        settings.greetings = null;\n                        display_exception(e, 'greetings');\n                    }\n                } else {\n                    self.error(strings().wrongGreetings);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display prompt and last command\n        // ---------------------------------------------------------------------\n        function echo_command(command) {\n            if (typeof command === 'undefined') {\n                command = self.get_command();\n            }\n            // true will return last rendered string\n            var prompt = command_line.prompt(true);\n            var mask = command_line.mask();\n            switch (typeof mask) {\n                case 'string':\n                    command = command.replace(/./g, mask);\n                    break;\n                case 'boolean':\n                    if (mask) {\n                        command = command.replace(/./g, settings.maskChar);\n                    } else {\n                        command = $.terminal.escape_formatting(command);\n                    }\n                    break;\n            }\n            var options = {\n                convertLinks: false,\n                exec: false,\n                finalize: function finalize(div) {\n                    a11y_hide(div.addClass('terminal-command'));\n                    fire_event('onEchoCommand', [div, command]);\n                }\n            };\n            self.echo(prompt + command, options);\n        }\n        // ---------------------------------------------------------------------\n        function have_scrollbar() {\n            return fill.outerWidth() !== self.outerWidth();\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function that restore state. Call import_view or exec\n        // ---------------------------------------------------------------------\n        function restore_state(spec) {\n            // spec [terminal_id, state_index, command]\n            var terminal = terminals.get()[spec[0]];\n            if (!terminal) {\n                throw new $.terminal.Exception(strings().invalidTerminalId);\n            }\n            var command_idx = spec[1];\n            if (save_state[command_idx]) { // state exists\n                terminal.import_view(save_state[command_idx]);\n            } else {\n                // restore state\n                change_hash = false;\n                var command = spec[2];\n                if (command) {\n                    terminal.exec(command).done(function() {\n                        change_hash = true;\n                        save_state[command_idx] = terminal.export_view();\n                    });\n                }\n            }\n            /*if (spec[3].length) {\n                restore_state(spec[3]);\n            }*/\n        }\n        // ---------------------------------------------------------------------\n        function make_label_error(label) {\n            return function(e) {\n                self.error('[' + label + '] ' + (e.message || e)).resume();\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function\n        // ---------------------------------------------------------------------\n        function maybe_update_hash() {\n            if (change_hash) {\n                fire_hash_change = false;\n                location.hash = '#' + JSON.stringify(hash_commands);\n                setTimeout(function() {\n                    fire_hash_change = true;\n                }, 100);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Wrapper over interpreter, it implements exit and catches all\n        // :: exeptions from user code and displays them on the terminal\n        // ---------------------------------------------------------------------\n        var first_command = true;\n        var resume_callbacks = [];\n        function commands(command, silent, exec) {\n            function init_state() {\n                // execHash need first empty command too\n                if (settings.historyState || settings.execHash && exec) {\n                    if (!save_state.length) {\n                        // first command in first terminal don't have hash\n                        self.save_state();\n                    } else {\n                        self.save_state(null);\n                    }\n                }\n            }\n            // -----------------------------------------------------------------\n            function after_exec() {\n                // variables defined later in commands\n                if (!exec) {\n                    change_hash = true;\n                    if (settings.historyState) {\n                        self.save_state(command, false);\n                    }\n                    change_hash = saved_change_hash;\n                }\n                deferred.resolve();\n                fire_event('onAfterCommand', [command]);\n            }\n            // -----------------------------------------------------------------\n            function show(result) {\n                if (typeof result !== 'undefined') {\n                    display_object(result);\n                }\n                after_exec();\n                self.resume();\n            }\n            // -----------------------------------------------------------------\n\n            // -----------------------------------------------------------------\n            function invoke() {\n                // Call user interpreter function\n                var result = interpreter.interpreter.call(self, command, self);\n                if (result) {\n                    // auto pause/resume when user return promises\n                    // it should not pause when user return promise from read()\n                    if (!force_awake) {\n                        self.pause(settings.softPause);\n                    }\n                    force_awake = false;\n                    var error = make_label_error('Command');\n                    // when for native Promise object work only in jQuery 3.x\n                    if (is_function(result.done || result.then)) {\n                        return unpromise(result, show, error);\n                    } else {\n                        return $.when(result).done(show).catch(error);\n                    }\n                } else if (paused) {\n                    resume_callbacks.push(function() {\n                        // exec with resume/pause in user code\n                        after_exec();\n                    });\n                } else {\n                    after_exec();\n                }\n            }\n            // -----------------------------------------------------------------\n            // first command store state of the terminal before the command get\n            // executed\n            if (first_command) {\n                first_command = false;\n                init_state();\n            }\n            try {\n                // this callback can disable commands\n                if (fire_event('onBeforeCommand', [command]) === false) {\n                    return;\n                }\n                if (exec) {\n                    prev_exec_cmd = command.trim();\n                } else {\n                    prev_command = $.terminal.split_command(command);\n                }\n                if (!ghost()) {\n                    // exec execute this function wihout the help of cmd plugin\n                    // that add command to history on enter\n                    if (exec && (is_function(settings.historyFilter) &&\n                                 settings.historyFilter(command) ||\n                                 command.match(settings.historyFilter))) {\n                        command_line.history().append(command);\n                    }\n                }\n                var interpreter = interpreters.top();\n                if (!silent && settings.echoCommand) {\n                    echo_command(command);\n                }\n                // new promise will be returned to exec that will resolve his\n                // returned promise\n                var deferred = new $.Deferred();\n                // we need to save sate before commands is deleyd because\n                // execute_extended_command disable it and it can be executed\n                // after delay\n                var saved_change_hash = change_hash;\n                if (command.match(/^\\s*login\\s*$/) && self.token(true)) {\n                    if (self.level() > 1) {\n                        self.logout(true);\n                    } else {\n                        self.logout();\n                    }\n                    after_exec();\n                } else if (settings.exit && command.match(/^\\s*exit\\s*$/) &&\n                           !in_login) {\n                    var level = self.level();\n                    if (level === 1 && self.get_token() || level > 1) {\n                        if (self.get_token(true)) {\n                            self.set_token(undefined, true);\n                        }\n                        self.pop();\n                    }\n                    after_exec();\n                } else if (settings.clear && command.match(/^\\s*clear\\s*$/) &&\n                           !in_login) {\n                    self.clear();\n                    after_exec();\n                } else {\n                    var ret = invoke();\n                    if (ret) {\n                        return ret;\n                    }\n                }\n                return deferred.promise();\n            } catch (e) {\n                display_exception(e, 'USER', exec);\n                self.resume();\n                if (exec) {\n                    throw e;\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: The logout function removes Storage, disables history and runs\n        // :: the login function. This function is called only when options.login\n        // :: function is defined. The check for this is in the self.pop method\n        // ---------------------------------------------------------------------\n        function global_logout() {\n            if (fire_event('onBeforeLogout', [], true) === false) {\n                return;\n            }\n            clear_loging_storage();\n            fire_event('onAfterlogout', [], true);\n            self.login(global_login_fn, true, initialize);\n        }\n        // ---------------------------------------------------------------------\n        function clear_loging_storage() {\n            var name = self.prefix_name(true) + '_';\n            storage.remove(name + 'token');\n            storage.remove(name + 'login');\n        }\n        // ---------------------------------------------------------------------\n        // :: Save the interpreter name for use with purge\n        // ---------------------------------------------------------------------\n        function maybe_append_name(interpreter_name) {\n            var storage_key = self.prefix_name() + '_interpreters';\n            var names = storage.get(storage_key);\n            if (names) {\n                names = JSON.parse(names);\n            } else {\n                names = [];\n            }\n            if ($.inArray(interpreter_name, names) === -1) {\n                names.push(interpreter_name);\n                storage.set(storage_key, JSON.stringify(names));\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Function enables history, sets prompt, runs interpreter function\n        // ---------------------------------------------------------------------\n        function prepare_top_interpreter(silent) {\n            var interpreter = interpreters.top();\n            var name = self.prefix_name(true);\n            if (!ghost()) {\n                maybe_append_name(name);\n            }\n            var login = self.login_name(true);\n            command_line.name(name + (login ? '_' + login : ''));\n            var prompt = interpreter.prompt;\n            if (is_function(prompt)) {\n                prompt = context_callback_proxy(prompt);\n            }\n            if (prompt !== command_line.prompt()) {\n                if (is_function(interpreter.prompt)) {\n                    // prevent flicker of old prompt until async prompt finishes\n                    command_line.prompt('');\n                }\n                command_line.prompt(interpreter.prompt);\n            }\n            if (typeof interpreter.history !== 'undefined') {\n                self.history().toggle(interpreter.history);\n            }\n            if ($.isPlainObject(interpreter.keymap)) {\n                command_line.keymap($.omap(interpreter.keymap, function(name, fun) {\n                    return function() {\n                        var args = [].slice.call(arguments);\n                        try {\n                            return fun.apply(self, args);\n                        } catch (e) {\n                            display_exception(e, 'USER KEYMAP');\n                        }\n                    };\n                }));\n            }\n            command_line.set('');\n            init_queue.resolve();\n            if (!silent && is_function(interpreter.onStart)) {\n                interpreter.onStart.call(self, self);\n            }\n        }\n        // ---------------------------------------------------------------------\n        function fire_event(name, args, skip_local) {\n            args = (args || []).concat([self]); // create new array\n            // even can be fired before interpreters is created\n            var top = interpreters && interpreters.top();\n            if (top && is_function(top[name]) && !skip_local) {\n                try {\n                    return top[name].apply(self, args);\n                } catch (e) {\n                    delete top[name];\n                    display_exception(e, name);\n                }\n            } else if (is_function(settings[name])) {\n                try {\n                    return settings[name].apply(self, args);\n                } catch (e) {\n                    settings[name] = null;\n                    display_exception(e, name);\n                }\n            }\n        }\n        var scroll_to_view = (function() {\n            function scroll_to_view(visible) {\n                if (!visible) {\n                    // try catch for Node.js unit tests\n                    try {\n                        self.scroll_to(self.find('.cmd-cursor'));\n                        return true;\n                    } catch (e) {\n                        return true;\n                    }\n                }\n            }\n            // we don't want debounce in Unit Tests\n            if (typeof global !== 'undefined' && typeof global.it === 'function') {\n                return scroll_to_view;\n            }\n            return debounce(scroll_to_view, 100, {\n                leading: true,\n                trailing: false\n            });\n        })();\n        // ---------------------------------------------------------------------\n        function make_cursor_visible() {\n            var cursor = self.find('.cmd-cursor-line');\n            return cursor.is_fully_in_viewport(self).then(scroll_to_view);\n        }\n        // ---------------------------------------------------------------------\n        function hashchange() {\n            if (fire_hash_change && settings.execHash) {\n                try {\n                    if (location.hash) {\n                        var hash = location.hash.replace(/^#/, '');\n                        hash_commands = JSON.parse(decodeURIComponent(hash));\n                    } else {\n                        hash_commands = [];\n                    }\n                    if (hash_commands.length) {\n                        restore_state(hash_commands[hash_commands.length - 1]);\n                    } else if (save_state[0]) {\n                        self.import_view(save_state[0]);\n                    }\n                } catch (e) {\n                    display_exception(e, 'TERMINAL');\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function initialize() {\n            prepare_top_interpreter();\n            show_greetings();\n            if (lines.length) {\n                self.refresh(); // for case when showing long error before init\n            }\n            // was_paused flag is workaround for case when user call exec before\n            // login and pause in onInit, 3rd exec will have proper timing (will\n            // execute after onInit resume)\n            var was_paused = false;\n            if (is_function(settings.onInit)) {\n                onPause = function() { // local in terminal\n                    was_paused = true;\n                };\n                try {\n                    settings.onInit.call(self, self);\n                } catch (e) {\n                    display_exception(e, 'OnInit');\n                    // throw e; // it will be catched by terminal\n                } finally {\n                    onPause = $.noop;\n                    if (!was_paused && self.enabled()) {\n                        // resume login if user didn't call pause in onInit\n                        // if user pause in onInit wait with exec until it\n                        // resume\n                        self.resume(true);\n                    }\n                }\n            }\n            if (first_instance) {\n                first_instance = false;\n                $(window).on('hashchange', hashchange);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: If Ghost don't store anything in localstorage\n        // ---------------------------------------------------------------------\n        function ghost() {\n            return in_login || command_line.mask() !== false;\n        }\n        // ---------------------------------------------------------------------\n        // :: Keydown event handler\n        // ---------------------------------------------------------------------\n        function user_key_down(e) {\n            var result, top = interpreters.top();\n            if (is_function(top.keydown)) {\n                result = top.keydown.call(self, e, self);\n                if (result !== undefined) {\n                    return result;\n                }\n            } else if (is_function(settings.keydown)) {\n                result = settings.keydown.call(self, e, self);\n                if (result !== undefined) {\n                    return result;\n                }\n            }\n        }\n        var keymap = {\n            'CTRL+D': function(e, original) {\n                if (!in_login) {\n                    if (command_line.get() === '') {\n                        if (interpreters.size() > 1 ||\n                            is_function(global_login_fn)) {\n                            self.pop('');\n                        } else {\n                            self.resume();\n                            self.echo('');\n                        }\n                    } else {\n                        original();\n                    }\n                }\n                return false;\n            },\n            'CTRL+C': function() {\n                with_selection(function(html) {\n                    if (html === '') {\n                        var command = self.get_command();\n                        var position = self.get_position();\n                        command = command.slice(0, position) + '^C' +\n                            command.slice(position + 2);\n                        echo_command(command);\n                        self.set_command('');\n                    } else {\n                        var clip = self.find('textarea');\n                        text_to_clipboard(clip, process_selected_html(html));\n                    }\n                });\n                return false;\n            },\n            'CTRL+L': function() {\n                self.clear();\n            },\n            'TAB': function(e, orignal) {\n                // TODO: move this to cmd plugin\n                //       add completion = array | function\n                //       !!! Problem complete more then one key need terminal\n                var top = interpreters.top(), completion, caseSensitive;\n                if (typeof top.caseSensitiveAutocomplete !== 'undefined') {\n                    caseSensitive = top.caseSensitiveAutocomplete;\n                } else {\n                    caseSensitive = settings.caseSensitiveAutocomplete;\n                }\n                if (settings.completion &&\n                    get_type(settings.completion) !== 'boolean' &&\n                    top.completion === undefined) {\n                    completion = settings.completion;\n                } else {\n                    completion = top.completion;\n                }\n                if (completion === 'settings') {\n                    completion = settings.completion;\n                }\n                function resolve(commands) {\n                    // local copy\n                    commands = commands.slice();\n                    // default commands should not match for arguments\n                    if (!self.before_cursor(false).match(/\\s/)) {\n                        if (settings.clear && $.inArray('clear', commands) === -1) {\n                            commands.push('clear');\n                        }\n                        if (settings.exit && $.inArray('exit', commands) === -1) {\n                            commands.push('exit');\n                        }\n                    }\n                    self.complete(commands, {\n                        echo: true,\n                        word: settings.wordAutocomplete,\n                        escape: settings.completionEscape,\n                        caseSensitive: caseSensitive,\n                        echoCommand: settings.doubleTabEchoCommand,\n                        doubleTab: settings.doubleTab\n                    });\n                }\n                if (completion) {\n                    switch (get_type(completion)) {\n                        case 'function':\n                            var string = self.before_cursor(settings.wordAutocomplete);\n                            if (completion.length === 3) {\n                                var error = new Error(strings().comletionParameters);\n                                display_exception(error, 'USER');\n                                return false;\n                            }\n                            var result = completion.call(self, string, resolve);\n                            unpromise(result, resolve, make_label_error('Completion'));\n                            break;\n                        case 'array':\n                            resolve(completion);\n                            break;\n                        default:\n                            throw new $.terminal.Exception(strings().invalidCompletion);\n                    }\n                } else {\n                    orignal();\n                }\n                return false;\n            },\n            'CTRL+V': function(e, original) {\n                original(e);\n                self.oneTime(200, function() {\n                    self.scroll_to_bottom();\n                });\n                return true;\n            },\n            'CTRL+TAB': function() {\n                if (terminals.length() > 1) {\n                    self.focus(false);\n                    return false;\n                }\n            },\n            'PAGEDOWN': function() {\n                self.scroll(self.height());\n            },\n            'PAGEUP': function() {\n                self.scroll(-self.height());\n            }\n        };\n        // ---------------------------------------------------------------------\n        function key_down(e) {\n            // Prevent to be executed by cmd: CTRL+D, TAB, CTRL+TAB (if more\n            // then one terminal)\n            var result, i;\n            if (self.enabled()) {\n                if (!self.paused()) {\n                    result = user_key_down(e);\n                    if (result !== undefined) {\n                        return result;\n                    }\n                    if (e.which !== 9) { // not a TAB\n                        tab_count = 0;\n                    }\n                } else {\n                    if (!settings.pauseEvents) {\n                        result = user_key_down(e);\n                        if (result !== undefined) {\n                            return result;\n                        }\n                    }\n                    if (e.which === 68 && e.ctrlKey) { // CTRL+D (if paused)\n                        if (settings.pauseEvents) {\n                            result = user_key_down(e);\n                            if (result !== undefined) {\n                                return result;\n                            }\n                        }\n                        if (requests.length) {\n                            for (i = requests.length; i--;) {\n                                var r = requests[i];\n                                if (r.readyState !== 4) {\n                                    try {\n                                        r.abort();\n                                    } catch (error) {\n                                        if (is_function(settings.exceptionHandler)) {\n                                            settings.exceptionHandler.call(\n                                                self,\n                                                e,\n                                                'AJAX ABORT'\n                                            );\n                                        } else {\n                                            self.error(strings().ajaxAbortError);\n                                        }\n                                    }\n                                }\n                            }\n                            requests = [];\n                        }\n                        self.resume();\n                    }\n                    return false;\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function key_press(e) {\n            var top = interpreters.top();\n            if (enabled && (!paused || !settings.pauseEvents)) {\n                if (is_function(top.keypress)) {\n                    return top.keypress.call(self, e, self);\n                } else if (is_function(settings.keypress)) {\n                    return settings.keypress.call(self, e, self);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function ready(queue) {\n            return function(fun) {\n                queue.add(fun);\n            };\n        }\n        // ---------------------------------------------------------------------\n        function strings() {\n            return $.extend(\n                {},\n                $.terminal.defaults.strings,\n                settings && settings.strings || {}\n            );\n        }\n        // ---------------------------------------------------------------------\n        var self = this;\n        if (this.length > 1) {\n            return this.each(function() {\n                $.fn.terminal.call(\n                    $(this),\n                    init_interpreter,\n                    $.extend({name: self.selector}, options)\n                );\n            });\n        }\n        var body_terminal;\n        if (self.is('body,html')) {\n            // terminal already exists on body\n            if (self.hasClass('full-screen-terminal')) {\n                var data = self.find('> .terminal').data('terminal');\n                if (data) {\n                    return data;\n                }\n            }\n            body_terminal = self;\n            self = $('<div/>').appendTo('body');\n            $('body').addClass('full-screen-terminal');\n        } else if (self.data('terminal')) {\n            // terminal already exists\n            return self.data('terminal');\n        }\n        // -----------------------------------------------------------------\n        // TERMINAL METHODS\n        // -----------------------------------------------------------------\n        $.extend(self, $.omap({\n            id: function() {\n                return terminal_id;\n            },\n            // -------------------------------------------------------------\n            // :: Clear the output\n            // -------------------------------------------------------------\n            clear: function() {\n                if (fire_event('onClear') !== false) {\n                    lines.forEach(function(line, i) {\n                        var options = line[1];\n                        if (is_function(options.onClear)) {\n                            options.onClear.call(self, get_node(i));\n                        }\n                    });\n                    lines = [];\n                    output[0].innerHTML = '';\n                    self.prop({scrollTop: 0});\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return an object that can be used with import_view to\n            // :: restore the state\n            // -------------------------------------------------------------\n            export_view: function() {\n                var user_export = fire_event('onExport');\n                user_export = user_export || {};\n                return $.extend({}, {\n                    focus: enabled,\n                    mask: command_line.mask(),\n                    prompt: self.get_prompt(),\n                    command: self.get_command(),\n                    position: command_line.position(),\n                    lines: clone(lines),\n                    interpreters: interpreters.clone(),\n                    history: command_line.history().data\n                }, user_export);\n            },\n            // -------------------------------------------------------------\n            // :: Restore the state of the previous exported view\n            // -------------------------------------------------------------\n            import_view: function(view) {\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'import_view'));\n                }\n                fire_event('onImport', [view]);\n                when_ready(function ready() {\n                    self.set_prompt(view.prompt);\n                    self.set_command(view.command);\n                    command_line.position(view.position);\n                    command_line.mask(view.mask);\n                    if (view.focus) {\n                        self.focus();\n                    }\n                    lines = clone(view.lines).filter(function(line) {\n                        return line[0];\n                    });\n                    if (view.interpreters instanceof Stack) {\n                        interpreters = view.interpreters;\n                    }\n                    if (settings.importHistory) {\n                        command_line.history().set(view.history);\n                    }\n                    redraw();\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Store current terminal state\n            // -------------------------------------------------------------\n            save_state: function(command, ignore_hash, index) {\n                // save_state.push({view:self.export_view(), join:[]});\n                if (typeof index !== 'undefined') {\n                    save_state[index] = self.export_view();\n                } else {\n                    save_state.push(self.export_view());\n                }\n                if (!$.isArray(hash_commands)) {\n                    hash_commands = [];\n                }\n                if (command !== undefined && !ignore_hash) {\n                    var state = [\n                        terminal_id,\n                        save_state.length - 1,\n                        command\n                    ];\n                    hash_commands.push(state);\n                    maybe_update_hash();\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Execute a command, it will handle commands that do AJAX\n            // :: calls and have delays, if the second argument is set to\n            // :: true it will not echo executed command\n            // -------------------------------------------------------------\n            exec: function(command, silent, deferred) {\n                var d = deferred || new $.Deferred();\n                cmd_ready(function ready() {\n                    if ($.isArray(command)) {\n                        (function recur() {\n                            var cmd = command.shift();\n                            if (cmd) {\n                                self.exec(cmd, silent).done(recur);\n                            } else {\n                                d.resolve();\n                            }\n                        })();\n                    } else if (paused) {\n                        // both commands executed here (resume will call Term::exec)\n                        // delay command multiple time\n                        delayed_commands.push([command, silent, d]);\n                    } else {\n                        // commands may return promise from user code\n                        // it will resolve exec promise when user promise\n                        // is resolved\n                        var ret = commands(command, silent, true);\n                        unpromise(ret, function() {\n                            d.resolve();\n                        }, function() {\n                            d.reject();\n                        });\n                    }\n                });\n                // while testing it didn't executed last exec when using this\n                // for resolved deferred\n                return d.promise();\n            },\n            // -------------------------------------------------------------\n            // :: bypass login function that wait untill you type user/pass\n            // :: it hide implementation detail\n            // -------------------------------------------------------------\n            autologin: function(user, token, silent) {\n                self.trigger('terminal.autologin', [user, token, silent]);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function changes the prompt of the command line to login\n            // :: with a password and calls the user login function with\n            // :: the callback that expects a token. The login is successful\n            // :: if the user calls it with value that is truthy\n            // -------------------------------------------------------------\n            login: function(auth, infinite, success, error) {\n                logins.push([].slice.call(arguments));\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'login'));\n                }\n                if (!is_function(auth)) {\n                    throw new Error(strings().loginIsNotAFunction);\n                }\n                in_login = true;\n                if (self.token() && self.level() === 1 && !autologin) {\n                    in_login = false; // logout will call login\n                    self.logout(true);\n                } else if (self.token(true) && self.login_name(true)) {\n                    in_login = false;\n                    if (is_function(success)) {\n                        success();\n                    }\n                    return self;\n                }\n                // don't store login data in history\n                if (settings.history) {\n                    command_line.history().disable();\n                }\n                function popUserPass() {\n                    while (self.level() > level) {\n                        self.pop(undefined, true);\n                    }\n                    if (settings.history) {\n                        command_line.history().enable();\n                    }\n                }\n                // so we know how many times call pop\n                var level = self.level();\n                function login_callback(user, token, silent) {\n                    if (self.paused()) {\n                        self.resume();\n                    }\n                    if (token) {\n                        popUserPass();\n                        var name = self.prefix_name(true) + '_';\n                        storage.set(name + 'token', token);\n                        storage.set(name + 'login', user);\n                        in_login = false;\n                        fire_event('onAfterLogin', [user, token]);\n                        if (is_function(success)) {\n                            // will be used internaly since users know\n                            // when login success (they decide when\n                            // it happen by calling the callback -\n                            // this funtion)\n                            success();\n                        }\n                    } else {\n                        if (infinite) {\n                            if (!silent) {\n                                self.error(strings().wrongPasswordTryAgain);\n                            }\n                            self.pop(undefined, true).set_mask(false);\n                        } else {\n                            in_login = false;\n                            if (!silent) {\n                                self.error(strings().wrongPassword);\n                            }\n                            self.pop(undefined, true).pop(undefined, true);\n                        }\n                        // used only to call pop in push\n                        if (is_function(error)) {\n                            error();\n                        }\n                    }\n                    self.off('terminal.autologin');\n                }\n                self.on('terminal.autologin', function(event, user, token, silent) {\n                    if (fire_event('onBeforeLogin', [user, token]) === false) {\n                        return;\n                    }\n                    login_callback(user, token, silent);\n                });\n                self.push(function(user) {\n                    self.set_mask(settings.maskChar).push(function(pass) {\n                        try {\n                            if (fire_event('onBeforeLogin', [user, pass]) === false) {\n                                popUserPass();\n                                return;\n                            }\n                            self.pause();\n                            var ret = auth.call(self, user, pass, function(\n                                token,\n                                silent) {\n                                login_callback(user, token, silent);\n                            });\n                            if (ret && is_function(ret.then || ret.done)) {\n                                (ret.then || ret.done).call(ret, function(token) {\n                                    login_callback(user, token);\n                                });\n                            }\n                        } catch (e) {\n                            display_exception(e, 'AUTH');\n                        }\n                    }, {\n                        prompt: strings().password + ': ',\n                        name: 'password'\n                    });\n                }, {\n                    prompt: strings().login + ': ',\n                    name: 'login'\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: User defined settings and defaults as well\n            // -------------------------------------------------------------\n            settings: function() {\n                return settings;\n            },\n            // -------------------------------------------------------------\n            // :: Get string before cursor\n            // -------------------------------------------------------------\n            before_cursor: function(word) {\n                var pos = command_line.position();\n                var command = command_line.get().slice(0, pos);\n                var cmd_strings = command.split(' ');\n                var string; // string before cursor that will be completed\n                if (word) {\n                    if (cmd_strings.length === 1) {\n                        string = cmd_strings[0];\n                    } else {\n                        var m = command.match(/(\\\\?\")/g);\n                        var double_quotes = m ? m.filter(function(chr) {\n                            return !chr.match(/^\\\\/);\n                        }).length : 0;\n                        m = command.match(/'/g);\n                        var single_quote = m ? m.length : 0;\n                        if (single_quote % 2 === 1) {\n                            string = command.match(/('[^']*)$/)[0];\n                        } else if (double_quotes % 2 === 1) {\n                            string = command.match(/(\"(?:[^\"]|\\\\\")*)$/)[0];\n                        } else {\n                            string = cmd_strings[cmd_strings.length - 1];\n                            for (i = cmd_strings.length - 1; i > 0; i--) {\n                                // treat escape space as part of the string\n                                var prev_string = cmd_strings[i - 1];\n                                if (prev_string[prev_string.length - 1] === '\\\\') {\n                                    string = cmd_strings[i - 1] + ' ' + string;\n                                } else {\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    string = command;\n                }\n                return string;\n            },\n            // -------------------------------------------------------------\n            // :: complete word or command based on array of words\n            // -------------------------------------------------------------\n            complete: function(commands, options) {\n                options = $.extend({\n                    word: true,\n                    echo: false,\n                    escape: true,\n                    echoCommand: false,\n                    caseSensitive: true,\n                    doubleTab: null\n                }, options || {});\n                var sensitive = options.caseSensitive;\n                // cursor can be in the middle of the command\n                // so we need to get the text before the cursor\n                var string = self.before_cursor(options.word).replace(/\\\\\"/g, '\"');\n                var quote = false;\n                if (options.word) {\n                    if (string.match(/^\"/)) {\n                        quote = '\"';\n                    } else if (string.match(/^'/)) {\n                        quote = \"'\";\n                    }\n                    if (quote) {\n                        string = string.replace(/^[\"']/, '');\n                    }\n                }\n                if (tab_count % 2 === 0) {\n                    command = self.before_cursor(options.word);\n                } else {\n                    var test = self.before_cursor(options.word);\n                    if (test !== command) {\n                        // command line changed between TABS - ignore\n                        return;\n                    }\n                }\n                var safe = $.terminal.escape_regex(string);\n                if (options.escape) {\n                    safe = safe.replace(/(\\\\+)([\"'() ])/g, function(_, slash, chr) {\n                        if (chr.match(/[()]/)) {\n                            return slash + '\\\\?\\\\' + chr;\n                        } else {\n                            return slash + '?' + chr;\n                        }\n                    });\n                }\n                function escape(string) {\n                    if (quote === '\"') {\n                        string = string.replace(/\"/g, '\\\\\"');\n                    }\n                    if (!quote && options.escape) {\n                        string = string.replace(/([\"'() ])/g, '\\\\$1');\n                    }\n                    return string;\n                }\n                function matched_strings() {\n                    var matched = [];\n                    for (var i = commands.length; i--;) {\n                        if (commands[i].match(/\\n/) && options.word) {\n                            warn('If you use commands with newlines you ' +\n                                 'should use word option for complete or' +\n                                 ' wordAutocomplete terminal option');\n                        }\n                        if (regex.test(commands[i])) {\n                            var match = escape(commands[i]);\n                            if (!sensitive && same_case(match)) {\n                                if (string.toLowerCase() === string) {\n                                    match = match.toLowerCase();\n                                } else if (string.toUpperCase() === string) {\n                                    match = match.toUpperCase();\n                                }\n                            }\n                            matched.push(match);\n                        }\n                    }\n                    return matched;\n                }\n                var flags = sensitive ? '' : 'i';\n                var regex = new RegExp('^' + safe, flags);\n                var matched = matched_strings();\n                function replace(input, replacement) {\n                    var text = self.get_command();\n                    var pos = self.get_position();\n                    var re = new RegExp('^' + input, 'i');\n                    var pre = text.slice(0, pos);\n                    var post = text.slice(pos);\n                    var to_insert = replacement.replace(re, '') + (quote || '');\n                    self.set_command(pre + to_insert + post);\n                    self.set_position((pre + to_insert).length);\n                }\n                if (matched.length === 1) {\n                    if (options.escape) {\n                        replace(safe, matched[0]);\n                    } else {\n                        self.insert(matched[0].replace(regex, '') + (quote || ''));\n                    }\n                    command = self.before_cursor(options.word);\n                    return true;\n                } else if (matched.length > 1) {\n                    if (++tab_count >= 2) {\n                        tab_count = 0;\n                        if (options.echo) {\n                            if (is_function(options.doubleTab)) {\n                                // new API old is keep for backward compatibility\n                                if (options.echoCommand) {\n                                    echo_command();\n                                }\n                                var ret = options.doubleTab.call(\n                                    self,\n                                    string,\n                                    matched,\n                                    echo_command\n                                );\n                                if (typeof ret === 'undefined') {\n                                    return true;\n                                } else {\n                                    return ret;\n                                }\n                            } else if (options.doubleTab !== false) {\n                                echo_command();\n                                var text = matched.slice().reverse().join('\\t\\t');\n                                self.echo($.terminal.escape_brackets(text), {\n                                    keepWords: true,\n                                    formatters: false\n                                });\n                            }\n                            return true;\n                        }\n                    } else {\n                        var common = common_string(escape(string), matched, sensitive);\n                        if (common) {\n                            replace(safe, common);\n                            command = self.before_cursor(options.word);\n                            return true;\n                        }\n                    }\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Return commands function from top interpreter\n            // -------------------------------------------------------------\n            commands: function() {\n                return interpreters.top().interpreter;\n            },\n            // -------------------------------------------------------------\n            // :: Low Level method that overwrites interpreter\n            // -------------------------------------------------------------\n            set_interpreter: function(user_intrp, login) {\n                function overwrite_interpreter() {\n                    self.pause(settings.softPause);\n                    make_interpreter(user_intrp, login, function(result) {\n                        self.resume();\n                        var top = interpreters.top();\n                        $.extend(top, result);\n                        prepare_top_interpreter(true);\n                    });\n                }\n                if (is_function(login)) {\n                    self.login(login, true, overwrite_interpreter);\n                } else if (get_type(user_intrp) === 'string' && login) {\n                    self.login(\n                        make_json_rpc_login(user_intrp, login),\n                        true,\n                        overwrite_interpreter\n                    );\n                } else {\n                    overwrite_interpreter();\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Show user greetings or terminal signature\n            // -------------------------------------------------------------\n            greetings: function() {\n                show_greetings();\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return true if terminal is paused false otherwise\n            // -------------------------------------------------------------\n            paused: function() {\n                return paused;\n            },\n            // -------------------------------------------------------------\n            // :: Pause the terminal, it should be used for ajax calls\n            // -------------------------------------------------------------\n            pause: function(visible) {\n                cmd_ready(function ready() {\n                    onPause();\n                    paused = true;\n                    command_line.disable(visible || is_android);\n                    if (!visible) {\n                        command_line.find('.cmd-prompt').hidden();\n                    }\n                    fire_event('onPause');\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Resume the previously paused terminal\n            // -------------------------------------------------------------\n            resume: function(silent) {\n                cmd_ready(function ready() {\n                    paused = false;\n                    if (enabled && terminals.front() === self) {\n                        command_line.enable(silent);\n                    }\n                    command_line.find('.cmd-prompt').visible();\n                    var original = delayed_commands;\n                    delayed_commands = [];\n                    for (var i = 0; i < original.length; ++i) {\n                        self.exec.apply(self, original[i]);\n                    }\n                    self.trigger('resume');\n                    var fn = resume_callbacks.shift();\n                    if (fn) {\n                        fn();\n                    }\n                    self.scroll_to_bottom();\n                    fire_event('onResume');\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return the number of characters that fit into the width of\n            // :: the terminal\n            // -------------------------------------------------------------\n            cols: function() {\n                if (settings.numChars) {\n                    return settings.numChars;\n                }\n                if (typeof num_chars === 'undefined' || num_chars === 1000) {\n                    num_chars = get_num_chars(self, char_size);\n                }\n                return num_chars;\n            },\n            // -------------------------------------------------------------\n            // :: Return the number of lines that fit into the height of the\n            // :: terminal\n            // -------------------------------------------------------------\n            rows: function() {\n                if (settings.numRows) {\n                    return settings.numRows;\n                }\n                if (typeof num_rows === 'undefined') {\n                    num_rows = get_num_rows(self, char_size);\n                }\n                return num_rows;\n            },\n            // -------------------------------------------------------------\n            // :: Return the History object\n            // -------------------------------------------------------------\n            history: function() {\n                return command_line.history();\n            },\n            // -------------------------------------------------------------\n            // :: toggle recording of history state\n            // -------------------------------------------------------------\n            history_state: function(toggle) {\n                function run() {\n                    settings.historyState = true;\n                    if (!save_state.length) {\n                        self.save_state();\n                    } else if (terminals.length() > 1) {\n                        self.save_state(null);\n                    }\n                }\n                if (toggle) {\n                    // if set to true and if set from user command we need\n                    // not to include the command\n                    if (typeof window.setImmediate === 'undefined') {\n                        setTimeout(run, 0);\n                    } else {\n                        setImmediate(run);\n                    }\n                } else {\n                    settings.historyState = false;\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: clear the history state\n            // -------------------------------------------------------------\n            clear_history_state: function() {\n                hash_commands = [];\n                save_state = [];\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Switch to the next terminal\n            // -------------------------------------------------------------\n            next: function() {\n                if (terminals.length() === 1) {\n                    return self;\n                } else {\n                    terminals.front().disable();\n                    var next = terminals.rotate().enable();\n                    // 50 provides buffer in viewport\n                    var x = next.offset().top - 50;\n                    $('html,body').animate({scrollTop: x}, 500);\n                    try {\n                        trigger_terminal_change(next);\n                    } catch (e) {\n                        display_exception(e, 'onTerminalChange');\n                    }\n                    return next;\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Make the terminal in focus or blur depending on the first\n            // :: argument. If there is more then one terminal it will\n            // :: switch to next one, if the second argument is set to true\n            // :: the events will be not fired. Used on init\n            // -------------------------------------------------------------\n            focus: function(toggle, silent) {\n                cmd_ready(function ready() {\n                    if (terminals.length() === 1) {\n                        if (toggle === false) {\n                            self.disable(silent);\n                        } else {\n                            self.enable(silent);\n                        }\n                    } else if (toggle === false) {\n                        self.next();\n                    } else {\n                        var front = terminals.front();\n                        if (front !== self) {\n                            // there should be only from terminal enabled but tests\n                            // sometime fail because there where more them one\n                            // where cursor have blink class\n                            terminals.forEach(function(terminal) {\n                                if (terminal !== self && terminal.enabled()) {\n                                    terminal.disable(silent);\n                                }\n                            });\n                            if (!silent) {\n                                try {\n                                    trigger_terminal_change(self);\n                                } catch (e) {\n                                    display_exception(e, 'onTerminalChange');\n                                }\n                            }\n                        }\n                        terminals.set(self);\n                        self.enable(silent);\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Disable/Enable terminal that can be enabled by click\n            // -------------------------------------------------------------\n            freeze: function(freeze) {\n                when_ready(function ready() {\n                    if (freeze) {\n                        self.disable();\n                        frozen = true;\n                    } else {\n                        frozen = false;\n                        self.enable();\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: check if terminal is frozen\n            // -------------------------------------------------------------\n            frozen: function() {\n                return frozen;\n            },\n            // -------------------------------------------------------------\n            // :: Enable the terminal\n            // -------------------------------------------------------------\n            enable: function(silent) {\n                if (!enabled && !frozen) {\n                    if (num_chars === undefined) {\n                        // enabling first time\n                        self.resize();\n                    }\n                    cmd_ready(function ready() {\n                        var ret;\n                        if (!silent && !enabled) {\n                            fire_event('onFocus');\n                        }\n                        if (!silent && ret === undefined || silent) {\n                            enabled = true;\n                            if (!self.paused()) {\n                                command_line.enable(true);\n                            }\n                        }\n                    });\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: function clear formatting cache if you don't longer need it\n            // :: cache is used if option useCache is set to true\n            // -------------------------------------------------------------\n            clear_cache: 'Map' in root ? function() {\n                format_cache.clear();\n                string_cache.clear();\n                return self;\n            } : function() {\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Disable the terminal\n            // -------------------------------------------------------------\n            disable: function(silent) {\n                cmd_ready(function ready() {\n                    var ret;\n                    if (!silent && enabled) {\n                        ret = fire_event('onBlur');\n                    }\n                    if (!silent && ret === undefined || silent) {\n                        enabled = false;\n                        command_line.disable();\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: return true if the terminal is enabled\n            // -------------------------------------------------------------\n            enabled: function() {\n                return enabled;\n            },\n            // -------------------------------------------------------------\n            // :: Return the terminal signature depending on the size of the terminal\n            // -------------------------------------------------------------\n            signature: function() {\n                var cols = self.cols();\n                for (var i = signatures.length; i--;) {\n                    var lengths = signatures[i].map(function(line) {\n                        return line.length;\n                    });\n                    if (Math.max.apply(null, lengths) <= cols) {\n                        return signatures[i].join('\\n') + '\\n';\n                    }\n                }\n                return '';\n            },\n            // -------------------------------------------------------------\n            // :: Return the version number\n            // -------------------------------------------------------------\n            version: function() {\n                return $.terminal.version;\n            },\n            // -------------------------------------------------------------\n            // :: Return actual command line object (jquery object with cmd\n            // :: methods)\n            // -------------------------------------------------------------\n            cmd: function() {\n                return command_line;\n            },\n            // -------------------------------------------------------------\n            // :: Return the current command entered by terminal\n            // -------------------------------------------------------------\n            get_command: function() {\n                return command_line.get();\n            },\n            // -------------------------------------------------------------\n            // :: echo command and previous prompt (used by echo_newline.js)\n            // -------------------------------------------------------------\n            echo_command: function(command) {\n                return echo_command(command);\n            },\n            // -------------------------------------------------------------\n            // :: Change the command line to the new one\n            // -------------------------------------------------------------\n            set_command: function(command, silent) {\n                when_ready(function ready() {\n                    // TODO: refactor to use options - breaking change\n                    if (typeof command !== 'string') {\n                        command = JSON.stringify(command);\n                    }\n                    command_line.set(command, undefined, silent);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Change position of the command line\n            // -------------------------------------------------------------\n            set_position: function(position, relative) {\n                when_ready(function ready() {\n                    command_line.position(position, relative);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return position of the command line\n            // -------------------------------------------------------------\n            get_position: function() {\n                return command_line.position();\n            },\n            // -------------------------------------------------------------\n            // :: Insert text into the command line after the cursor\n            // -------------------------------------------------------------\n            insert: function(string, stay) {\n                if (typeof string === 'string') {\n                    when_ready(function ready() {\n                        var bottom = self.is_bottom();\n                        command_line.insert(string, stay);\n                        if (settings.scrollOnEcho || bottom) {\n                            self.scroll_to_bottom();\n                        }\n                    });\n                    return self;\n                } else {\n                    throw new Error(sprintf(strings().notAString, 'insert'));\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Set the prompt of the command line\n            // -------------------------------------------------------------\n            set_prompt: function(prompt) {\n                when_ready(function ready() {\n                    if (is_function(prompt)) {\n                        command_line.prompt(function(callback) {\n                            prompt.call(self, callback, self);\n                        });\n                    } else {\n                        command_line.prompt(prompt);\n                    }\n                    interpreters.top().prompt = prompt;\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return the prompt used by the terminal\n            // -------------------------------------------------------------\n            get_prompt: function() {\n                return interpreters.top().prompt;\n                // command_line.prompt(); - can be a wrapper\n                //return command_line.prompt();\n            },\n            // -------------------------------------------------------------\n            // :: Enable or Disable mask depedning on the passed argument\n            // :: the mask can also be character (in fact it will work with\n            // :: strings longer then one)\n            // -------------------------------------------------------------\n            set_mask: function(mask) {\n                when_ready(function ready() {\n                    command_line.mask(mask === true ? settings.maskChar : mask);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return the ouput of the terminal as text\n            // -------------------------------------------------------------\n            get_output: function(raw) {\n                if (raw) {\n                    return lines;\n                } else {\n                    return $.map(lines, function(item) {\n                        return is_function(item[0]) ? item[0]() : item[0];\n                    }).join('\\n');\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Recalculate and redraw everything\n            // -------------------------------------------------------------\n            resize: function(width, height) {\n                if (!self.is(':visible')) {\n                    // delay resize if terminal not visible\n                    self.stopTime('resize');\n                    self.oneTime(500, 'resize', function() {\n                        self.resize(width, height);\n                    });\n                } else {\n                    if (width && height) {\n                        self.width(width);\n                        self.height(height);\n                    }\n                    width = self.width();\n                    height = self.height();\n                    if (typeof settings.numChars !== 'undefined' ||\n                        typeof settings.numRows !== 'undefined') {\n                        command_line.resize(settings.numChars);\n                        self.refresh();\n                        fire_event('onResize');\n                        return;\n                    }\n                    var new_num_chars = get_num_chars(self, char_size);\n                    var new_num_rows = get_num_rows(self, char_size);\n                    // only if number of chars changed\n                    if (new_num_chars !== num_chars ||\n                        new_num_rows !== num_rows) {\n                        num_chars = new_num_chars;\n                        num_rows = new_num_rows;\n                        command_line.resize(num_chars);\n                        self.refresh();\n                        fire_event('onResize');\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: redraw the terminal\n            // -------------------------------------------------------------\n            refresh: function() {\n                if (char_size.width !== 0) {\n                    self[0].style.setProperty('--char-width', char_size.width);\n                }\n                redraw({\n                    scroll: false,\n                    update: true\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Flush the output to the terminal\n            // -------------------------------------------------------------\n            flush: function(options) {\n                options = $.extend({}, {\n                    update: false,\n                    scroll: true\n                }, options || {});\n                try {\n                    var bottom = self.is_bottom();\n                    output.css('visibilty', 'hidden');\n                    var wrapper;\n                    // print all lines\n                    // var output_buffer = lines.flush();\n                    while (output_buffer.length) {\n                        var data = output_buffer.shift();\n                        if (data === NEW_LINE) {\n                            wrapper = $(document.createElement('div'));\n                        } else if ($.isPlainObject(data) && is_function(data.finalize)) {\n                            // this is finalize function from echo\n                            if (options.update) {\n                                var selector = '> div[data-index=' + data.index + ']';\n                                var node = output.find(selector);\n                                if (node.html() !== wrapper.html()) {\n                                    node.replaceWith(wrapper);\n                                }\n                            } else {\n                                wrapper.appendTo(output);\n                            }\n                            wrapper.attr('data-index', data.index);\n                            data.finalize(wrapper);\n                        } else {\n                            var line = data.line;\n                            var div = document.createElement('div');\n                            div.style.width = '100%';\n                            div.innerHTML = line;\n                            if (data.newline) {\n                                div.className = 'cmd-end-line';\n                            }\n                            wrapper[0].appendChild(div);\n                        }\n                    }\n                    limit_lines();\n                    output.css('visibilty', '');\n                    fire_event('onFlush');\n                    var offset = self.find('.cmd').offset();\n                    var self_offset = self.offset();\n                    css(self[0], {\n                        '--terminal-x': offset.left - self_offset.left,\n                        '--terminal-y': offset.top - self_offset.top\n                    });\n\n                    if ((settings.scrollOnEcho && options.scroll) || bottom) {\n                        self.scroll_to_bottom();\n                    }\n                } catch (e1) {\n                    if (is_function(settings.exceptionHandler)) {\n                        try {\n                            settings.exceptionHandler.call(self, e1, 'TERMINAL (Flush)');\n                        } catch (e2) {\n                            settings.exceptionHandler = $.noop;\n                            alert_exception('[exceptionHandler]', e2);\n                        }\n                    } else {\n                        alert_exception('[Flush]', e1);\n                    }\n                } finally {\n                    output_buffer = [];\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Update the output line - line number can be negative\n            // -------------------------------------------------------------\n            update: function(line, value, options) {\n                when_ready(function ready() {\n                    if (line < 0) {\n                        line = lines.length + line; // yes +\n                    }\n                    if (!lines[line]) {\n                        self.error('Invalid line number ' + line);\n                    } else if (value === null) {\n                        lines.splice(line, 1);\n                        output.find('[data-index=' + line + ']').remove();\n                    } else {\n                        var ret = prepare_render(value, options);\n                        if (ret) {\n                            value = ret[0];\n                            options = ret[1];\n                        }\n                        lines[line][0] = value;\n                        if (options) {\n                            lines[line][1] = options;\n                        }\n                        process_line({\n                            value: value,\n                            index: line,\n                            options: options\n                        });\n                        self.flush({\n                            scroll: false,\n                            update: true\n                        });\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: convenience method for removing selected line\n            // -------------------------------------------------------------\n            remove_line: function(line) {\n                return self.update(line, null);\n            },\n            // -------------------------------------------------------------\n            // :: return index of last line in case when you need to update\n            // :: after something is echo on the terminal\n            // -------------------------------------------------------------\n            last_index: function() {\n                return lines.length - 1;\n            },\n            // -------------------------------------------------------------\n            // :: Print data to the terminal output. It can have options\n            // :: * flush - indicate that arg should be send to DOM\n            // :: * raw - indicate if it should handle input as html\n            // :: * finalize - function call with container div\n            // :: * keepWords - inform how to wrap text\n            // :: * formatters - inform function if it should use formatters\n            // ::   on input string - good to prevent XSS when you want\n            // ::   advanced server side controling of terminal\n            // :: you can echo: promise, function, strings array or string\n            // -------------------------------------------------------------\n            echo: function(arg, options) {\n                var arg_defined = arguments.length > 0;\n                function echo(arg) {\n                    try {\n                        var locals = $.extend({\n                            flush: true,\n                            exec: true,\n                            raw: settings.raw,\n                            finalize: $.noop,\n                            unmount: $.noop,\n                            keepWords: false,\n                            invokeMethods: settings.invokeMethods,\n                            onClear: null,\n                            formatters: true,\n                            allowedAttributes: settings.allowedAttributes\n                        }, options || {});\n                        // finalize function is passed around and invoked\n                        // in terminal::flush after content is added to DOM\n                        (function(finalize) {\n                            locals.finalize = function(div) {\n                                if (locals.raw) {\n                                    div.addClass('raw');\n                                }\n                                try {\n                                    if (is_function(finalize)) {\n                                        finalize.call(self, div);\n                                    }\n                                    div.find('img').each(function() {\n                                        var self = $(this);\n                                        var img = new Image();\n                                        img.onerror = function() {\n                                            self.replaceWith(use_broken_image);\n                                        };\n                                        img.src = this.src;\n                                    });\n                                } catch (e) {\n                                    display_exception(e, 'USER:echo(finalize)');\n                                    finalize = null;\n                                }\n                            };\n                        })(locals.finalize);\n                        if (locals.flush) {\n                            // flush buffer if there was no flush after previous echo\n                            if (output_buffer.length) {\n                                self.flush();\n                            }\n                        }\n                        if (fire_event('onBeforeEcho', [arg]) === false) {\n                            return;\n                        }\n                        var value;\n                        if (typeof arg === 'function') {\n                            value = arg.bind(self);\n                        } else if (typeof arg === 'undefined') {\n                            if (arg_defined) {\n                                value = String(arg);\n                            } else {\n                                value = '';\n                            }\n                        } else {\n                            var ret = preprocess_value(arg);\n                            if (ret === false) {\n                                return self;\n                            }\n                            value = ret;\n                        }\n                        unpromise(value, function(value) {\n                            if (render(value, locals)) {\n                                return self;\n                            }\n                            process_line({\n                                value: value,\n                                options: locals,\n                                index: lines.length\n                            });\n                            // extended commands should be processed only\n                            // once in echo and not on redraw\n                            locals.exec = false;\n                            lines.push([value, locals]);\n                            if (locals.flush) {\n                                self.flush();\n                                fire_event('onAfterEcho', [arg]);\n                            }\n                        });\n                    } catch (e) {\n                        // if echo throw exception we can't use error to\n                        // display that exception\n                        if (is_function(settings.exceptionHandler)) {\n                            settings.exceptionHandler.call(self, e, 'TERMINAL (echo)');\n                        } else {\n                            alert_exception('[Terminal.echo]', e);\n                        }\n                    }\n                }\n                if (arg !== undefined && is_function(arg.then)) {\n                    $.when(arg).done(echo).catch(make_label_error('Echo'));\n                } else {\n                    echo(arg);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: echo red text\n            // -------------------------------------------------------------\n            error: function(message, options) {\n                options = $.extend({}, options, {raw: false, formatters: false});\n                function format(string) {\n                    if (typeof string !== 'string') {\n                        string = String(string);\n                    }\n                    // quick hack to fix trailing backslash\n                    var str = $.terminal.escape_brackets(string).\n                        replace(/\\\\$/, '&#92;').\n                        replace(url_re, ']$1[[;;;terminal-error]');\n                    return '[[;;;terminal-error]' + str + ']';\n                }\n                if (typeof message === 'function') {\n                    return self.echo(function() {\n                        return format(message.call(self));\n                    }, options);\n                }\n                if (message && message.then) {\n                    message.then(function(string) {\n                        self.echo(format(string));\n                    }).catch(make_label_error('Echo Error'));\n                    return self;\n                }\n                return self.echo(format(message), options);\n            },\n            // -------------------------------------------------------------\n            // :: Display Exception on terminal\n            // -------------------------------------------------------------\n            exception: function(e, label) {\n                var message = exception_message(e);\n                if (label) {\n                    message = '&#91;' + label + '&#93;: ' + message;\n                }\n                if (message) {\n                    self.error(message, {\n                        finalize: function(div) {\n                            div.addClass('terminal-exception terminal-message');\n                        },\n                        keepWords: true\n                    });\n                }\n                if (typeof e.fileName === 'string') {\n                    // display filename and line which throw exeption\n                    self.pause(settings.softPause);\n                    $.get(e.fileName, function(file) {\n                        var num = e.lineNumber - 1;\n                        var line = file.split('\\n')[num];\n                        if (line) {\n                            self.error('[' + e.lineNumber + ']: ' + line);\n                        }\n                        self.resume();\n                    }, 'text');\n                }\n                if (e.stack) {\n                    var stack = $.terminal.escape_brackets(e.stack);\n                    self.echo(stack.split(/\\n/g).map(function(trace) {\n                        // nested formatting will handle urls but that formatting\n                        // can be removed - this code was created before\n                        // that formatting existed (see commit ce01c3f5)\n                        return '[[;;;terminal-error]' +\n                            trace.replace(url_re, function(url) {\n                                return ']' + url + '[[;;;terminal-error]';\n                            }) + ']';\n                    }).join('\\n'), {\n                        finalize: function(div) {\n                            div.addClass('terminal-exception terminal-stack-trace');\n                        },\n                        formatters: false\n                    });\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Scroll Div that holds the terminal\n            // -------------------------------------------------------------\n            scroll: function(amount) {\n                var pos;\n                amount = Math.round(amount);\n                if (self.prop) { // work with jQuery > 1.6\n                    if (amount > self.prop('scrollTop') && amount > 0) {\n                        self.prop('scrollTop', 0);\n                    }\n                    pos = self.prop('scrollTop');\n                    self.scrollTop(pos + amount);\n                } else {\n                    if (amount > self.prop('scrollTop') && amount > 0) {\n                        self.prop('scrollTop', 0);\n                    }\n                    pos = self.prop('scrollTop');\n                    self.scrollTop(pos + amount);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Exit all interpreters and logout. The function will throw\n            // :: exception if there is no login provided\n            // -------------------------------------------------------------\n            logout: function(local) {\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'logout'));\n                }\n                when_ready(function ready() {\n                    if (local) {\n                        var login = logins.pop();\n                        self.set_token(undefined, true);\n                        self.login.apply(self, login);\n                    } else if (interpreters.size() === 1 && self.token()) {\n                        self.logout(true);\n                    } else {\n                        while (interpreters.size() > 1) {\n                            // pop will call global_logout that will call login\n                            // and size will be > 0; this is workaround the problem\n                            if (self.token()) {\n                                self.logout(true).pop().pop();\n                            } else {\n                                self.pop();\n                            }\n                        }\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function returns the token returned by callback function\n            // :: in login function. It does nothing (return undefined) if\n            // :: there is no login\n            // -------------------------------------------------------------\n            token: function(local) {\n                return storage.get(self.prefix_name(local) + '_token');\n            },\n            // -------------------------------------------------------------\n            // :: Function sets the token to the supplied value. This function\n            // :: works regardless of wherer settings.login is supplied\n            // -------------------------------------------------------------\n            set_token: function(token, local) {\n                var name = self.prefix_name(local) + '_token';\n                if (typeof token === 'undefined') {\n                    storage.remove(name);\n                } else {\n                    storage.set(name, token);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function get the token either set by the login method or\n            // :: by the set_token method.\n            // -------------------------------------------------------------\n            get_token: function(local) {\n                return self.token(local);\n            },\n            // -------------------------------------------------------------\n            // :: Function return Login name entered by the user\n            // -------------------------------------------------------------\n            login_name: function(local) {\n                return storage.get(self.prefix_name(local) + '_login');\n            },\n            // -------------------------------------------------------------\n            // :: Function returns the name of current interpreter\n            // -------------------------------------------------------------\n            name: function() {\n                return interpreters.top().name;\n            },\n            // -------------------------------------------------------------\n            // :: Function return prefix name for login/token\n            // -------------------------------------------------------------\n            prefix_name: function(local) {\n                var name = (settings.name ? settings.name + '_' : '') +\n                    terminal_id;\n                if (local && interpreters.size() > 1) {\n                    var local_name = interpreters.map(function(intrp) {\n                        return intrp.name || '';\n                    }).slice(1).join('_');\n                    if (local_name) {\n                        name += '_' + local_name;\n                    }\n                }\n                return name;\n            },\n            // -------------------------------------------------------------\n            // :: wrapper for common use case\n            // -------------------------------------------------------------\n            read: function(message, success, cancel) {\n                // return from read() should not pause terminal\n                force_awake = true;\n                var defer = jQuery.Deferred();\n                var read = false;\n                self.push(function(string) {\n                    read = true;\n                    defer.resolve(string);\n                    if (is_function(success)) {\n                        success(string);\n                    }\n                    self.pop();\n                    if (settings.history) {\n                        command_line.history().enable();\n                    }\n                }, {\n                    name: 'read',\n                    history: false,\n                    prompt: message || '',\n                    onExit: function() {\n                        if (!read) {\n                            defer.reject();\n                            if (is_function(cancel)) {\n                                cancel();\n                            }\n                        }\n                    }\n                });\n                if (settings.history) {\n                    command_line.history().disable();\n                }\n                return defer.promise();\n            },\n            // -------------------------------------------------------------\n            // :: Push a new interenter on the Stack\n            // -------------------------------------------------------------\n            push: function(interpreter, options) {\n                cmd_ready(function ready() {\n                    options = options || {};\n                    var defaults = {\n                        infiniteLogin: false\n                    };\n                    var push_settings = $.extend({}, defaults, options);\n                    if (!push_settings.name && prev_command) {\n                        // push is called in login\n                        push_settings.name = prev_command.name;\n                    }\n                    if (push_settings.prompt === undefined) {\n                        push_settings.prompt = (push_settings.name || '>') + ' ';\n                    }\n                    // names.push(options.name);\n                    var top = interpreters.top();\n                    if (top) {\n                        top.mask = command_line.mask();\n                    }\n                    var was_paused = paused;\n                    function init() {\n                        fire_event('onPush', [top, interpreters.top()]);\n                        prepare_top_interpreter();\n                    }\n                    // self.pause();\n                    make_interpreter(interpreter, options.login, function(ret) {\n                        // result is object with interpreter and completion properties\n                        interpreters.push($.extend({}, ret, push_settings));\n                        if (push_settings.completion === true) {\n                            if ($.isArray(ret.completion)) {\n                                interpreters.top().completion = ret.completion;\n                            } else if (!ret.completion) {\n                                interpreters.top().completion = false;\n                            }\n                        }\n                        if (push_settings.login) {\n                            var error;\n                            var type = get_type(push_settings.login);\n                            if (type === 'function') {\n                                error = push_settings.infiniteLogin ? $.noop : self.pop;\n                                self.login(\n                                    push_settings.login,\n                                    push_settings.infiniteLogin,\n                                    init,\n                                    error\n                                );\n                            } else if (get_type(interpreter) === 'string' &&\n                                       type === 'string' || type === 'boolean') {\n                                error = push_settings.infiniteLogin ? $.noop : self.pop;\n                                self.login(\n                                    make_json_rpc_login(\n                                        interpreter,\n                                        push_settings.login\n                                    ),\n                                    push_settings.infiniteLogin,\n                                    init,\n                                    error\n                                );\n                            }\n                        } else {\n                            init();\n                        }\n                        if (!was_paused && self.enabled()) {\n                            self.resume();\n                        }\n                    });\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove the last interpreter from the Stack\n            // -------------------------------------------------------------\n            pop: function(string, silent) {\n                if (string !== undefined) {\n                    echo_command(string);\n                }\n                var token = self.token(true);\n                var top;\n                if (interpreters.size() === 1) {\n                    top = interpreters.top();\n                    if (settings.login) {\n                        if (!silent) {\n                            fire_event('onPop', [top, null]);\n                        }\n                        global_logout();\n                        fire_event('onExit');\n                    } else {\n                        self.error(strings().canExitError);\n                    }\n                } else {\n                    if (token) {\n                        clear_loging_storage();\n                    }\n                    var current = interpreters.pop();\n                    top = interpreters.top();\n                    prepare_top_interpreter();\n                    // restore mask\n                    self.set_mask(top.mask);\n                    if (!silent) {\n                        fire_event('onPop', [current, top]);\n                    }\n                    // we check in case if you don't pop from password interpreter\n                    if (in_login && self.get_prompt() !== strings().login + ': ') {\n                        in_login = false;\n                    }\n                    if (is_function(current.onExit)) {\n                        try {\n                            current.onExit.call(self, self);\n                        } catch (e) {\n                            current.onExit = $.noop;\n                            display_exception(e, 'onExit');\n                        }\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Change terminal option(s) at runtime\n            // -------------------------------------------------------------\n            option: function(object_or_name, value) {\n                if (typeof value === 'undefined') {\n                    if (typeof object_or_name === 'string') {\n                        return settings[object_or_name];\n                    } else if (typeof object_or_name === 'object') {\n                        $.each(object_or_name, function(key, value) {\n                            settings[key] = value;\n                        });\n                    }\n                } else {\n                    settings[object_or_name] = value;\n                    if (object_or_name.match(/^num(Chars|Rows)$/)) {\n                        redraw();\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: invoke keydown shorcut\n            // -------------------------------------------------------------\n            invoke_key: function(shortcut) {\n                command_line.invoke_key(shortcut);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: change terminal keymap at runtime\n            // -------------------------------------------------------------\n            keymap: function(keymap, fn) {\n                if (arguments.length === 0) {\n                    return command_line.keymap();\n                }\n                if (typeof fn === 'undefined') {\n                    if (typeof keymap === 'string') {\n                        return command_line.keymap(keymap);\n                    } else if ($.isPlainObject(keymap)) {\n                        // argument is an object\n                        keymap = $.omap(keymap || {}, function(key, fn) {\n                            if (!new_keymap[key]) {\n                                return fn.bind(self);\n                            }\n                            return function(e, original) {\n                                // new keymap function will get default as 2nd argument\n                                return fn.call(self, e, function() {\n                                    return new_keymap[key](e, original);\n                                });\n                            };\n                        });\n                        command_line.keymap(keymap);\n                    }\n                } else if (typeof fn === 'function') {\n                    var key = keymap;\n                    if (!new_keymap[key]) {\n                        command_line.keymap(key, fn.bind(self));\n                    } else {\n                        command_line.keymap(key, function(e, original) {\n                            return fn.call(self, e, function() {\n                                return new_keymap[key](e, original);\n                            });\n                        });\n                    }\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Return how deep you are in nested interpreters\n            // -------------------------------------------------------------\n            level: function() {\n                return interpreters.size();\n            },\n            // -------------------------------------------------------------\n            // :: Reinitialize the terminal\n            // -------------------------------------------------------------\n            reset: function() {\n                when_ready(function ready() {\n                    self.clear();\n                    while (interpreters.size() > 1) {\n                        interpreters.pop();\n                    }\n                    initialize();\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove all local storage left by terminal, it will not\n            // :: logout you until you refresh the browser\n            // -------------------------------------------------------------\n            purge: function() {\n                when_ready(function ready() {\n                    var prefix = self.prefix_name() + '_';\n                    var names = storage.get(prefix + 'interpreters');\n                    if (names) {\n                        $.each(JSON.parse(names), function(_, name) {\n                            storage.remove(name + '_commands');\n                            storage.remove(name + '_token');\n                            storage.remove(name + '_login');\n                        });\n                    }\n                    command_line.purge();\n                    storage.remove(prefix + 'interpreters');\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove all events and DOM nodes left by terminal, it will\n            // :: not purge the terminal so you will have the same state\n            // :: when you refresh the browser\n            // -------------------------------------------------------------\n            destroy: function() {\n                when_ready(function ready() {\n                    command_line.destroy().remove();\n                    self.resizer('unbind');\n                    self.touch_scroll('unbind');\n                    font_resizer.resizer('unbind').remove();\n                    $(document).unbind('.terminal_' + self.id());\n                    $(window).unbind('.terminal_' + self.id());\n                    self.unbind('click wheel mousewheel mousedown mouseup');\n                    self.removeData('terminal').removeClass('terminal').\n                        unbind('.terminal');\n                    if (settings.width) {\n                        self.css('width', '');\n                    }\n                    if (settings.height) {\n                        self.css('height', '');\n                    }\n                    $(window).off('blur', blur_terminal).\n                        off('focus', focus_terminal);\n                    self.find('.terminal-fill, .terminal-font').remove();\n                    self.stopTime();\n                    terminals.remove(terminal_id);\n                    if (visibility_observer) {\n                        if (visibility_observer.unobserve) {\n                            visibility_observer.unobserve(self[0]);\n                        } else {\n                            clearInterval(visibility_observer);\n                        }\n                    }\n                    var scroll_marker = self.find('.terminal-scroll-marker');\n                    if (is_bottom_observer) {\n                        visibility_observer.unobserve(scroll_marker[0]);\n                    }\n                    scroll_marker.remove();\n                    if (mutation_observer) {\n                        mutation_observer.disconnect();\n                    }\n                    if (!terminals.length()) {\n                        $(window).off('hashchange');\n                    }\n                    if (is_mobile) {\n                        self.off([\n                            'touchstart.terminal',\n                            'touchmove.terminal',\n                            'touchend.terminal'\n                        ].join(' '));\n                    }\n                    output.remove();\n                    wrapper.remove();\n                    if (body_terminal) {\n                        var $body = $(body_terminal);\n                        if ($body.attr('class') === 'full-screen-terminal') {\n                            $body.removeAttr('class');\n                        } else {\n                            $body.removeClass('full-screen-terminal');\n                        }\n                        self.remove();\n                    }\n                    defunct = true;\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: ref: https://stackoverflow.com/a/18927969/387194\n            // -------------------------------------------------------------\n            scroll_to: function(elem) {\n                var scroll = self.scrollTop() - self.offset().top + $(elem).offset().top;\n                self.scrollTop(scroll);\n                return self;\n            },\n            // -------------------------------------------------------------\n            scroll_to_bottom: function() {\n                var scrollHeight;\n                if (self.prop) {\n                    scrollHeight = self.prop('scrollHeight');\n                } else {\n                    scrollHeight = self.attr('scrollHeight');\n                }\n                self.scrollTop(scrollHeight);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: return true if terminal div or body is at the bottom\n            // :: is use scrollBottomOffset option as margin for the check\n            // -------------------------------------------------------------\n            is_bottom: function() {\n                if (settings.scrollBottomOffset === -1) {\n                    return false;\n                } else if (typeof is_bottom_detected === 'boolean') {\n                    return is_bottom_detected;\n                } else {\n                    var scroll_height, scroll_top, height;\n                    scroll_height = self[0].scrollHeight;\n                    scroll_top = self[0].scrollTop;\n                    height = self[0].offsetHeight;\n                    var limit = scroll_height - settings.scrollBottomOffset;\n                    return scroll_top + height > limit;\n                }\n            }\n        }, function(name, fun) {\n            // wrap all functions and display execptions\n            return function() {\n                if (defunct) {\n                    if (!settings.exceptionHandler) {\n                        throw new $.terminal.Exception(strings().defunctTerminal);\n                    }\n                }\n                try {\n                    return fun.apply(self, [].slice.apply(arguments));\n                } catch (e) {\n                    // exec catch by command (resume call exec)\n                    if (name !== 'exec' && name !== 'resume') {\n                        display_exception(e, e.type || 'TERMINAL', true);\n                    }\n                    if (!settings.exceptionHandler) {\n                        throw e;\n                    }\n                }\n            };\n        }));\n        // -----------------------------------------------------------------\n        // :: INIT CODE\n        // -----------------------------------------------------------------\n        if (self.length === 0) {\n            var msg = sprintf(strings().invalidSelector);\n            throw new $.terminal.Exception(msg);\n        }\n        self.data('terminal', self);\n        // var names = []; // stack if interpreter names\n        var prev_command; // used for name on the terminal if not defined\n        var prev_exec_cmd;\n        var tab_count = 0; // for tab completion\n        var output; // .terminal-output jquery object\n        var terminal_id = terminals.length();\n        var force_awake = false; // flag used to don't pause when user return read() call\n        var num_chars; // numer of chars in line\n        var num_rows; // number of lines that fit without scrollbar\n        var command; // for tab completion\n        var logins = new Stack(); // stack of logins\n        var command_queue = new DelayQueue();\n        var init_queue = new DelayQueue();\n        var when_ready = ready(init_queue);\n        var cmd_ready = ready(command_queue);\n        var is_bottom_detected;\n        var is_bottom_observer;\n        var in_login = false;// some Methods should not be called when login\n        // TODO: Try to use mutex like counter for pause/resume\n        var onPause = $.noop;// used to indicate that user call pause onInit\n        var old_width, old_height;\n        var delayed_commands = []; // used when exec commands while paused\n        var settings = $.extend(\n            {},\n            $.terminal.defaults,\n            {\n                name: self.selector,\n                exit: !!(options && options.login || !options)\n            },\n            options || {}\n        );\n        if (typeof settings.width === 'number') {\n            self.width(settings.width);\n        }\n        if (typeof settings.height === 'number') {\n            self.height(settings.height);\n        }\n        var char_size = get_char_size(self);\n        // so it's the same as in TypeScript definition for options\n        delete settings.formatters;\n        // used to throw error when calling methods on destroyed terminal\n        var defunct = false;\n        var lines = [];\n        var storage = new StorageHelper(settings.memory);\n        var enabled = settings.enabled;\n        var frozen = false;\n        var paused = false;\n        var autologin = true; // set to false if onBeforeLogin return false\n        var interpreters;\n        var command_line;\n        var old_enabled;\n        var visibility_observer;\n        var mutation_observer;\n        // backward compatibility\n        if (settings.ignoreSystemDescribe === true) {\n            settings.describe = false;\n        }\n        // register ajaxSend for cancel requests on CTRL+D\n        $(document).bind('ajaxSend.terminal_' + self.id(), function(e, xhr) {\n            requests.push(xhr);\n        });\n        var wrapper = $('<div class=\"terminal-wrapper\"/>').appendTo(self);\n        $(broken_image).hide().appendTo(wrapper);\n        var font_resizer = $('<div class=\"terminal-font\">&nbsp;</div>').appendTo(self);\n        var fill = $('<div class=\"terminal-fill\"/>').appendTo(self);\n        output = $('<div>').addClass('terminal-output').attr('role', 'log')\n            .appendTo(wrapper);\n        self.addClass('terminal');\n        // before login event\n        if (settings.login && fire_event('onBeforeLogin') === false) {\n            autologin = false;\n        }\n        // create json-rpc authentication function\n        var base_interpreter;\n        if (typeof init_interpreter === 'string') {\n            base_interpreter = init_interpreter;\n        } else if (is_array(init_interpreter)) {\n            // first JSON-RPC\n            for (var i = 0, len = init_interpreter.length; i < len; ++i) {\n                if (typeof init_interpreter[i] === 'string') {\n                    base_interpreter = init_interpreter[i];\n                    break;\n                }\n            }\n        }\n        var global_login_fn;\n        if (is_function(settings.login)) {\n            global_login_fn = settings.login;\n        } else if (base_interpreter &&\n            (typeof settings.login === 'string' || settings.login === true)) {\n            global_login_fn = make_json_rpc_login(base_interpreter, settings.login);\n        }\n        terminals.append(self);\n        function focus_terminal() {\n            if (old_enabled) {\n                self.focus();\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function blur_terminal() {\n            old_enabled = enabled;\n            self.disable().find('.cmd textarea').trigger('blur', [true]);\n        }\n        // -------------------------------------------------------------------------------\n        function stringify_value(value) {\n            if (is_function(value)) {\n                value = value();\n            }\n            if (get_type(value) !== 'string') {\n                if (is_function(settings.parseObject)) {\n                    var ret = settings.parseObject(value);\n                    if (get_type(ret) === 'string') {\n                        value = ret;\n                    }\n                } else if (is_array(value)) {\n                    value = $.terminal.columns(value, self.cols(), settings.tabs);\n                } else {\n                    value = String(value);\n                }\n            }\n            return value;\n        }\n        // -------------------------------------------------------------------------------\n        function context_callback_proxy(fn) {\n            if (fn.proxy) {\n                return fn;\n            }\n            var wrapper = function(callback) {\n                return fn.call(self, callback, self);\n            };\n            wrapper.proxy = true;\n            return wrapper;\n        }\n        // -------------------------------------------------------------------------------\n        // paste event is not testable in node\n        // istanbul ignore next\n        function paste_event(e) {\n            e = e.originalEvent;\n            // we don't care about browser that don't support clipboard data\n            // those browser simple will not have this feature normal paste\n            // is cross-browser and it's handled by cmd plugin\n            function is_type(item, type) {\n                return item.type.indexOf(type) !== -1;\n            }\n            function echo_image(image) {\n                self.echo('<img src=\"' + image + '\"/>', {raw: true});\n            }\n            function data_uri(blob) {\n                var URL = window.URL || window.webkitURL;\n                return URL.createObjectURL(blob);\n            }\n            function echo(object, ignoreEvents) {\n                if (!ignoreEvents && is_function(settings.onPaste)) {\n                    var event = {\n                        target: self\n                    };\n                    if (typeof object === 'string') {\n                        event['text'] = object;\n                    } else if (object instanceof Blob) {\n                        event['image'] = data_uri(object);\n                    }\n                    var ret = fire_event('onPaste', [event]);\n                    if (ret) {\n                        if (is_function(ret.then || ret.done)) {\n                            return (ret.then || ret.done).call(ret, function(ret) {\n                                echo(ret, true);\n                            });\n                        } else {\n                            echo(ret, true);\n                        }\n                    } else {\n                        echo(event.image || event.text, true);\n                    }\n                } else if (object instanceof Blob) {\n                    echo_image(data_uri(object));\n                } else if (typeof object === 'string') {\n                    if (object.match(/^(data:|blob:)/)) {\n                        echo_image(object);\n                    } else {\n                        self.insert(object);\n                    }\n                }\n            }\n            if (e.clipboardData) {\n                if (self.enabled()) {\n                    var items = e.clipboardData.items;\n                    if (items) {\n                        for (var i = 0; i < items.length; i++) {\n                            if (is_type(items[i], 'image') && settings.pasteImage) {\n                                var blob = items[i].getAsFile();\n                                echo(blob);\n                            } else if (is_type(items[i], 'text/plain')) {\n                                items[i].getAsString(echo);\n                            }\n                        }\n                    } else if (e.clipboardData.getData) {\n                        var text = e.clipboardData.getData('text/plain');\n                        echo(text);\n                    }\n                    return false;\n                }\n            }\n        }\n        $(document).on('paste.terminal_' + self.id(), paste_event);\n        var new_keymap = $.extend(\n            {},\n            keymap,\n            $.omap(settings.keymap || {}, function(key, fn) {\n                if (!keymap[key]) {\n                    return fn.bind(self);\n                }\n                return function(e, original) {\n                    // new keymap function will get default as 2nd argument\n                    return fn.call(self, e, function() {\n                        return keymap[key](e, original);\n                    });\n                };\n            })\n        );\n        make_interpreter(init_interpreter, settings.login, function(interpreter) {\n            if (settings.completion && typeof settings.completion !== 'boolean' ||\n                !settings.completion) {\n                // overwrite interpreter completion by global setting #224\n                // we use string to indicate that it need to be taken from settings\n                // so we are able to change it using option API method\n                interpreter.completion = 'settings';\n            }\n            var prompt = settings.prompt;\n            if (is_function(prompt)) {\n                prompt = context_callback_proxy(prompt);\n            }\n            interpreters = new Stack($.extend({}, settings.extra, {\n                name: settings.name,\n                prompt: prompt,\n                keypress: settings.keypress,\n                keydown: settings.keydown,\n                resize: settings.onResize,\n                greetings: settings.greetings,\n                mousewheel: settings.mousewheel,\n                history: settings.history,\n                keymap: new_keymap\n            }, interpreter));\n            // CREATE COMMAND LINE\n            command_line = $('<div/>').appendTo(wrapper).cmd({\n                tabindex: settings.tabindex,\n                mobileDelete: settings.mobileDelete,\n                mobileIngoreAutoSpace: settings.mobileIngoreAutoSpace,\n                prompt: global_login_fn ? false : prompt,\n                history: settings.memory ? 'memory' : settings.history,\n                historyFilter: settings.historyFilter,\n                historySize: settings.historySize,\n                caseSensitiveSearch: settings.caseSensitiveSearch,\n                onPaste: settings.onPaste,\n                width: '100%',\n                enabled: false,\n                char_width: char_size.width,\n                keydown: key_down,\n                keymap: new_keymap,\n                clickTimeout: settings.clickTimeout,\n                holdTimeout: settings.holdTimeout,\n                holdRepeatTimeout: settings.holdRepeatTimeout,\n                repeatTimeoutKeys: settings.repeatTimeoutKeys,\n                allowedAttributes: settings.allowedAttributes,\n                keypress: key_press,\n                tabs: settings.tabs,\n                onPositionChange: function() {\n                    var args = [].slice.call(arguments);\n                    make_cursor_visible();\n                    fire_event('onPositionChange', args);\n                },\n                onCommandChange: function(command) {\n                    // resize is not triggered when insert called just after init\n                    //  and scrollbar appear\n                    if (old_width !== fill.width()) {\n                        // resizer handler will update old_width\n                        self.resizer();\n                    }\n                    fire_event('onCommandChange', [command]);\n                    make_cursor_visible();\n                },\n                commands: commands\n            });\n            function disable(e) {\n                if (is_mobile) {\n                    return;\n                }\n                e = e.originalEvent;\n                if (e) {\n                    // e.terget is body when click outside of context menu to close it\n                    // even if you click on terminal\n                    var node = document.elementFromPoint(e.clientX, e.clientY);\n                    if (!$(node).closest('.terminal').length && self.enabled()) {\n                        // we only need to disable when click outside of terminal\n                        // click on other terminal is handled by focus event\n                        self.disable();\n                    }\n                }\n            }\n            self.oneTime(100, function() {\n                $(document).bind('click.terminal_' + self.id(), disable).\n                    bind('contextmenu.terminal_' + self.id(), disable);\n            });\n            var $win = $(window);\n            // cordova application, if keyboard was open and we resume, it will be\n            // closed so we need to disable terminal so you can enable it with tap\n            document.addEventListener(\"resume\", function() {\n                self.disable();\n            });\n            // istanbul ignore next\n            if (is_mobile) {\n                (function() {\n                    self.addClass('terminal-mobile');\n                    var start;\n                    var move;\n                    var enabled;\n                    var SENSITIVITY = 3;\n                    var clip = command_line.clip();\n                    var HOLD_TIME = 200;\n                    var timer;\n                    clip.$node.off('touchstart.cmd');\n                    self.on('touchstart.terminal', function(e) {\n                        e = e.originalEvent;\n                        window.touch_event = e;\n                        if (e.target.tagName.toLowerCase() === 'a') {\n                            return;\n                        }\n                        if (!frozen && e.touches.length === 1) {\n                            enabled = self.enabled();\n                            var point = e.touches[0];\n                            start = {\n                                x: point.clientX,\n                                y: point.clientY\n                            };\n                            timer = setTimeout(function() {\n                                start = null;\n                            }, HOLD_TIME);\n                        }\n                    }).on('touchmove.terminal', function(e) {\n                        if (e.touches.length === 1 && start) {\n                            var point = e.touches[0];\n                            var diff_x = Math.abs(point.clientX - start.x);\n                            var diff_y = Math.abs(point.clientY - start.y);\n                            if (diff_x > SENSITIVITY || diff_y > SENSITIVITY) {\n                                move = true;\n                            }\n                        }\n                    }).on('touchend.terminal', function() {\n                        if (start) {\n                            clearTimeout(timer);\n                            if (!move) {\n                                if (!enabled) {\n                                    clip.focus();\n                                    self.focus();\n                                } else {\n                                    clip.blur();\n                                    self.disable();\n                                }\n                            }\n                        }\n                        move = false;\n                        start = null;\n                    });\n                })();\n            } else {\n                // work weird on mobile\n                $win.on('focus.terminal_' + self.id(), focus_terminal).\n                    on('blur.terminal_' + self.id(), blur_terminal);\n                // detect mouse drag\n                (function() {\n                    var count = 0;\n                    var $target;\n                    var name = 'click_' + self.id();\n                    var textarea = self.find('.cmd textarea');\n                    function click() {\n                        if ($target.is('.terminal') ||\n                            $target.is('.terminal-wrapper')) {\n                            var len = self.get_command().length;\n                            self.set_position(len);\n                        } else if ($target.closest('.cmd-prompt').length) {\n                            self.set_position(0);\n                        }\n                        if (!textarea.is(':focus')) {\n                            var offset = command_line.offset();\n                            var self_offset = self.offset();\n                            textarea.css({\n                                left: self_offset.left - offset.left,\n                                top: Math.max(self_offset.top - offset.top, 0)\n                            }).focus();\n                            self.stopTime('focus');\n                            self.oneTime(10, 'focus', function() {\n                                textarea.css({\n                                    left: '',\n                                    top: ''\n                                });\n                            });\n                        }\n                        reset();\n                    }\n                    function reset() {\n                        count = 0;\n                        $target = null;\n                    }\n                    var ignore_elements = '.terminal-output textarea,' +\n                        '.terminal-output input';\n                    self.mousedown(function(e) {\n                        if (!scrollbar_event(e, fill)) {\n                            $target = $(e.target);\n                        }\n                    }).mouseup(function() {\n                        if ($target && $target.closest(ignore_elements).length) {\n                            if (enabled) {\n                                self.disable();\n                            }\n                        } else if (get_selected_html() === '' && $target) {\n                            if (++count === 1) {\n                                if (!frozen) {\n                                    if (!enabled) {\n                                        self.focus();\n                                    } else {\n                                        var timeout = settings.clickTimeout;\n                                        self.oneTime(timeout, name, click);\n                                        return;\n                                    }\n                                }\n                            } else {\n                                self.stopTime(name);\n                            }\n                        }\n                        reset();\n                    }).dblclick(function() {\n                        reset();\n                        self.stopTime(name);\n                    });\n                })();\n                (function() {\n                    var $clip = command_line.clip().$node;\n                    function is_context_event(e) {\n                        return e.type === 'mousedown' && e.buttons === 2 ||\n                            e.type === 'contextmenu';\n                    }\n                    self.on('contextmenu.terminal mousedown.terminal', function(e) {\n                        if (get_selected_html() === '' && is_context_event(e)) {\n                            if (!$(e.target).is('img,value,audio,object,canvas,a')) {\n                                if (!self.enabled()) {\n                                    self.enable();\n                                }\n                                var offset = command_line.offset();\n                                $clip.css({\n                                    left: e.pageX - offset.left - 20,\n                                    top: e.pageY - offset.top - 20,\n                                    width: '5em',\n                                    height: '4em'\n                                });\n                                if (!$clip.is(':focus')) {\n                                    $clip.focus();\n                                }\n                                self.stopTime('textarea');\n                                self.oneTime(100, 'textarea', function() {\n                                    var props = {\n                                        left: '',\n                                        top: '',\n                                        width: '',\n                                        height: ''\n                                    };\n                                    if (!is_css_variables_supported) {\n                                        var in_line = self.find('.cmd .cmd-cursor-line')\n                                            .prevUntil('.cmd-prompt').length;\n                                        props.top = in_line * 14 + 'px';\n                                    }\n                                    $clip.css(props);\n                                });\n                                self.stopTime('selection');\n                                self.everyTime(20, 'selection', function() {\n                                    if ($clip[0].selection !== $clip[0].value) {\n                                        if (get_textarea_selection($clip[0])) {\n                                            clear_textarea_selection($clip[0]);\n                                            select(\n                                                self.find('.terminal-output')[0],\n                                                self.find('.cmd div:last-of-type')[0]\n                                            );\n                                            self.stopTime('selection');\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                    });\n                })();\n            }\n            self.on('click', 'a', function(e) {\n                var $this = $(this);\n                if ($this.closest('.terminal-exception').length) {\n                    var href = $this.attr('href');\n                    if (href.match(/:[0-9]+$/)) { // display line if specified\n                        e.preventDefault();\n                        print_line(href, self.cols());\n                    }\n                }\n                // refocus because links have tabindex in case where user want\n                // tab change urls, we can ignore this function on click\n                if (enabled) {\n                    self.find('.cmd textarea').focus();\n                }\n            });\n            function calculate_char_size() {\n                var width = char_size.width;\n                char_size = get_char_size(self);\n                if (width !== char_size.width) {\n                    command_line.option('char_width', char_size.width).refresh();\n                }\n            }\n            resize();\n            function resize() {\n                if (self.is(':visible')) {\n                    var width = fill.width();\n                    var height = fill.height();\n                    // prevent too many calculations in IE\n                    if (old_height !== height || old_width !== width) {\n                        self.resize();\n                    }\n                    old_height = height;\n                    old_width = width;\n                }\n            }\n            function create_resizers() {\n                var options = {\n                    prefix: 'terminal-'\n                };\n                self.resizer('unbind').resizer(resize, options);\n                font_resizer.resizer('unbind').resizer(function() {\n                    calculate_char_size();\n                    self.resize();\n                }, options);\n            }\n            function bottom_detect(intersections) {\n                is_bottom_detected = intersections[0].intersectionRatio === 1;\n            }\n            function create_bottom_detect() {\n                if (window.IntersectionObserver) {\n                    var top = $('<div class=\"terminal-scroll-marker\"/>').appendTo(self);\n                    var marker = top;\n                    if (settings.scrollBottomOffset !== -1) {\n                        marker = $('<div/>').css({\n                            height: settings.scrollBottomOffset\n                        }).appendTo(top);\n                    }\n                    is_bottom_observer = new IntersectionObserver(bottom_detect, {\n                        root: self[0]\n                    });\n                    is_bottom_observer.observe(marker[0]);\n                }\n            }\n            // this observer can be added imedietely even if terminal is not in the DOM\n            // because both of the elements (root and target) are in same fragment\n            create_bottom_detect();\n            if (self.is(':visible')) {\n                create_resizers();\n            }\n            function observe_visibility() {\n                if (visibility_observer) {\n                    if (visibility_observer.unobserve) {\n                        visibility_observer.unobserve(self[0]);\n                    } else {\n                        clearInterval(visibility_observer);\n                    }\n                }\n                var was_enabled = self.enabled();\n                var visible = self.is(':visible');\n                if (was_enabled && !visible) {\n                    self.disable();\n                }\n                if (visible) {\n                    create_resizers();\n                } else {\n                    // hide terminal content until it's resized (and num chars calculated)\n                    wrapper.css('visibility', 'hidden');\n                }\n                function visibility_checker() {\n                    if (self.is(':visible') && !visible) {\n                        visible = true;\n                        create_resizers();\n                        calculate_char_size();\n                        resize();\n                        if (was_enabled) {\n                            self.enable();\n                        }\n                        wrapper.css('visibility', '');\n                    } else if (visible && !self.is(':visible')) {\n                        visible = false;\n                        was_enabled = $.terminal.active() === self && self.enabled();\n                        self.disable();\n                        wrapper.css('visibility', 'hidden');\n                    }\n                }\n                if (window.IntersectionObserver && self.css('position') !== 'fixed') {\n                    visibility_observer = new IntersectionObserver(visibility_checker, {\n                        root: null\n                    });\n                    visibility_observer.observe(self[0]);\n                } else {\n                    visibility_observer = setInterval(visibility_checker, 100);\n                }\n            }\n            var in_dom = !!self.closest('body').length;\n            var MutationObsrv = window.MutationObserver || window.WebKitMutationObserver;\n            if (MutationObsrv) {\n                mutation_observer = new MutationObsrv(function() {\n                    if (self.closest('body').length) {\n                        if (!in_dom) {\n                            self.scroll_to_bottom();\n                            // this observer need to be added when terminal is in the DOM\n                            observe_visibility();\n                            resize();\n                        }\n                        in_dom = true;\n                    } else if (in_dom) {\n                        in_dom = false;\n                    }\n                });\n                mutation_observer.observe(document.body, {childList: true});\n            }\n            if (in_dom) {\n                // check if element is in the DOM if not running IntersectionObserver\n                // don't make sense\n                observe_visibility();\n            }\n            command_queue.resolve();\n            // touch devices need touch event to get virtual keyboard\n            if (enabled && self.is(':visible') && !is_mobile) {\n                self.focus(undefined, true);\n            } else {\n                self.disable();\n            }\n            // -------------------------------------------------------------\n            // Run Login\n            if (is_function(global_login_fn)) {\n                self.login(global_login_fn, true, initialize);\n            } else {\n                initialize();\n            }\n            // -------------------------------------------------------------\n            // :: helper\n            function exec_spec(spec) {\n                var terminal = terminals.get()[spec[0]];\n                // execute if belong to this terminal\n                if (terminal && terminal_id === terminal.id()) {\n                    if (!spec[2]) {\n                        defer.resolve();\n                        return defer.promise();\n                    } else if (paused) {\n                        var defer = $.Deferred();\n                        resume_callbacks.push(function() {\n                            return terminal.exec(spec[2]).done(function() {\n                                terminal.save_state(spec[2], true, spec[1]);\n                                defer.resolve();\n                            });\n                        });\n                        return defer.promise();\n                    } else {\n                        return terminal.exec(spec[2]).done(function() {\n                            terminal.save_state(spec[2], true, spec[1]);\n                        });\n                    }\n                }\n            }\n            // exec from hash called in each terminal instance\n            if (settings.execHash) {\n                if (location.hash) {\n                    // wait until login is initialized\n                    setTimeout(function() {\n                        try {\n                            var hash = location.hash.replace(/^#/, '');\n                            // yes no var - local inside terminal\n                            hash_commands = JSON.parse(decodeURIComponent(hash));\n                            var i = 0;\n                            (function recur() {\n                                var spec = hash_commands[i++];\n                                if (spec) {\n                                    exec_spec(spec).done(recur);\n                                } else {\n                                    change_hash = true;\n                                }\n                            })();// */\n                        } catch (e) {\n                            // invalid json - ignore\n                        }\n                    });\n                } else {\n                    change_hash = true;\n                }\n            } else {\n                change_hash = true; // if enabled later\n            }\n            // change_hash = true; // exec can now change hash\n            // -------------------------------------------------------------\n            /* istanbul ignore next */\n            (function() {\n                var shift = false;\n                $(document).bind('keydown.terminal_' + self.id(), function(e) {\n                    if (e.shiftKey) {\n                        shift = true;\n                    }\n                }).bind('keyup.terminal_' + self.id(), function(e) {\n                    // in Google Chromium/Linux shiftKey is false\n                    if (e.shiftKey || e.which === 16) {\n                        shift = false;\n                    }\n                });\n                // this could work without calling scroll on wheel event but we\n                // need it for cases where you have mouse wheel work differently\n                // like with less command that scroll text\n                function mousewheel(event, delta) {\n                    if (!shift) {\n                        var interpreter = interpreters.top();\n                        var ret;\n                        if (is_function(interpreter.mousewheel)) {\n                            ret = interpreter.mousewheel(event, delta, self);\n                        } else if (is_function(settings.mousewheel)) {\n                            ret = settings.mousewheel(event, delta, self);\n                        }\n                        if (ret === true) {\n                            return;\n                        }\n                        if ((have_scrollbar() || ret === false) && !event.ctrlKey) {\n                            event.stopPropagation();\n                            event.preventDefault();\n                        }\n                        if (ret === false) {\n                            return false;\n                        }\n                        if (delta > 0) {\n                            self.scroll(-40);\n                        } else {\n                            self.scroll(40);\n                        }\n                    }\n                }\n                if ($.event.special.mousewheel) {\n                    // we keep mousewheel plugin just in case\n                    self.on('mousewheel', mousewheel);\n                } else {\n                    // detection take from:\n                    // https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n                    var event;\n                    var div = document.createElement(\"div\");\n                    if (\"onwheel\" in div) {\n                        event = \"wheel\"; // Modern browsers support \"wheel\"\n                    } else if (document.onmousewheel !== undefined) {\n                        // Webkit and IE support at least \"mousewheel\"\n                        event = \"mousewheel\";\n                    } else {\n                        // let's assume that remaining browsers are older Firefox\n                        event = \"DOMMouseScroll\";\n                    }\n                    div = null;\n                    self.on(event, function(e) {\n                        var delta;\n                        if (event === 'mousewheel') {\n                            delta = - 1 / 40 * e.originalEvent.wheelDelta;\n                        } else {\n                            delta = e.originalEvent.deltaY || e.originalEvent.detail;\n                        }\n                        mousewheel(e, -delta);\n                    });\n                }\n                self.touch_scroll(function(event) {\n                    var delta = event.current.clientY - event.previous.clientY;\n                    var ret;\n                    var interpreter = interpreters.top();\n                    if (is_function(interpreter.touchscroll)) {\n                        ret = interpreter.touchscroll(event, delta, self);\n                    } else if (is_function(settings.touchscroll)) {\n                        ret = settings.touchscroll(event, delta, self);\n                    }\n                    if (ret === true) {\n                        return;\n                    }\n                    return false;\n                });\n            })();\n        }); // make_interpreter\n        return self;\n    }; // terminal plugin\n});\n"]}